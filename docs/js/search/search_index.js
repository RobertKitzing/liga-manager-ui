var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.542,1,3.281]],["body/interfaces/AddMatchData.html",[0,0.921,1,6.014,2,3.025,3,0.12,4,0.12,5,0.109,6,4.858,7,0.899,8,4.339,9,4.858,10,0.331,11,0.599,12,2.1,13,2.147,14,1.799,15,5.662,16,5.576,17,0.546,18,0.008,19,1.665,20,6.087,21,0.906,22,0.193,23,3.586,24,3.025,25,4.575,26,1.985,27,0.743,28,1.944,29,2.864,30,4.137,31,0.12,32,4.492,33,4.137,34,6.386,35,3.961,36,3.961,37,3.535,38,3.668,39,3.308,40,3.099,41,1.906,42,2.159,43,3.4,44,2.588,45,1.241,46,1.834,47,1.505,48,1.765,49,1.731,50,2.07,51,2.864,52,2.864,53,2.939,54,2.652,55,0.158,56,1.834,57,2.111,58,1.765,59,2.147,60,1.595,61,1.534,62,2.102,63,1.595,64,5.212,65,0.131,66,1.658,67,1.534,68,5.212,69,5.212,70,5.212,71,5.212,72,5.212,73,5.212,74,5.212,75,5.212,76,1.505,77,5.212,78,3.17,79,3.663,80,5.212,81,5.212,82,1.193,83,2.366,84,5.212,85,2.097,86,2.527,87,5.212,88,2.652,89,4.575,90,3.025,91,2.412,92,4.858,93,4.858,94,4.137,95,4.858,96,6.352,97,5.212,98,5.212,99,6.852,100,5.212,101,6.852,102,5.212,103,1.595,104,5.212,105,5.212,106,5.212,107,1.602,108,5.212,109,5.212,110,5.212,111,3.208,112,1.831,113,5.212,114,2.159,115,2.027,116,5.212,117,1.534,118,6.352,119,1.564,120,5.212,121,5.212,122,5.212,123,1.564,124,5.212,125,1.564,126,5.212,127,1.564,128,5.212,129,3.208,130,1.483,131,5.212,132,5.212,133,1.315,134,1.081,135,2.652,136,5.212,137,3.961,138,2.114,139,2.231,140,5.212,141,5.212,142,4.827,143,5.212,144,5.212,145,2.864,146,2.255,147,5.212,148,3.308,149,0.005,150,0.006,151,0.005]],["title/injectables/AddRankingPenaltyGQL.html",[152,0.202,153,1.101]],["body/injectables/AddRankingPenaltyGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,123,1.462,125,0.664,127,0.664,130,1.776,133,1.926,134,1.616,149,0.002,150,0.003,151,0.002,152,0.413,153,1.024,154,0.569,155,0.651,156,2.342,157,0.477,158,0.459,159,2.329,160,2.46,161,1.789,162,2.152,163,2.144,164,1.947,165,1.925,166,1.685,167,0.252,168,2.719,169,2.357,170,0.639,171,1.721,172,1.106,173,1.064,174,1.085,175,1.085,176,1.085,177,1.024,178,1.024,179,0.69,180,0.69,181,0.677,182,2.371,183,1.106,184,1.963,185,1.688,186,1.688,187,2.244,188,1.085,189,1.085,190,1.721,191,1.085,192,1.925,193,1.085,194,0.704,195,2.053,196,1.491,197,0.704,198,0.704,199,1.064,200,0.704,201,1.55,202,1.52,203,1.064,204,1.55,205,2.111,206,2.111,207,1.963,208,1.55,209,1.688,210,1.52,211,1.52,212,1.085,213,0.704,214,1.106,215,1.106,216,1.367,217,1.367,218,1.367,219,1.085,220,1.106,221,1.106,222,1.52,223,1.064,224,1.52,225,1.064,226,1.085,227,1.106,228,1.106,229,1.085,230,1.52,231,1.407,232,1.963,233,1.901,234,1.52,235,1.721,236,1.085,237,1.551,238,1.085,239,0.704,240,1.52,241,1.755,242,1.064,243,0.771,244,0.948,245,0.626,246,1.898,247,0.69,248,0.664,249,0.9,250,1.655,251,1.004,252,1.024,253,1.315,254,0.894,255,0.69,256,1.064,257,1.688,258,0.69,259,1.064,260,1.721,261,0.69,262,0.69,263,0.825,264,1.341,265,1.044,266,1.621,267,2.129,268,1.085,269,1.085,270,0.771,271,1.085,272,1.085,273,1.593,274,1.5,275,1.085,276,1.085,277,0.9,278,1.004,279,1.52,280,1.085,281,0.677,282,1.064,283,1.064,284,1.29,285,1.085,286,1.085,287,1.315,288,0.704,289,1.085,290,1.085,291,1.085,292,1.085,293,1.085,294,1.085,295,1.407,296,1.064,297,0.677,298,1.5,299,1.217,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.315,306,1.794,307,1.315,308,1.29,309,1.315,310,1.064,311,1.064,312,1.064,313,1.064,314,1.315,315,1.315,316,1.315,317,1.064,318,0.677,319,1.747,320,1.714,321,0.664,322,2.291,323,2.361,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.651,334,0.704,335,0.704,336,0.651,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,0.664,344,0.664,345,1.085,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,0.651,369,0.651,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.145,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.614,397,0.704,398,1.367,399,0.639,400,0.704,401,0.651,402,0.58,403,0.704,404,0.651,405,0.664,406,0.704,407,0.704,408,0.626,409,0.651,410,0.677]],["title/injectables/AddTeamToSeasonGQL.html",[152,0.202,349,1.144]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.126,163,2.145,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,1.067,350,1.109,351,1.109,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,411,2.728]],["title/components/AdminComponent.html",[27,0.437,412,1.213]],["body/components/AdminComponent.html",[3,0.124,4,0.124,5,0.113,7,0.679,10,0.342,18,0.008,22,0.163,27,0.813,28,2.127,31,0.124,32,3.532,33,4.276,55,0.124,60,2.457,61,2.364,62,2.442,63,1.983,65,0.135,66,1.714,67,1.908,82,1.591,103,2.207,149,0.005,150,0.006,151,0.005,167,0.739,178,1.908,213,0.629,243,0.797,249,0.729,263,0.877,270,0.797,277,0.877,300,0.764,412,2.34,413,2.276,414,1.97,415,1.93,416,1.93,417,5.877,418,1.93,419,2.103,420,8.544,421,7.966,422,1.835,423,6.622,424,6.622,425,1.526,426,1.855,427,1.526,428,2.322,429,2.322,430,1.93,431,2.585,432,1.93,433,1.93,434,1.783,435,1.93,436,1.783,437,1.855,438,2.644,439,1.783,440,1.93,441,1.748,442,1.855,443,1.748,444,2.322,445,1.748,446,1.93,447,1.783,448,1.93,449,1.783,450,1.855,451,1.783,452,1.783,453,1.93,454,1.783,455,1.93,456,1.783,457,1.93,458,1.783,459,1.748,460,2.322,461,1.93,462,1.783,463,1.748,464,1.93,465,1.783,466,1.93,467,1.783,468,1.93,469,1.783,470,1.93,471,1.818,472,1.93,473,1.783,474,1.93,475,1.783,476,1.93,477,1.783,478,1.93,479,1.783,480,1.93,481,1.748,482,1.93,483,1.714,484,1.93,485,1.748,486,1.93,487,1.783,488,1.93,489,1.783,490,1.93,491,1.93,492,1.783,493,1.93,494,1.681,495,1.93,496,1.748,497,1.93,498,1.748,499,1.93,500,1.783,501,1.93,502,1.748,503,1.93,504,1.783,505,1.855,506,1.93,507,1.93]],["title/guards/AdminGuard.html",[508,3.738,509,3.281]],["body/guards/AdminGuard.html",[3,0.137,4,0.137,5,0.125,10,0.378,17,0.437,18,0.008,22,0.182,31,0.137,55,0.137,65,0.15,67,1.752,82,1.574,83,1.894,146,2.973,149,0.006,150,0.007,151,0.006,152,0.371,167,0.827,213,0.578,319,1.363,320,1.336,422,1.947,425,1.947,509,6.033,510,5.953,511,6.495,512,7.664,513,7.664,514,5.225,515,4.324,516,7.317,517,1.752,518,1.752,519,5.016,520,7.317,521,7.317,522,3.556,523,4.344,524,8.449]],["title/modules/AdminModule.html",[525,1.424,526,3.484]],["body/modules/AdminModule.html",[3,0.123,4,0.123,5,0.112,7,0.812,8,4.446,18,0.008,22,0.198,31,0.123,55,0.123,65,0.134,66,2.429,149,0.005,150,0.006,151,0.005,178,1.572,249,0.873,263,0.873,412,2.427,427,1.513,459,2.477,462,2.526,467,2.475,469,2.475,471,2.525,473,2.475,475,2.475,477,2.475,483,2.38,489,2.526,504,2.475,525,2.034,526,7.47,527,2.471,528,3.287,529,4.262,530,3.39,531,3.39,532,3.287,533,5.827,534,5.827,535,5.827,536,6.565,537,6.565,538,4.904,539,4.227,540,3.501,541,3.501,542,6.565,543,6.447,544,3.281,545,3.201,546,5.827,547,3.898,548,4.24,549,6.565,550,6.565,551,6.565,552,6.565,553,4.688,554,6.565,555,6.565,556,5.341,557,6.565,558,6.565,559,4.978,560,5.827,561,5.341,562,6.565,563,6.565,564,7.925,565,5.341,566,7.034,567,5.659,568,6.565,569,4.24,570,3.898,571,6.565,572,5.827]],["title/modules/AdminRoutingModule.html",[525,1.424,536,3.281]],["body/modules/AdminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.708,31,0.139,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,304,0.918,412,2.251,509,5.311,522,3.615,527,2.8,536,6.09,544,3.079,545,3.445,546,6.602,573,7.438,574,4.416,575,4.783,576,4.416,577,7.438,578,4.253,579,4.599]],["title/injectables/AllSeasonsListGQL.html",[152,0.202,404,1.101]],["body/injectables/AllSeasonsListGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.027,253,1.318,254,0.897,255,0.693,256,1.318,257,1.831,258,0.693,259,1.067,260,1.723,261,0.693,262,0.693,263,0.826,264,1.344,265,1.047,266,1.624,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.318,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,0.654,402,0.582,403,0.706,404,1.027,405,0.666,406,0.706,407,0.706,408,0.629,409,0.654,410,0.679,580,2.729]],["title/injectables/AllTeamsGQL.html",[152,0.202,405,1.122]],["body/injectables/AllTeamsGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.718,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.701,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.027,253,1.318,254,0.897,255,0.693,256,1.067,257,1.69,258,0.693,259,1.067,260,1.723,261,0.693,262,0.693,263,0.826,264,1.344,265,1.047,266,1.624,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.847,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,0.654,402,0.582,403,0.706,404,0.654,405,1.047,406,0.706,407,0.706,408,0.629,409,0.654,410,0.679,581,2.729]],["title/injectables/AllTournamentListGQL.html",[48,1.039,152,0.202]],["body/injectables/AllTournamentListGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.969,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.027,253,1.318,254,0.897,255,0.693,256,1.067,257,1.69,258,0.693,259,1.318,260,1.867,261,0.693,262,0.693,263,0.826,264,1.344,265,1.047,266,1.624,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.318,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,0.654,402,0.582,403,0.706,404,0.654,405,0.666,406,0.706,407,0.706,408,0.629,409,0.654,410,0.679,582,2.729]],["title/injectables/AllUsersGQL.html",[152,0.202,409,1.101]],["body/injectables/AllUsersGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.027,253,1.318,254,0.897,255,0.693,256,1.067,257,1.69,258,0.693,259,1.067,260,1.723,261,0.693,262,0.693,263,0.849,264,1.344,265,1.047,266,1.803,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.494,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,0.654,402,0.582,403,0.706,404,0.654,405,0.666,406,0.706,407,0.706,408,0.629,409,1.027,410,0.679,583,2.729]],["title/components/AppComponent.html",[27,0.437,434,1.237]],["body/components/AppComponent.html",[3,0.099,4,0.099,5,0.09,7,0.542,10,0.273,11,0.531,15,4.979,17,0.53,18,0.008,21,0.913,22,0.193,26,1.639,27,0.734,28,1.919,31,0.099,38,3.997,39,2.732,41,1.574,49,1.966,50,1.709,55,0.099,60,2.434,61,2.342,62,2.284,63,1.723,65,0.108,66,1.37,67,1.657,82,1.289,83,2.296,85,2.317,94,3.417,103,2.036,112,2.487,115,2.439,134,1.301,135,3.192,148,4.873,149,0.004,150,0.005,151,0.004,167,0.863,213,0.646,243,0.692,249,0.9,263,0.762,270,0.692,277,0.762,298,1.594,299,1.219,300,0.61,302,1.292,304,0.854,320,1.264,345,1.343,396,2.004,402,1.744,412,1.397,413,1.977,414,1.574,415,1.542,416,1.542,418,1.542,419,1.826,422,1.594,425,2.006,426,2.29,427,1.219,428,2.017,429,2.017,430,1.542,431,2.384,432,1.542,433,1.542,434,2.201,435,1.542,436,1.424,437,1.482,438,2.474,439,1.863,440,1.542,441,1.397,442,1.482,443,1.397,444,2.017,445,1.397,446,1.542,447,1.424,448,1.542,449,1.424,450,1.482,451,1.424,452,1.424,453,1.542,454,1.424,455,1.542,456,1.424,457,1.542,458,1.424,459,1.397,460,2.017,461,1.542,462,1.424,463,1.397,464,1.542,465,1.863,466,1.542,467,1.424,468,1.542,469,1.424,470,1.542,471,1.453,472,1.542,473,1.424,474,1.542,475,1.424,476,1.542,477,1.424,478,1.542,479,1.424,480,1.542,481,1.397,482,1.542,483,1.37,484,1.542,485,1.397,486,1.542,487,1.424,488,1.542,489,1.424,490,1.542,491,1.542,492,1.424,493,1.542,494,1.343,495,1.542,496,1.397,497,1.542,498,1.397,499,1.542,500,1.424,501,1.542,502,1.397,503,1.542,504,1.424,505,1.482,506,1.542,507,1.542,514,3.778,515,4.007,517,1.657,518,1.657,519,4.855,523,3.141,584,4.696,585,7.71,586,6.919,587,5.248,588,6.059,589,8.178,590,6.919,591,8.178,592,8.178,593,8.705,594,6.904,595,3.86,596,5.055,597,6.006,598,5.727,599,5.483,600,6.919,601,5.291,602,5.291,603,6.919,604,5.291,605,5.291,606,5.291,607,5.291,608,5.291,609,5.291,610,5.291,611,5.291,612,2.246,613,6.141,614,4.696,615,4.696,616,4.012,617,4.696,618,4.012,619,4.304,620,4.696,621,3.271,622,2.822,623,4.012,624,5.291,625,4.696,626,4.696,627,5.291,628,4.696,629,5.291,630,4.304,631,4.696,632,5.291,633,5.291,634,5.291,635,6.919,636,5.291,637,5.291,638,5.291,639,5.291,640,5.291,641,5.291,642,5.291,643,5.291,644,5.291,645,5.291,646,5.291,647,5.291,648,5.629,649,5.291,650,4.686,651,4.979,652,4.979,653,5.291,654,5.629,655,5.291,656,6.919,657,6.919,658,6.919,659,6.919,660,6.919,661,6.919,662,6.141,663,2.997,664,6.919,665,6.919,666,6.141,667,6.919,668,6.919,669,6.919,670,6.919,671,6.919,672,7.71,673,7.71,674,6.843,675,5.291,676,6.843,677,5.291,678,7.71,679,5.291,680,5.291,681,5.291,682,6.141,683,8.178,684,6.919,685,6.141,686,5.291,687,6.919,688,6.919,689,6.919,690,6.919,691,6.919,692,6.919,693,8.705,694,6.919,695,6.919,696,5.291,697,6.919,698,5.291,699,6.919,700,6.919,701,4.696,702,5.291,703,5.291,704,5.291,705,5.291]],["title/modules/AppCoreModule.html",[525,1.424,706,3.112]],["body/modules/AppCoreModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,31,0.139,35,4.601,36,4.601,37,4.106,41,2.214,42,2.508,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,527,2.801,531,3.843,544,3.081,545,3.447,706,5.778,707,6.055,708,7.443,709,7.573,710,6.469,711,7.443,712,6.055,713,7.443,714,6.606,715,7.443]],["title/modules/AppModule.html",[525,1.424,716,3.484]],["body/modules/AppModule.html",[3,0.123,4,0.123,5,0.112,18,0.008,22,0.199,26,2.037,31,0.123,38,3.709,39,3.395,41,2.36,42,2.216,55,0.16,61,1.575,65,0.134,146,2.791,149,0.005,150,0.006,151,0.005,427,1.515,434,2.579,439,2.526,465,2.526,494,2.162,515,4.343,523,3.904,525,2.037,527,2.475,528,3.292,529,4.265,530,4.399,531,4.399,532,3.292,539,4.23,540,3.507,541,3.507,543,6.453,544,3.284,545,3.204,547,3.904,598,5.501,614,5.836,615,5.836,622,3.507,625,5.836,712,5.349,714,7.04,716,7.376,717,5.836,718,5.836,719,5.836,720,5.836,721,5.836,722,6.567,723,6.567,724,6.229,725,5.349,726,7.932,727,7.04,728,5.349,729,8.518,730,7.932,731,6.575,732,6.575,733,7.932,734,5.836,735,5.836,736,5.836,737,7.932,738,4.453,739,7.04,740,7.04,741,3.395,742,6.575,743,4.065,744,6.575,745,6.575,746,6.575,747,5.836,748,6.575,749,7.932,750,6.575,751,7.04,752,5.836,753,7.932,754,5.836,755,6.575,756,7.932,757,5.349,758,7.932,759,7.932,760,4.23,761,5.349]],["title/modules/AppRoutingModule.html",[525,1.424,722,3.281]],["body/modules/AppRoutingModule.html",[3,0.135,4,0.135,5,0.122,7,0.737,18,0.008,22,0.186,31,0.135,55,0.157,65,0.147,149,0.006,150,0.007,151,0.006,178,1.721,245,1.927,304,0.887,509,6.315,512,7.195,513,7.195,522,3.493,527,2.706,532,3.599,544,2.976,545,3.378,574,4.268,575,4.46,576,4.965,578,5.448,707,5.848,722,5.971,762,7.188,763,7.029,764,7.188,765,7.188,766,7.188,767,7.188,768,5.848,769,5.45,770,9.467,771,7.188,772,7.188,773,7.188,774,4.868,775,7.188,776,7.188,777,7.188,778,7.188,779,5.848,780,7.188,781,7.188]],["title/interfaces/AppsettingsModel.html",[0,0.542,782,3.484]],["body/interfaces/AppsettingsModel.html",[0,0.849,2,3.398,3,0.135,4,0.135,5,0.123,10,0.372,11,0.642,17,0.528,18,0.008,21,1.03,22,0.171,31,0.135,55,0.157,65,0.147,78,2.709,112,2.056,114,2.425,115,2.276,135,2.979,138,2.76,139,2.391,146,2.532,149,0.006,150,0.007,151,0.006,152,0.367,319,1.34,320,1.314,598,4.647,738,4.874,782,6.708,783,5.854,784,8.085,785,8.085,786,8.085,787,7.853,788,6.387,789,5.138,790,5.854,791,6.387,792,6.387,793,6.387,794,6.387,795,4.968,796,4.449,797,4.449,798,6.387,799,6.387,800,6.387,801,4.449]],["title/injectables/AppsettingsService.html",[152,0.202,598,2.968]],["body/injectables/AppsettingsService.html",[0,0.841,3,0.134,4,0.134,5,0.121,10,0.368,11,0.639,17,0.497,18,0.008,21,0.948,22,0.17,31,0.134,55,0.156,65,0.146,78,2.683,82,1.328,112,2.518,114,2.402,115,2.255,135,2.951,138,2.745,139,2.378,146,2.509,149,0.006,150,0.007,151,0.006,152,0.365,154,1.492,167,0.843,213,0.563,319,1.328,320,1.302,422,1.917,425,1.917,517,1.707,518,1.707,598,5.374,738,4.828,782,6.683,783,5.8,784,6.328,785,6.328,786,6.328,787,8.314,788,7.823,789,5.09,790,7.389,791,6.328,792,6.328,793,6.328,794,8.061,795,5.233,796,4.407,797,4.407,798,6.328,799,6.328,800,6.328,801,4.407,802,7.129,803,8.322,804,7.129,805,7.129]],["title/injectables/AuthenticationService.html",[152,0.202,515,2.17]],["body/injectables/AuthenticationService.html",[0,0.708,3,0.112,4,0.112,5,0.102,10,0.31,11,0.576,17,0.545,18,0.008,21,1.032,22,0.184,31,0.112,41,1.786,55,0.141,65,0.123,78,3.387,82,1.397,83,2.284,85,2.24,107,1.811,112,2.571,139,2.338,145,2.685,146,3.248,149,0.006,150,0.006,151,0.005,152,0.329,154,1.256,157,1.054,158,1.013,167,0.879,177,1.438,195,1.885,196,1.495,199,1.495,213,0.697,231,1.411,263,0.944,304,0.741,319,1.118,320,1.097,333,2.053,336,2.053,408,1.975,422,1.729,425,2.073,426,1.682,515,3.864,517,2.113,518,2.113,522,2.918,612,2.549,621,3.713,622,3.203,651,3.878,652,3.878,738,4.067,774,5.542,795,5.623,796,5.563,797,5.454,801,5.059,806,4.553,807,7.263,808,6.659,809,7.503,810,7.608,811,7.503,812,7.608,813,7.503,814,5.357,815,7.263,816,7.263,817,7.263,818,6.005,819,7.987,820,6.657,821,7.263,822,7.263,823,8.102,824,6.005,825,6.659,826,7.177,827,6.005,828,4.067,829,6.659,830,6.005,831,5.689,832,6.005,833,6.659,834,6.499,835,6.005,836,5.542,837,6.005,838,6.659,839,6.005,840,6.659,841,6.005,842,6.659,843,6.005,844,6.005,845,6.005,846,6.005,847,6.005,848,6.005,849,6.005,850,6.104,851,6.104,852,4.885,853,3.566,854,4.553,855,4.553,856,4.885,857,5.33,858,7.321,859,5.33,860,5.33,861,6.104,862,5.33,863,6.659,864,5.33,865,5.33,866,6.204,867,6.659,868,5.33,869,6.659,870,5.33,871,5.33,872,5.33,873,5.33,874,6.104,875,4.885,876,4.845,877,4.885,878,5.33,879,5.33,880,4.553,881,5.33,882,5.33,883,5.33,884,4.885,885,5.33,886,5.33]],["title/components/CancelMatchDialogComponent.html",[27,0.437,436,1.237]],["body/components/CancelMatchDialogComponent.html",[3,0.11,4,0.11,5,0.1,7,0.605,10,0.305,11,0.569,17,0.509,18,0.008,21,0.873,22,0.183,23,4.031,24,2.786,26,1.828,27,0.773,28,2.021,29,2.637,31,0.11,40,3.346,41,1.755,42,1.988,50,1.906,53,3.206,54,2.442,55,0.11,60,2.446,61,2.353,62,2.363,63,1.847,65,0.121,66,1.527,67,1.777,82,1.382,83,2.272,85,2.23,86,3.461,88,3.36,90,3.504,103,2.12,112,2.319,114,1.988,115,1.866,129,2.954,130,1.12,133,1.211,134,0.996,135,2.442,138,1.946,139,2.12,149,0.005,150,0.006,151,0.005,164,1.907,167,0.814,184,1.469,193,1.883,213,0.672,243,0.974,244,1.888,249,0.65,263,0.817,270,0.742,277,0.817,300,0.68,330,2.22,396,2.055,412,1.557,413,2.12,414,1.755,415,1.72,416,1.72,418,1.72,419,1.958,422,1.709,425,1.709,426,1.652,427,1.359,428,2.163,429,2.163,430,1.72,431,2.483,432,1.72,433,1.72,434,1.588,435,1.72,436,2.293,437,2.576,438,2.558,439,1.588,440,1.72,441,1.557,442,1.652,443,1.557,444,2.163,445,1.557,446,1.72,447,1.588,448,1.72,449,1.588,450,1.652,451,1.588,452,1.588,453,1.72,454,1.588,455,1.72,456,1.588,457,1.72,458,1.588,459,1.557,460,2.163,461,1.72,462,1.588,463,1.557,464,1.72,465,1.588,466,1.72,467,1.588,468,1.72,469,1.588,470,1.72,471,1.62,472,1.72,473,1.588,474,1.72,475,1.588,476,1.72,477,1.588,478,1.72,479,1.588,480,1.72,481,1.557,482,1.72,483,1.527,484,1.72,485,1.557,486,1.72,487,1.588,488,1.72,489,1.588,490,1.72,491,1.72,492,1.588,493,1.72,494,1.497,495,1.72,496,1.557,497,1.72,498,1.557,499,1.72,500,1.588,501,1.72,502,1.557,503,1.72,504,1.588,505,1.652,506,1.72,507,1.72,517,1.777,518,1.777,587,5.199,595,3.715,612,2.504,620,5.236,650,3.995,663,3.085,887,7.951,888,6.792,889,3.81,890,5.497,891,5.025,892,4.473,893,5.236,894,7.42,895,5.899,896,4.799,897,5.236,898,4.799,899,5.236,900,5.899,901,5.899,902,5.899,903,5.236,904,5.899,905,5.899,906,3.81,907,5.899,908,7.42,909,4.405,910,4.405,911,7.42,912,7.42,913,5.625,914,6.585]],["title/injectables/CancelMatchGQL.html",[152,0.202,330,1.122]],["body/injectables/CancelMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.949,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,2.003,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,1.046,331,1.109,332,1.109,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,915,2.728]],["title/components/ChangepasswordComponent.html",[27,0.437,439,1.237]],["body/components/ChangepasswordComponent.html",[3,0.115,4,0.115,5,0.105,7,0.63,10,0.317,11,0.584,17,0.53,18,0.008,22,0.177,23,4.079,26,1.904,27,0.787,28,2.058,31,0.115,55,0.115,60,2.45,61,2.357,62,2.391,63,1.895,65,0.126,66,1.59,67,1.823,78,2.864,82,1.417,83,1.59,85,2.058,86,3.503,103,2.151,112,2.362,114,2.071,115,1.944,138,2.027,139,1.755,145,3.402,149,0.005,150,0.006,151,0.005,167,0.851,213,0.653,243,0.761,249,0.677,263,0.838,270,0.761,277,0.838,300,0.709,412,1.622,413,2.174,414,1.828,415,1.791,416,1.791,418,1.791,419,2.009,422,1.753,425,1.753,426,1.721,427,1.416,428,2.218,429,2.218,430,1.791,431,2.519,432,1.791,433,1.791,434,1.654,435,1.791,436,1.654,437,1.721,438,2.589,439,2.326,440,1.791,441,1.622,442,1.721,443,1.622,444,2.218,445,1.622,446,1.791,447,1.654,448,1.791,449,1.654,450,1.721,451,1.654,452,1.654,453,1.791,454,1.654,455,1.791,456,1.654,457,1.791,458,1.654,459,1.622,460,2.218,461,1.791,462,1.654,463,1.622,464,1.791,465,1.654,466,1.791,467,1.654,468,1.791,469,1.654,470,1.791,471,1.687,472,1.791,473,1.654,474,1.791,475,1.654,476,1.791,477,1.654,478,1.791,479,1.654,480,1.791,481,1.622,482,1.791,483,1.59,484,1.791,485,1.622,486,1.791,487,1.654,488,1.791,489,1.654,490,1.791,491,1.791,492,1.654,493,1.791,494,1.56,495,1.791,496,1.622,497,1.791,498,1.622,499,1.791,500,1.654,501,1.791,502,1.622,503,1.791,504,1.654,505,1.721,506,1.791,507,1.791,514,4.387,515,4.08,517,1.471,518,1.471,519,4.518,523,3.648,663,3.192,741,3.173,760,3.277,774,5.599,808,8.032,826,6.726,876,3.968,906,3.968,916,5.453,917,8.268,918,7.61,919,8.268,920,7.61,921,6.144,922,6.144,923,6.144,924,5.671,925,6.144,926,6.144,927,3.968,928,6.144,929,5.154,930,5.453,931,6.144,932,6.144,933,6.144,934,7.61,935,4.998,936,3.798,937,7.67,938,7.67,939,7.61,940,6.755]],["title/components/ConfirmDialogComponent.html",[27,0.437,441,1.213]],["body/components/ConfirmDialogComponent.html",[0,0.749,3,0.119,4,0.119,5,0.108,7,0.651,10,0.328,11,0.596,17,0.464,18,0.008,21,0.683,22,0.159,24,2.997,26,1.967,27,0.798,28,2.088,29,2.838,31,0.119,55,0.145,60,2.453,61,2.36,62,2.413,63,1.933,65,0.13,66,1.643,67,1.859,82,1.446,85,2.088,90,3.666,91,3.29,103,2.176,149,0.005,150,0.006,151,0.005,167,0.778,213,0.662,243,0.777,249,0.699,263,0.855,270,0.777,277,0.855,300,0.732,412,1.676,413,2.218,414,1.888,415,1.85,416,1.85,418,1.85,419,2.05,422,1.789,425,1.463,426,1.778,427,1.463,428,2.263,429,2.263,430,1.85,431,2.548,432,1.85,433,1.85,434,1.709,435,1.85,436,1.709,437,1.778,438,2.613,439,1.709,440,1.85,441,2.307,442,2.612,443,1.676,444,2.263,445,1.676,446,1.85,447,1.709,448,1.85,449,1.709,450,1.778,451,1.709,452,1.709,453,1.85,454,1.709,455,1.85,456,1.709,457,1.85,458,1.709,459,1.676,460,2.263,461,1.85,462,1.709,463,1.676,464,1.85,465,1.709,466,1.85,467,1.709,468,1.85,469,1.709,470,1.85,471,1.743,472,1.85,473,1.709,474,1.85,475,1.709,476,1.85,477,1.709,478,1.85,479,1.709,480,1.85,481,1.676,482,1.85,483,1.643,484,1.85,485,1.676,486,1.85,487,1.709,488,1.85,489,1.709,490,1.85,491,1.85,492,1.709,493,1.85,494,1.611,495,1.85,496,1.676,497,1.85,498,1.676,499,1.85,500,1.709,501,1.85,502,1.676,503,1.85,504,1.709,505,1.778,506,1.85,507,1.85,517,1.52,518,1.52,595,3.887,612,2.694,663,3.141,889,4.099,890,5.681,891,5.258,893,5.634,898,5.164,941,6.24,942,5.189,943,5.164,944,6.797,945,5.634,946,3.278,947,7.764,948,6.891,949,7.764,950,7.764]],["title/interfaces/ConfirmDialogComponentData.html",[0,0.542,944,3.484]],["body/interfaces/ConfirmDialogComponentData.html",[0,0.87,2,3.481,3,0.138,4,0.138,5,0.126,10,0.381,11,0.651,17,0.44,18,0.008,21,0.961,22,0.173,24,3.481,26,2.284,27,0.808,28,2.112,29,3.295,31,0.138,55,0.159,60,1.835,61,1.765,63,1.835,65,0.151,67,1.765,82,1.373,85,1.835,90,3.481,91,2.774,103,1.835,149,0.006,150,0.007,151,0.006,419,1.946,441,1.946,442,2.502,595,3.69,889,4.76,890,4.992,891,4.992,941,5.263,942,4.376,944,6.774,946,4.74]],["title/components/ContactComponent.html",[27,0.437,443,1.213]],["body/components/ContactComponent.html",[0,0.748,3,0.119,4,0.119,5,0.108,7,0.65,10,0.327,11,0.595,14,1.301,17,0.501,18,0.008,22,0.171,23,4.116,24,2.993,26,1.964,27,0.798,28,2.087,29,2.833,31,0.119,45,1.227,50,2.047,55,0.119,58,1.276,60,2.453,61,2.36,62,2.412,63,1.931,65,0.13,66,1.641,67,1.858,82,1.445,85,2.27,86,3.445,90,3.663,91,3.373,103,2.175,149,0.005,150,0.006,151,0.005,167,0.811,213,0.662,243,0.776,249,0.698,254,1.326,263,0.854,270,0.874,277,1.004,300,0.731,412,1.673,413,2.216,414,1.885,415,1.848,416,1.848,418,1.848,419,2.048,422,1.787,425,1.46,426,1.775,427,1.46,428,2.261,429,2.261,430,1.848,431,2.546,432,1.848,433,1.848,434,1.706,435,1.848,436,1.706,437,1.775,438,2.612,439,1.706,440,1.848,441,1.673,442,1.775,443,2.306,444,2.261,445,1.673,446,1.848,447,1.706,448,1.848,449,1.706,450,1.775,451,1.706,452,1.706,453,1.848,454,1.706,455,1.848,456,1.706,457,1.848,458,1.706,459,1.673,460,2.261,461,1.848,462,1.706,463,1.673,464,1.848,465,1.706,466,1.848,467,1.706,468,1.848,469,1.706,470,1.848,471,1.74,472,1.848,473,1.706,474,1.848,475,1.706,476,1.848,477,1.706,478,1.848,479,1.706,480,1.848,481,1.673,482,1.848,483,1.641,484,1.848,485,1.673,486,1.848,487,1.706,488,1.848,489,1.706,490,1.848,491,1.848,492,1.706,493,1.848,494,1.609,495,1.848,496,1.673,497,1.848,498,1.673,499,1.848,500,1.706,501,1.848,502,1.673,503,1.848,504,1.706,505,1.775,506,1.848,507,1.848,517,1.518,518,1.518,612,2.69,663,3.008,951,5.156,952,6.82,953,6.311,954,5.626,955,6.794,956,6.338,957,6.338,958,6.338,959,6.338,960,4.606,961,7.757,962,6.885]],["title/interfaces/ContactComponentData.html",[0,0.542,955,3.484]],["body/interfaces/ContactComponentData.html",[0,0.864,2,3.457,3,0.137,4,0.137,5,0.125,10,0.378,11,0.649,14,1.88,17,0.505,18,0.008,22,0.182,23,3.882,24,3.457,26,2.269,27,0.804,28,2.104,29,3.273,31,0.137,45,1.418,50,2.365,55,0.137,58,1.794,60,1.823,61,1.753,63,1.823,65,0.15,67,1.753,82,1.364,85,2.104,86,2.887,90,3.457,91,2.756,103,1.823,149,0.006,150,0.007,151,0.006,254,1.864,270,0.932,277,0.806,419,1.933,443,1.933,951,5.956,952,5.956,953,5.956,955,6.756]],["title/components/ContactPersonComponent.html",[27,0.437,447,1.237]],["body/components/ContactPersonComponent.html",[3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,17,0.386,18,0.008,22,0.16,27,0.805,28,2.105,31,0.121,50,2.088,55,0.121,60,2.455,61,2.361,62,2.426,63,1.954,65,0.132,66,1.673,67,1.88,82,1.575,103,2.189,149,0.005,150,0.006,151,0.005,167,0.785,213,0.62,243,0.785,249,0.712,263,0.864,270,0.785,277,1.056,278,1.844,300,0.745,412,1.706,413,2.243,414,1.923,415,1.884,416,1.884,418,1.884,419,2.072,422,1.809,425,1.489,426,1.81,427,1.489,428,2.289,429,2.289,430,1.884,431,2.564,432,1.884,433,1.884,434,1.74,435,1.884,436,1.74,437,1.81,438,2.627,439,1.74,440,1.884,441,1.706,442,1.81,443,1.706,444,2.289,445,1.706,446,1.884,447,2.367,448,1.884,449,1.74,450,1.81,451,1.74,452,1.74,453,1.884,454,1.74,455,1.884,456,1.74,457,1.884,458,1.74,459,1.706,460,2.289,461,1.884,462,1.74,463,1.706,464,1.884,465,1.74,466,1.884,467,1.74,468,1.884,469,1.74,470,1.884,471,1.775,472,1.884,473,1.74,474,1.884,475,1.74,476,1.884,477,1.74,478,1.884,479,1.74,480,1.884,481,1.706,482,1.884,483,1.673,484,1.884,485,1.706,486,1.884,487,1.74,488,1.884,489,1.74,490,1.884,491,1.884,492,1.74,493,1.884,494,1.641,495,1.884,496,1.706,497,1.884,498,1.706,499,1.884,500,1.74,501,1.884,502,1.706,503,1.884,504,1.74,505,1.81,506,1.884,507,1.884,663,2.703,666,7.806,963,7.806,964,7.154,965,5.737,966,8.456,967,7.851,968,5.317,969,7.851,970,6.464,971,4.854,972,7.851,973,7.851,974,7.851,975,7.851,976,7.851,977,7.851,978,6.387]],["title/components/ContactlistComponent.html",[27,0.437,445,1.213]],["body/components/ContactlistComponent.html",[3,0.124,4,0.124,5,0.113,7,0.681,10,0.343,18,0.008,22,0.136,27,0.814,28,2.13,31,0.124,55,0.124,60,2.457,61,2.364,62,2.444,63,1.987,65,0.136,66,1.719,67,1.911,82,1.593,103,2.209,149,0.005,150,0.006,151,0.005,167,0.741,213,0.63,243,0.798,249,0.731,263,0.879,270,0.798,277,0.879,300,0.766,412,1.753,413,2.28,414,1.976,415,1.936,416,1.936,418,1.936,419,2.107,422,1.839,425,1.53,426,1.86,427,1.53,428,2.326,429,2.326,430,1.936,431,2.587,432,1.936,433,1.936,434,1.788,435,1.936,436,1.788,437,1.86,438,2.647,439,1.788,440,1.936,441,1.753,442,1.86,443,1.753,444,2.326,445,2.343,446,1.936,447,1.788,448,1.936,449,1.788,450,1.86,451,1.788,452,1.788,453,1.936,454,1.788,455,1.936,456,1.788,457,1.936,458,1.788,459,1.753,460,2.326,461,1.936,462,1.788,463,1.753,464,1.936,465,1.788,466,1.936,467,1.788,468,1.936,469,1.788,470,1.936,471,1.824,472,1.936,473,1.788,474,1.936,475,1.788,476,1.936,477,1.788,478,1.936,479,1.788,480,1.936,481,1.753,482,1.936,483,1.719,484,1.936,485,1.753,486,1.936,487,1.788,488,1.936,489,1.788,490,1.936,491,1.936,492,1.788,493,1.936,494,1.686,495,1.936,496,1.753,497,1.936,498,1.753,499,1.936,500,1.788,501,1.936,502,1.753,503,1.936,504,1.788,505,1.86,506,1.936,507,1.936,979,5.895,980,7.083,981,8.556,982,7.981,983,6.642,984,6.642]],["title/modules/ContactlistModule.html",[525,1.424,985,3.484]],["body/modules/ContactlistModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.192,31,0.135,55,0.135,65,0.147,149,0.006,150,0.007,151,0.006,252,1.725,427,1.66,445,2.478,487,2.528,500,2.528,525,2.232,527,2.712,528,3.607,529,4.432,530,3.72,531,3.72,532,3.607,538,5.007,539,4.466,540,3.842,541,3.842,544,3.466,545,3.382,547,4.277,548,4.652,980,6.394,985,7.374,986,6.394,987,6.394,988,6.394,989,6.704,990,7.204,991,6.394,992,7.204]],["title/modules/ContactlistRoutingModule.html",[525,1.424,989,3.281]],["body/modules/ContactlistRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.92,445,2.255,522,3.625,527,2.808,544,3.088,545,3.451,574,4.429,575,4.788,576,4.429,578,4.265,579,4.612,989,6.1,991,6.621,993,7.46]],["title/injectables/CreateMatchesForSeasonGQL.html",[152,0.202,355,1.144]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.734,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.56,117,1.657,119,1.831,123,1.464,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.14,163,2.112,164,1.854,165,1.795,166,1.553,167,0.253,169,2.358,170,0.64,171,1.802,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.493,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.553,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.771,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.9,250,1.657,251,1.006,252,1.026,253,1.318,254,0.896,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.825,264,1.343,265,1.046,266,1.623,267,2.129,268,1.088,269,1.088,270,0.771,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.9,278,1.006,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.292,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.219,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.795,307,1.318,308,1.292,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.291,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,1.067,356,1.109,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.64,391,0.706,392,0.706,393,0.64,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.64,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,994,2.727]],["title/components/CreatePitchDialogComponent.html",[27,0.437,449,1.237]],["body/components/CreatePitchDialogComponent.html",[3,0.107,4,0.107,5,0.097,7,0.583,10,0.294,11,0.556,17,0.53,18,0.008,22,0.184,23,3.86,26,1.763,27,0.76,28,1.987,30,3.675,31,0.107,40,3.319,41,1.693,42,1.918,50,1.838,53,3.164,54,2.356,55,0.107,60,2.442,61,2.349,62,2.337,63,1.805,65,0.116,66,1.473,67,1.737,78,2.73,82,1.351,83,2.247,86,3.148,88,3.304,103,2.093,112,2.281,114,1.918,115,1.8,138,1.877,139,2.072,145,3.242,149,0.004,150,0.006,151,0.004,157,0.999,158,0.96,167,0.862,209,1.389,213,0.63,243,0.726,249,0.627,252,1.363,263,0.799,270,0.978,277,0.799,300,0.656,304,0.895,412,1.502,413,2.072,414,1.693,415,1.659,416,1.659,418,1.659,419,1.914,422,1.671,425,1.839,426,2.031,427,1.311,428,2.114,429,2.114,430,1.659,431,2.45,432,1.659,433,1.659,434,1.532,435,1.659,436,1.532,437,1.594,438,2.531,439,1.532,440,1.659,441,1.502,442,1.594,443,1.502,444,2.114,445,1.502,446,1.659,447,1.532,448,1.659,449,2.263,450,2.558,451,1.532,452,1.532,453,1.659,454,1.532,455,1.659,456,1.532,457,1.659,458,1.532,459,1.502,460,2.114,461,1.659,462,1.532,463,1.502,464,1.659,465,1.532,466,1.659,467,1.532,468,1.659,469,1.532,470,1.659,471,1.562,472,1.659,473,1.532,474,1.659,475,1.532,476,1.659,477,1.532,478,1.659,479,1.532,480,1.659,481,1.502,482,1.659,483,1.473,484,1.659,485,1.502,486,1.659,487,1.532,488,1.659,489,1.532,490,1.659,491,1.659,492,1.532,493,1.659,494,1.445,495,1.659,496,1.502,497,1.659,498,1.502,499,1.659,500,1.532,501,1.659,502,1.502,503,1.659,504,1.532,505,1.594,506,1.659,507,1.659,517,1.363,518,1.363,595,3.631,612,2.415,663,3.2,741,2.939,760,3.035,889,3.675,890,5.406,891,4.912,897,5.051,898,4.629,906,3.675,924,5.196,927,3.675,929,4.912,945,5.051,995,8.301,996,6.678,997,7.983,998,7.983,999,7.983,1000,7.983,1001,7.983,1002,7.983,1003,8.406,1004,6.838,1005,5.051,1006,6.73,1007,5.157,1008,5.9,1009,5.051,1010,5.691,1011,5.691,1012,7.252,1013,5.051,1014,7.252,1015,5.691,1016,5.051,1017,5.051,1018,5.691,1019,5.691,1020,4.629,1021,5.691,1022,5.691,1023,5.691,1024,5.691,1025,5.691,1026,5.691,1027,5.691,1028,5.691,1029,5.691,1030,5.691,1031,5.691,1032,5.691,1033,7.252,1034,5.691,1035,5.691,1036,5.691,1037,5.691,1038,5.691,1039,5.691,1040,5.691,1041,5.691,1042,5.691,1043,7.252,1044,7.252,1045,7.252,1046,7.252,1047,7.252,1048,7.252,1049,6.437]],["title/injectables/CreatePitchGQL.html",[152,0.202,344,1.122]],["body/injectables/CreatePitchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.656,119,1.829,123,1.463,125,0.664,127,0.664,130,1.776,133,1.926,134,1.616,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.569,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.111,164,1.853,165,1.794,166,1.551,167,0.252,169,2.358,170,0.639,171,1.721,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.024,178,1.024,179,0.691,180,0.691,181,0.677,182,2.371,183,1.107,184,1.963,185,1.688,186,1.688,187,2.244,188,1.086,189,1.086,190,1.721,191,1.086,192,1.926,193,1.086,194,0.704,195,2.053,196,1.491,197,0.704,198,0.704,199,1.065,200,0.704,201,1.551,202,1.521,203,1.065,204,1.551,205,2.111,206,2.111,207,1.963,208,1.79,209,1.882,210,1.836,211,1.836,212,1.086,213,0.704,214,1.107,215,1.107,216,1.368,217,1.368,218,1.368,219,1.086,220,1.107,221,1.107,222,1.521,223,1.065,224,1.521,225,1.065,226,1.086,227,1.107,228,1.107,229,1.086,230,1.521,231,1.407,232,1.963,233,1.902,234,1.521,235,1.721,236,1.086,237,1.551,238,1.086,239,0.704,240,1.521,241,1.755,242,1.065,243,0.771,244,0.948,245,0.627,246,1.899,247,0.691,248,0.664,249,0.9,250,1.656,251,1.005,252,1.024,253,1.316,254,0.895,255,0.691,256,1.065,257,1.688,258,0.691,259,1.065,260,1.721,261,0.691,262,0.691,263,0.825,264,1.342,265,1.044,266,1.621,267,2.129,268,1.086,269,1.086,270,0.771,271,1.086,272,1.086,273,1.593,274,1.501,275,1.086,276,1.086,277,0.9,278,1.005,279,1.521,280,1.086,281,0.677,282,1.065,283,1.065,284,1.29,285,1.086,286,1.086,287,1.316,288,0.704,289,1.086,290,1.086,291,1.086,292,1.086,293,1.086,294,1.086,295,1.407,296,1.065,297,0.677,298,1.501,299,1.218,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.316,306,1.794,307,1.316,308,1.29,309,1.316,310,1.065,311,1.065,312,1.065,313,1.065,314,1.316,315,1.316,316,1.316,317,1.065,318,0.677,319,1.748,320,1.714,321,0.664,322,2.291,323,2.362,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.652,334,0.704,335,0.704,336,0.652,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,0.664,344,1.044,345,1.521,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,0.652,369,0.652,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.146,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.615,397,0.704,398,1.368,399,0.639,400,0.704,401,0.652,402,0.58,403,0.704,404,0.652,405,0.664,406,0.704,407,0.704,408,0.627,409,0.652,410,0.677,1050,2.721]],["title/injectables/CreateSeasonGQL.html",[152,0.202,346,1.122]],["body/injectables/CreateSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.713,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,1.046,347,1.109,348,1.109,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1051,2.728]],["title/injectables/CreateTeamGQL.html",[152,0.202,365,1.122]],["body/injectables/CreateTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.713,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,1.046,366,1.109,367,1.109,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1052,2.728]],["title/injectables/CreateTournamentGQL.html",[152,0.202,375,1.122]],["body/injectables/CreateTournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.713,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,1.046,376,1.109,377,1.109,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1053,2.728]],["title/injectables/CreateTournamentRoundGQL.html",[46,1.079,152,0.202]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.699,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,1.005,47,1.241,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.845,119,1.963,123,1.766,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.569,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.111,164,1.853,165,1.794,166,1.686,167,0.252,169,2.358,170,0.639,171,1.801,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.024,178,1.024,179,0.691,180,0.691,181,0.677,182,2.371,183,1.107,184,1.963,185,1.688,186,1.688,187,2.244,188,1.086,189,1.086,190,1.721,191,1.086,192,1.926,193,1.086,194,0.704,195,2.053,196,1.491,197,0.704,198,0.704,199,1.065,200,0.704,201,1.551,202,1.521,203,1.065,204,1.551,205,2.111,206,2.111,207,1.963,208,1.551,209,1.688,210,1.521,211,1.521,212,1.086,213,0.704,214,1.107,215,1.107,216,1.368,217,1.368,218,1.368,219,1.086,220,1.107,221,1.107,222,1.521,223,1.065,224,1.521,225,1.065,226,1.086,227,1.368,228,1.368,229,1.086,230,1.521,231,1.407,232,1.963,233,1.902,234,1.521,235,1.721,236,1.086,237,1.551,238,1.086,239,0.704,240,1.521,241,1.755,242,1.065,243,0.771,244,0.948,245,0.627,246,1.899,247,0.691,248,0.664,249,0.9,250,1.656,251,1.005,252,1.024,253,1.316,254,0.895,255,0.691,256,1.065,257,1.688,258,0.691,259,1.065,260,1.721,261,0.691,262,0.691,263,0.825,264,1.342,265,1.044,266,1.621,267,2.129,268,1.086,269,1.086,270,0.771,271,1.086,272,1.086,273,1.593,274,1.501,275,1.086,276,1.086,277,0.9,278,1.005,279,1.521,280,1.086,281,0.677,282,1.065,283,1.065,284,1.29,285,1.086,286,1.086,287,1.316,288,0.704,289,1.086,290,1.086,291,1.086,292,1.086,293,1.086,294,1.086,295,1.407,296,1.065,297,0.677,298,1.501,299,1.218,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.316,306,1.794,307,1.316,308,1.29,309,1.316,310,1.065,311,1.065,312,1.065,313,1.065,314,1.316,315,1.316,316,1.316,317,1.065,318,0.677,319,1.748,320,1.714,321,0.664,322,2.291,323,2.362,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.652,334,0.704,335,0.704,336,0.652,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,0.664,344,0.664,345,1.086,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,0.652,369,0.652,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.146,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.615,397,0.704,398,1.368,399,0.639,400,0.704,401,0.652,402,0.58,403,0.704,404,0.652,405,0.664,406,0.704,407,0.704,408,0.627,409,0.652,410,0.677,1054,2.721]],["title/injectables/CreateUserGQL.html",[152,0.202,381,1.122]],["body/injectables/CreateUserGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.405,14,1.58,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.638,47,1.003,48,0.613,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,107,0.557,117,1.654,119,1.828,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.616,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.477,158,0.458,159,2.329,160,2.46,161,1.549,162,2.108,163,2.111,164,1.851,165,1.793,166,1.549,167,0.252,169,2.357,170,0.638,171,1.72,172,1.105,173,1.063,174,1.084,175,1.084,176,1.084,177,1.022,178,1.022,179,0.689,180,0.689,181,0.676,182,2.371,183,1.105,184,1.962,185,1.686,186,1.686,187,2.244,188,1.084,189,1.084,190,1.72,191,1.084,192,1.924,193,1.084,194,0.703,195,2.08,196,1.489,197,0.703,198,0.703,199,1.063,200,0.703,201,1.549,202,1.519,203,1.063,204,1.549,205,2.144,206,2.144,207,1.962,208,1.549,209,1.686,210,1.519,211,1.519,212,1.084,213,0.703,214,1.105,215,1.105,216,1.366,217,1.366,218,1.366,219,1.084,220,1.105,221,1.105,222,1.519,223,1.063,224,1.519,225,1.063,226,1.084,227,1.105,228,1.105,229,1.084,230,1.753,231,1.697,232,2.063,233,2.04,234,1.519,235,1.72,236,1.084,237,1.55,238,1.084,239,0.703,240,1.519,241,1.753,242,1.063,243,0.77,244,0.946,245,0.625,246,1.898,247,0.689,248,0.663,249,0.899,250,1.654,251,1.003,252,1.022,253,1.314,254,0.893,255,0.689,256,1.063,257,1.686,258,0.689,259,1.063,260,1.72,261,0.689,262,0.689,263,0.824,264,1.339,265,1.042,266,1.619,267,2.128,268,1.084,269,1.084,270,0.77,271,1.084,272,1.084,273,1.591,274,1.499,275,1.084,276,1.084,277,0.899,278,1.003,279,1.519,280,1.084,281,0.676,282,1.063,283,1.063,284,1.288,285,1.084,286,1.084,287,1.314,288,0.703,289,1.084,290,1.084,291,1.084,292,1.084,293,1.084,294,1.084,295,1.405,296,1.063,297,0.676,298,1.499,299,1.216,300,0.492,301,1.022,302,0.663,303,0.703,304,1.022,305,1.314,306,1.793,307,1.314,308,1.288,309,1.314,310,1.063,311,1.063,312,1.063,313,1.063,314,1.314,315,1.314,316,1.314,317,1.063,318,0.676,319,1.747,320,1.713,321,0.663,322,2.291,323,2.361,324,0.663,325,0.703,326,0.703,327,0.663,328,0.703,329,0.703,330,0.663,331,0.703,332,0.703,333,0.65,334,0.703,335,0.703,336,0.65,337,0.703,338,0.703,339,0.663,340,0.663,341,0.703,342,0.703,343,0.663,344,0.663,345,1.084,346,0.663,347,0.703,348,0.703,349,0.676,350,0.703,351,0.703,352,0.676,353,0.703,354,0.703,355,0.676,356,0.703,357,0.676,358,0.703,359,0.663,360,0.703,361,0.703,362,0.676,363,0.703,364,0.703,365,0.663,366,0.703,367,0.703,368,0.65,369,0.65,370,0.703,371,0.703,372,0.663,373,0.703,374,0.703,375,0.663,376,0.703,377,0.703,378,0.663,379,0.703,380,0.703,381,1.042,382,0.663,383,0.663,384,0.703,385,0.703,386,0.676,387,2.145,388,0.703,389,0.703,390,0.638,391,0.703,392,0.703,393,0.638,394,0.703,395,0.703,396,0.613,397,0.703,398,1.366,399,0.638,400,0.703,401,0.65,402,0.579,403,0.703,404,0.65,405,0.663,406,0.703,407,0.703,408,0.625,409,0.65,410,0.676,1055,2.714]],["title/injectables/CustomOwlDateTimeIntl.html",[152,0.202,710,3.484]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.138,4,0.138,5,0.125,17,0.439,18,0.008,22,0.182,31,0.138,35,4.549,36,4.549,37,4.06,40,3.375,41,2.189,42,2.48,55,0.138,65,0.15,82,1.37,149,0.006,150,0.007,151,0.006,152,0.372,154,1.54,167,0.683,213,0.581,322,2.07,437,2.374,517,1.762,518,1.762,709,7.925,710,6.427,789,5.254,1056,6.531,1057,7.359,1058,7.359,1059,7.524,1060,7.359,1061,7.359,1062,6.896,1063,7.359,1064,7.359,1065,7.359]],["title/interfaces/DatePeriod.html",[0,0.542,171,1.144]],["body/interfaces/DatePeriod.html",[0,0.507,2,1.292,3,0.051,4,0.051,5,0.047,7,0.81,10,0.141,11,0.33,12,1.439,13,1.411,14,1.584,17,0.585,18,0.008,19,1.702,21,1.058,22,0.108,31,0.051,45,1.709,46,0.643,47,1.009,48,0.618,49,0.606,55,0.185,56,1.615,57,1.009,58,1.511,59,1.009,65,0.192,76,1.534,107,0.561,117,1.66,119,1.833,123,1.467,125,0.668,127,0.668,130,1.777,133,1.927,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.655,155,0.655,156,2.337,159,2.328,160,2.46,161,1.555,162,2.111,163,2.113,164,1.855,165,1.797,166,1.555,169,2.358,170,0.643,171,1.804,172,1.112,173,1.069,174,1.09,175,1.09,176,1.09,177,1.029,178,1.029,179,0.694,180,0.694,181,0.681,182,2.372,183,1.112,184,1.966,185,1.692,186,1.692,187,2.245,188,1.09,189,1.09,190,1.725,191,1.09,192,1.929,193,1.09,194,0.708,195,2.055,196,1.496,197,0.708,198,0.708,199,1.069,200,0.708,201,1.555,202,1.525,203,1.069,204,1.555,205,2.113,206,2.113,207,1.966,208,1.555,209,1.692,210,1.525,211,1.525,212,1.09,213,0.704,214,1.112,215,1.112,216,1.373,217,1.373,218,1.373,219,1.09,220,1.112,221,1.112,222,1.525,223,1.069,224,1.525,225,1.069,226,1.09,227,1.112,228,1.112,229,1.09,230,1.525,231,1.411,232,1.966,233,1.905,234,1.525,235,1.725,236,1.09,237,1.554,238,1.09,239,0.708,240,1.525,241,1.759,242,1.069,243,0.772,244,0.952,245,0.63,246,1.901,247,0.694,248,0.668,249,0.901,250,1.66,251,1.009,252,1.029,253,1.32,254,0.899,255,0.694,256,1.069,257,1.692,258,0.694,259,1.069,260,1.725,261,0.694,262,0.694,263,0.826,264,1.346,265,1.049,266,1.626,267,2.13,268,1.09,269,1.09,270,0.772,271,1.09,272,1.09,273,1.597,274,1.504,275,1.09,276,1.09,277,0.901,278,1.009,279,1.525,280,1.09,281,0.681,282,1.069,283,1.069,284,1.295,285,1.09,286,1.09,287,1.32,288,0.708,289,1.09,290,1.09,291,1.09,292,1.09,293,1.09,294,1.09,295,1.411,296,1.069,297,0.681,298,1.504,299,1.222,300,0.495,301,1.029,302,0.668,303,0.708,304,1.024,305,1.32,306,1.797,307,1.32,308,1.295,309,1.32,310,1.069,311,1.069,312,1.069,313,1.069,314,1.32,315,1.32,316,1.32,317,1.069,318,0.681,319,1.748,320,1.714,321,0.668,322,2.292,323,2.363,324,0.668,325,0.708,326,0.708,327,0.668,328,0.708,329,0.708,330,0.668,331,0.708,332,0.708,333,0.655,334,0.708,335,0.708,336,0.655,337,0.708,338,0.708,339,0.668,340,0.668,341,0.708,342,0.708,343,0.668,344,0.668,345,1.09,346,0.668,347,0.708,348,0.708,349,0.681,350,0.708,351,0.708,352,0.681,353,0.708,354,0.708,355,0.681,356,0.708,357,0.681,358,0.708,359,0.668,360,0.708,361,0.708,362,0.681,363,0.708,364,0.708,365,0.668,366,0.708,367,0.708,368,0.655,369,0.655,370,0.708,371,0.708,372,0.668,373,0.708,374,0.708,375,0.668,376,0.708,377,0.708,378,0.668,379,0.708,380,0.708,381,0.668,382,0.668,383,0.668,384,0.708,385,0.708,386,0.681,387,2.149,388,0.708,389,0.708,390,0.643,391,0.708,392,0.708,393,0.643,394,0.708,395,0.708,396,0.618,397,0.708,398,1.373,399,0.643,400,0.708,401,0.655,402,0.584,403,0.708,404,0.655,405,0.668,406,0.708,407,0.708,408,0.63,409,0.655,410,0.681]],["title/injectables/DeletePitchGQL.html",[152,0.202,340,1.122]],["body/injectables/DeletePitchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.965,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,1.047,341,1.11,342,1.11,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,1066,2.73]],["title/injectables/DeleteTeamGQL.html",[152,0.202,372,1.122]],["body/injectables/DeleteTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.124,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,1.047,373,1.11,374,1.11,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,1067,2.73]],["title/injectables/DeleteTournamentGQL.html",[152,0.202,378,1.122]],["body/injectables/DeleteTournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.734,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,1.047,379,1.11,380,1.11,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,1068,2.73]],["title/injectables/DeleteUserGQL.html",[152,0.202,383,1.122]],["body/injectables/DeleteUserGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.803,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,1.047,384,1.11,385,1.11,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,1069,2.73]],["title/components/EditContactComponent.html",[27,0.437,451,1.237]],["body/components/EditContactComponent.html",[3,0.114,4,0.114,5,0.103,7,0.623,10,0.314,11,0.58,17,0.529,18,0.008,21,1.031,22,0.181,27,0.783,28,2.048,31,0.114,40,2.235,41,1.807,42,2.047,50,1.962,53,2.287,54,2.515,55,0.114,60,2.449,61,2.356,62,2.553,63,1.881,65,0.124,66,1.573,67,1.81,78,3.096,82,1.532,103,2.143,146,2.138,149,0.005,150,0.006,151,0.005,157,1.067,158,1.025,167,0.849,195,2.04,205,1.455,206,1.455,207,2.204,213,0.68,243,0.756,249,0.669,263,0.832,270,0.756,277,1.018,278,1.775,300,0.701,368,1.455,408,1.4,412,1.604,413,2.159,414,1.807,415,1.771,416,1.771,418,1.771,419,1.995,422,1.741,425,1.895,426,2.117,427,1.4,428,2.203,429,2.203,430,1.771,431,2.509,432,1.771,433,1.771,434,1.636,435,1.771,436,1.636,437,1.702,438,2.581,439,1.636,440,1.771,441,1.604,442,1.702,443,1.604,444,2.203,445,1.604,446,1.771,447,1.636,448,1.771,449,1.636,450,1.702,451,2.317,452,1.636,453,1.771,454,1.636,455,1.771,456,1.636,457,1.771,458,1.636,459,1.604,460,2.203,461,1.771,462,1.636,463,1.604,464,1.771,465,1.636,466,1.771,467,1.636,468,1.771,469,1.636,470,1.771,471,1.668,472,1.771,473,1.636,474,1.771,475,1.636,476,1.771,477,1.636,478,1.771,479,1.636,480,1.771,481,1.604,482,1.771,483,1.573,484,1.771,485,1.604,486,1.771,487,1.636,488,1.771,489,1.636,490,1.771,491,1.771,492,1.636,493,1.771,494,1.542,495,1.771,496,1.604,497,1.771,498,1.604,499,1.771,500,1.636,501,1.771,502,1.604,503,1.771,504,1.636,505,1.702,506,1.771,507,1.771,517,1.81,518,1.81,663,2.602,741,3.137,760,3.24,924,5.473,927,3.923,929,5.118,952,6.692,953,6.148,968,5.118,971,4.672,1070,7.524,1071,7.524,1072,5.392,1073,8.226,1074,7.557,1075,7.557,1076,6.148,1077,7.301,1078,7.557,1079,6.075,1080,6.692,1081,6.075,1082,7.557,1083,7.639,1084,6.075,1085,6.708,1086,7.557,1087,6.075,1088,7.557,1089,6.075,1090,6.708,1091,6.148,1092,6.075,1093,6.075,1094,5.396]],["title/components/EditPitchContactDialogComponent.html",[27,0.437,458,1.237]],["body/components/EditPitchContactDialogComponent.html",[3,0.114,4,0.114,5,0.104,7,0.626,10,0.315,11,0.582,17,0.492,18,0.008,22,0.181,23,3.959,24,2.882,26,1.891,27,0.785,28,2.052,29,2.729,31,0.114,40,3.371,41,1.816,42,2.057,50,1.972,53,3.245,54,2.527,55,0.114,60,2.449,61,2.356,62,2.555,63,1.887,65,0.125,66,1.58,67,1.815,82,1.412,83,2.232,85,2.052,86,3.251,88,3.412,90,3.579,103,2.146,112,2.355,114,2.057,115,1.931,135,2.527,138,2.014,139,2.166,149,0.005,150,0.006,151,0.005,167,0.8,192,1.49,213,0.681,243,0.758,249,0.672,254,1.804,263,0.835,270,0.974,277,1.07,278,1.936,300,0.704,343,2.237,412,1.611,413,2.166,414,1.816,415,1.779,416,1.779,418,1.779,419,2.001,422,1.746,425,1.746,426,1.71,427,1.406,428,2.209,429,2.209,430,1.779,431,2.513,432,1.779,433,1.779,434,1.643,435,1.779,436,1.643,437,1.71,438,2.584,439,1.643,440,1.779,441,1.611,442,1.71,443,1.611,444,2.209,445,1.611,446,1.779,447,1.643,448,1.779,449,1.643,450,1.71,451,1.643,452,1.643,453,1.779,454,1.643,455,1.779,456,1.643,457,1.779,458,2.321,459,1.611,460,2.209,461,1.779,462,1.643,463,1.611,464,1.779,465,1.643,466,1.779,467,1.643,468,1.779,469,1.643,470,1.779,471,1.676,472,1.779,473,1.643,474,1.779,475,1.643,476,1.779,477,1.643,478,1.779,479,1.643,480,1.779,481,1.611,482,1.779,483,1.58,484,1.779,485,1.611,486,1.779,487,1.643,488,1.779,489,1.643,490,1.779,491,1.779,492,1.643,493,1.779,494,1.549,495,1.779,496,1.611,497,1.779,498,1.611,499,1.779,500,1.643,501,1.779,502,1.611,503,1.779,504,1.643,505,1.71,506,1.779,507,1.779,517,1.815,518,1.815,569,5.725,595,3.795,612,2.591,889,3.942,890,5.583,891,5.133,896,4.966,906,3.942,1008,4.966,1070,7.212,1077,6.727,1095,6.104,1096,6.104,1097,7.579,1098,6.104,1099,6.104,1100,6.104,1101,6.104,1102,6.104,1103,4.686]],["title/components/EditRankingPenaltyComponent.html",[27,0.437,459,1.213]],["body/components/EditRankingPenaltyComponent.html",[0,0.679,3,0.108,4,0.108,5,0.098,7,0.59,10,0.298,11,0.561,17,0.532,18,0.008,19,1.388,21,0.908,22,0.182,23,3.877,24,2.719,26,1.784,27,0.764,28,1.998,29,2.574,30,3.719,31,0.108,40,3.328,41,1.713,42,1.941,50,1.86,53,3.178,54,2.384,55,0.108,60,2.443,61,2.35,62,2.535,63,1.819,65,0.118,66,1.491,67,1.75,82,1.361,83,2.305,85,1.998,86,3.166,88,3.323,90,3.451,91,3.178,103,2.102,112,2.293,114,1.941,115,1.822,129,2.883,130,1.388,133,1.5,134,1.355,135,2.384,137,3.56,138,1.9,139,2.088,149,0.005,150,0.006,151,0.005,153,2.022,162,1.406,163,1.379,164,1.353,165,1.379,167,0.849,213,0.634,243,0.731,246,1.277,248,1.406,249,1.07,251,1.353,263,0.805,270,0.731,277,0.805,295,1.983,300,0.664,399,2.125,402,1.929,412,1.52,413,2.088,414,1.713,415,1.679,416,1.679,418,1.679,419,1.929,422,1.684,425,1.684,426,1.613,427,1.327,428,2.13,429,2.13,430,1.679,431,2.461,432,1.679,433,1.679,434,1.55,435,1.679,436,1.55,437,1.613,438,2.54,439,1.55,440,1.679,441,1.52,442,1.613,443,1.52,444,2.13,445,1.52,446,1.679,447,1.55,448,1.679,449,1.55,450,1.613,451,1.55,452,1.55,453,1.679,454,1.55,455,1.679,456,1.55,457,1.679,458,1.55,459,2.228,460,2.13,461,1.679,462,1.55,463,1.52,464,1.679,465,1.55,466,1.679,467,1.55,468,1.679,469,1.55,470,1.679,471,1.581,472,1.679,473,1.55,474,1.679,475,1.55,476,1.679,477,1.55,478,1.679,479,1.55,480,1.679,481,1.52,482,1.679,483,1.491,484,1.679,485,1.52,486,1.679,487,1.55,488,1.679,489,1.55,490,1.679,491,1.679,492,1.55,493,1.679,494,1.462,495,1.679,496,1.52,497,1.679,498,1.52,499,1.679,500,1.55,501,1.679,502,1.52,503,1.679,504,1.55,505,1.613,506,1.679,507,1.679,517,1.379,518,1.379,567,6.857,612,3.101,663,2.516,943,4.685,960,4.338,1094,5.218,1104,7.006,1105,4.366,1106,6.53,1107,5.944,1108,7.124,1109,7.124,1110,6.53,1111,7.124,1112,7.493,1113,6.606,1114,7.124,1115,7.307,1116,5.759,1117,5.759,1118,5.111,1119,5.759,1120,5.111,1121,7.124,1122,6.486,1123,5.111,1124,5.54,1125,3.719,1126,4.685,1127,6.486,1128,5.944,1129,5.111,1130,6.486,1131,5.111,1132,6.486,1133,5.111,1134,5.111,1135,5.111,1136,5.111,1137,7.124,1138,4.685,1139,4.685,1140,5.111,1141,5.111]],["title/interfaces/EditRankingPenaltyComponentData.html",[0,0.542,1113,3.484]],["body/interfaces/EditRankingPenaltyComponentData.html",[0,0.807,2,3.232,3,0.128,4,0.128,5,0.117,10,0.354,11,0.623,17,0.485,18,0.008,19,1.3,21,0.874,22,0.19,23,3.732,24,3.232,26,2.121,27,0.773,28,2.023,29,3.06,30,4.42,31,0.128,40,3.188,41,2.036,42,2.307,50,2.211,53,3.058,54,2.833,55,0.128,60,1.704,61,1.639,62,2.333,63,1.704,65,0.14,67,1.639,82,1.275,83,2.403,85,1.704,86,2.699,88,2.833,90,3.232,91,2.576,103,1.704,112,1.956,114,2.307,115,2.165,129,3.427,130,1.543,133,1.667,134,1.462,135,2.833,137,4.231,138,2.258,139,2.322,149,0.005,150,0.006,151,0.005,153,1.946,162,1.671,163,1.639,164,1.608,165,1.639,246,1.987,248,1.671,249,1.008,251,2.036,295,2.181,399,2.036,402,1.848,419,1.807,459,1.807,567,5.802,1104,5.189,1105,5.189,1106,5.568,1107,5.568,1108,6.075,1109,6.075,1110,5.568,1111,6.075,1112,6.075,1113,6.57,1114,6.075,1121,7.212,1122,6.075,1124,6.16,1125,4.42,1126,7.05,1127,7.212,1128,6.61,1129,6.075,1130,7.212,1131,6.075,1132,7.212,1133,6.075,1134,6.075,1135,6.075,1136,6.075,1137,7.691,1138,5.568,1139,5.568,1140,6.075,1141,6.075]],["title/components/EditTournamentRoundComponent.html",[27,0.437,66,1.19]],["body/components/EditTournamentRoundComponent.html",[0,0.791,1,5.966,3,0.094,4,0.094,5,0.086,6,7.224,7,1.003,8,6.453,9,3.825,10,0.346,11,0.515,12,1.208,13,2.018,14,1.035,15,3.258,17,0.552,18,0.008,19,1.524,20,5.436,21,0.543,22,0.186,23,3.837,24,2.382,25,3.602,26,1.563,27,0.717,28,1.875,29,2.255,30,3.258,31,0.094,32,4.854,33,3.258,34,6.647,35,3.119,36,3.119,37,2.783,38,3.817,39,2.605,40,3.225,41,1.501,42,1.7,43,3.28,44,2.038,45,0.977,46,1.885,47,1.185,48,1.814,49,1.779,50,1.63,51,2.255,52,2.255,53,3.021,54,2.088,55,0.141,56,1.797,57,2.018,58,1.792,59,2.091,60,2.429,61,2.336,62,2.426,63,1.669,64,5.455,65,0.103,66,2.078,67,1.606,68,5.455,69,6.127,70,5.455,71,6.127,72,5.455,73,6.127,74,5.455,75,6.127,76,1.769,77,6.127,78,3.021,79,3.834,80,6.127,81,6.127,82,1.249,83,2.224,84,5.455,85,2.244,86,3.295,87,6.127,88,3.118,89,5.378,90,3.166,91,3.145,92,3.825,93,3.825,94,3.258,95,3.825,96,5.455,97,4.104,98,4.104,99,6.127,100,4.104,101,6.127,102,4.104,103,1.998,104,5.455,105,4.104,106,4.104,107,1.376,108,4.104,109,5.455,110,4.104,111,2.526,112,2.152,113,6.53,114,1.7,115,1.596,116,4.104,117,1.208,118,5.455,119,1.232,120,4.104,121,4.104,122,4.104,123,1.232,124,4.104,125,1.232,126,4.104,127,1.232,128,4.104,129,2.526,130,1.273,131,4.104,132,4.104,133,1.035,134,0.851,135,2.088,136,4.104,137,3.119,138,1.664,139,1.916,140,4.104,141,5.455,142,4.145,143,5.455,144,6.53,145,2.998,146,1.775,147,4.104,148,2.605,149,0.004,150,0.005,151,0.004,157,0.886,158,0.851,167,0.882,213,0.692,237,1.35,243,0.671,249,0.555,263,0.738,270,0.671,277,0.738,300,0.582,412,1.332,413,1.916,415,1.471,416,1.471,418,1.471,422,1.545,425,2.02,426,2.34,427,1.162,428,1.955,429,1.955,430,1.471,431,2.34,432,1.471,433,1.471,434,1.358,435,1.471,436,1.358,437,1.413,438,2.436,439,1.358,440,1.471,441,1.332,442,1.413,443,1.332,444,1.955,445,1.332,446,1.471,447,1.358,448,1.471,449,1.358,450,1.413,451,1.358,452,1.358,453,1.471,454,1.358,455,1.471,456,1.358,457,1.471,458,1.358,459,1.332,460,1.955,461,1.471,462,1.358,463,1.332,464,1.471,465,1.358,466,1.471,467,1.358,468,1.471,469,1.358,470,1.471,471,1.385,472,1.471,473,1.358,474,1.471,475,1.358,476,1.471,477,1.358,478,1.471,479,1.358,480,1.471,481,1.332,482,1.471,483,1.306,484,1.471,485,1.332,486,1.471,487,1.358,488,1.471,489,1.358,490,1.471,491,1.471,492,1.358,493,1.471,494,1.281,495,1.471,496,1.332,497,1.471,498,1.332,499,1.471,500,1.358,501,1.471,502,1.332,503,1.471,504,1.358,505,1.413,506,1.471,507,1.471,517,2.001,518,2.001,612,3.546,663,3.066,960,4.765,1142,6.706,1143,6.706,1144,6.706,1145,6.706,1146,5.045,1147,6.706,1148,5.045,1149,5.045,1150,5.045,1151,5.045,1152,5.045,1153,5.045,1154,5.045,1155,5.045,1156,5.045,1157,5.045,1158,5.045,1159,5.045,1160,5.045,1161,5.045,1162,5.045,1163,5.045,1164,5.045,1165,6.706,1166,6.706,1167,6.706,1168,6.706,1169,4.541,1170,4.104,1171,6.706,1172,7.124,1173,6.706,1174,6.706]],["title/components/EditUserDialogComponent.html",[27,0.437,462,1.237]],["body/components/EditUserDialogComponent.html",[3,0.098,4,0.098,5,0.089,7,0.536,10,0.27,11,0.527,17,0.547,18,0.008,21,0.739,22,0.185,23,3.739,24,2.47,25,5.813,26,1.621,27,0.73,28,1.909,29,2.339,31,0.098,32,4.841,40,3.254,41,1.556,42,1.763,50,1.69,53,3.065,54,2.166,55,0.098,60,2.433,61,2.34,62,2.501,63,1.71,65,0.107,66,1.354,67,1.645,78,3.266,79,3.926,82,1.279,83,2.289,85,2.16,86,3.024,88,3.174,90,3.243,103,2.027,112,2.593,114,2.584,115,2.426,129,3.439,130,1.304,134,0.883,135,2.843,138,2.529,139,2.48,142,3.234,149,0.004,150,0.005,151,0.004,157,1.206,158,1.159,167,0.874,177,2.211,195,1.948,205,1.645,206,1.645,213,0.643,230,2.067,231,1.912,232,1.71,233,1.743,234,2.067,235,1.302,237,1.053,243,0.687,249,0.576,263,1.08,265,1.988,270,0.687,277,0.756,300,0.603,381,2.16,382,2.16,409,1.95,412,1.381,413,1.962,414,1.556,415,1.525,416,1.525,418,1.525,419,1.813,422,1.582,425,1.948,426,1.924,427,1.205,428,2.002,429,2.002,430,1.525,431,2.373,432,1.525,433,1.525,434,1.408,435,1.525,436,1.408,437,1.465,438,2.465,439,1.408,440,1.525,441,1.381,442,1.465,443,1.381,444,2.002,445,1.381,446,1.525,447,1.408,448,1.525,449,1.408,450,1.465,451,1.408,452,1.408,453,1.525,454,1.408,455,1.525,456,1.408,457,1.525,458,1.408,459,1.381,460,2.002,461,1.525,462,2.192,463,1.381,464,1.525,465,1.408,466,1.525,467,1.408,468,1.525,469,1.408,470,1.525,471,1.436,472,1.525,473,1.408,474,1.525,475,1.408,476,1.525,477,1.408,478,1.525,479,1.408,480,1.525,481,1.381,482,1.525,483,1.354,484,1.525,485,1.381,486,1.525,487,1.408,488,1.525,489,1.408,490,1.525,491,1.525,492,1.408,493,1.525,494,1.328,495,1.525,496,1.381,497,1.525,498,1.381,499,1.525,500,1.408,501,1.525,502,1.381,503,1.525,504,1.408,505,1.465,506,1.525,507,1.525,515,3.845,517,1.645,518,1.645,519,4.553,569,6.107,595,3.439,612,2.22,663,2.988,741,2.701,858,5.587,874,4.256,875,5.587,877,5.587,880,3.966,889,3.378,890,5.193,891,4.651,896,4.256,906,4.952,924,5.775,927,3.378,929,5.514,930,4.643,937,6.096,960,4.078,1008,4.256,1009,4.643,1013,4.643,1083,6.806,1085,6.806,1090,4.643,1125,3.378,1175,8.394,1176,7.668,1177,6.868,1178,8.142,1179,4.256,1180,7.668,1181,6.868,1182,5.231,1183,6.868,1184,5.231,1185,5.231,1186,5.231,1187,5.231,1188,5.231,1189,5.231,1190,5.231,1191,5.231,1192,4.643,1193,5.231,1194,5.207,1195,5.231,1196,5.231,1197,5.231,1198,5.231,1199,5.231,1200,5.231,1201,5.231,1202,7.668,1203,8.142,1204,5.231,1205,5.231,1206,6.868,1207,5.231,1208,6.868,1209,6.868,1210,6.868,1211,5.231,1212,5.231,1213,5.231,1214,5.231,1215,5.231,1216,5.231,1217,5.231,1218,4.643,1219,4.643,1220,6.868,1221,6.868,1222,6.868,1223,6.868,1224,6.868,1225,6.868]],["title/components/EditmatchPitchComponent.html",[27,0.437,452,1.237]],["body/components/EditmatchPitchComponent.html",[3,0.105,4,0.105,5,0.096,7,0.577,10,0.291,11,0.553,17,0.528,18,0.008,21,0.9,22,0.188,23,3.845,24,2.658,26,1.744,27,0.756,28,1.977,29,2.516,30,3.635,31,0.105,43,3.458,44,2.274,50,1.818,51,2.516,52,2.516,55,0.105,60,2.441,61,2.348,62,2.329,63,1.793,65,0.115,66,1.457,67,1.725,78,2.711,82,1.341,83,2.167,85,1.977,86,3.132,90,3.401,103,2.084,112,2.269,114,1.897,115,1.781,137,3.48,138,1.857,139,1.608,146,2.535,149,0.004,150,0.006,151,0.004,157,0.988,158,1.34,167,0.854,213,0.683,243,0.9,244,1.856,249,0.62,254,1.852,263,0.793,270,0.921,277,0.793,300,0.649,412,1.486,413,2.058,414,1.674,415,1.641,416,1.641,418,1.641,419,1.901,422,1.659,425,1.994,426,2.224,427,1.297,428,2.1,429,2.1,430,1.641,431,2.441,432,1.641,433,1.641,434,1.515,435,1.641,436,1.515,437,1.577,438,2.522,439,1.515,440,1.641,441,1.486,442,1.577,443,1.486,444,2.1,445,1.486,446,1.641,447,1.515,448,1.641,449,1.939,450,2.017,451,1.515,452,2.254,453,1.641,454,1.515,455,1.641,456,1.515,457,1.641,458,1.515,459,1.486,460,2.1,461,1.641,462,1.515,463,1.486,464,1.641,465,1.515,466,1.641,467,1.515,468,1.641,469,1.515,470,1.641,471,1.546,472,1.641,473,1.515,474,1.641,475,1.515,476,1.641,477,1.515,478,1.641,479,1.515,480,1.641,481,1.486,482,1.641,483,1.457,484,1.641,485,1.486,486,1.641,487,1.515,488,1.641,489,1.515,490,1.641,491,1.641,492,1.515,493,1.641,494,1.429,495,1.641,496,1.486,497,1.641,498,1.486,499,1.641,500,1.515,501,1.641,502,1.486,503,1.641,504,1.515,505,1.577,506,1.641,507,1.641,517,1.902,518,1.902,570,3.342,595,3.976,596,5.176,612,2.389,663,3.233,741,2.907,828,3.812,892,4.268,909,4.276,910,4.276,913,5.461,924,5.349,927,3.635,936,3.48,996,4.019,1006,4.268,1007,5.144,1016,4.996,1049,6.392,1094,5.143,1103,4.91,1226,4.996,1227,7.202,1228,7.942,1229,7.202,1230,6.022,1231,6.022,1232,6.392,1233,7.202,1234,6.811,1235,8.372,1236,4.647,1237,7.202,1238,5.461,1239,5.629,1240,6.022,1241,5.629,1242,7.202,1243,5.629,1244,5.629,1245,5.629,1246,5.629,1247,5.629,1248,4.579,1249,5.461,1250,4.268,1251,4.019,1252,4.268,1253,4.268,1254,4.268,1255,4.268,1256,4.878,1257,4.268,1258,4.268,1259,4.268,1260,6.022,1261,4.268,1262,4.268,1263,4.019,1264,4.996,1265,5.629,1266,4.996,1267,6.392,1268,6.392,1269,7.202,1270,6.392,1271,6.348,1272,7.202,1273,7.202,1274,4.878]],["title/components/EditmatchResultComponent.html",[27,0.437,454,1.237]],["body/components/EditmatchResultComponent.html",[3,0.113,4,0.113,5,0.102,7,0.617,10,0.311,11,0.576,17,0.538,18,0.008,19,1.629,22,0.184,23,3.939,24,2.841,26,1.864,27,0.779,28,2.039,29,2.69,31,0.113,40,3.449,41,1.79,42,2.027,50,1.943,53,3.323,54,2.491,55,0.113,60,2.448,61,2.355,62,2.376,63,1.87,65,0.123,66,1.557,67,1.799,82,1.399,83,1.944,85,2.318,86,3.23,88,3.654,90,3.547,103,2.135,112,2.34,114,2.027,115,1.903,137,3.719,138,1.985,139,2.146,149,0.005,150,0.006,151,0.005,167,0.857,185,2,186,2,213,0.647,243,0.914,244,1.901,249,0.662,263,0.827,270,0.751,277,0.827,300,0.694,412,1.588,413,2.146,414,1.79,415,1.754,416,1.754,418,1.754,419,1.983,422,1.731,425,1.731,426,1.685,427,1.386,428,2.19,429,2.19,430,1.754,431,2.5,432,1.754,433,1.754,434,1.62,435,1.754,436,1.62,437,1.685,438,2.573,439,1.62,440,1.754,441,1.588,442,1.685,443,1.588,444,2.19,445,1.588,446,1.754,447,1.62,448,1.754,449,1.62,450,1.685,451,1.62,452,1.62,453,1.754,454,2.309,455,1.754,456,1.62,457,1.754,458,1.62,459,1.588,460,2.19,461,1.754,462,1.62,463,1.588,464,1.754,465,1.62,466,1.754,467,1.62,468,1.754,469,1.62,470,1.754,471,1.652,472,1.754,473,1.62,474,1.754,475,1.62,476,1.754,477,1.62,478,1.754,479,1.62,480,1.754,481,1.588,482,1.754,483,1.557,484,1.754,485,1.588,486,1.754,487,1.62,488,1.754,489,1.62,490,1.754,491,1.754,492,1.62,493,1.754,494,1.527,495,1.754,496,1.588,497,1.754,498,1.588,499,1.754,500,1.62,501,1.754,502,1.588,503,1.754,504,1.62,505,1.685,506,1.754,507,1.754,517,1.441,518,1.441,612,2.554,663,3.1,676,5.34,892,4.562,909,4.46,910,4.46,913,5.695,1094,5.363,1234,6.978,1236,4.716,1252,4.562,1275,5.34,1276,7.512,1277,8.19,1278,7.512,1279,7.512,1280,6.016,1281,6.016,1282,6.016,1283,6.016,1284,6.016,1285,6.016,1286,7.512,1287,6.016,1288,7.512,1289,6.016,1290,6.016,1291,6.016,1292,6.016,1293,6.016,1294,6.016,1295,6.016,1296,7.512,1297,6.016,1298,6.016]],["title/components/EditmatchTimeComponent.html",[27,0.437,456,1.237]],["body/components/EditmatchTimeComponent.html",[3,0.111,4,0.111,5,0.101,7,0.605,10,0.305,11,0.569,17,0.524,18,0.008,22,0.186,23,3.912,24,2.787,26,1.829,27,0.773,28,2.021,29,2.638,31,0.111,34,6.895,35,3.649,36,3.649,37,3.256,38,4.07,39,3.048,40,3.346,41,1.756,42,1.989,50,1.906,55,0.111,56,1.553,60,2.446,61,2.353,62,2.363,63,1.848,65,0.121,66,1.528,67,1.777,82,1.382,83,2.101,85,2.23,86,3.202,90,3.505,92,4.475,93,4.475,94,3.811,95,4.475,103,2.121,137,3.649,138,1.947,139,1.686,142,3.649,149,0.005,150,0.006,151,0.005,167,0.844,213,0.673,237,1.188,243,0.91,244,1.888,249,0.65,263,0.817,270,0.742,277,0.817,300,0.681,412,1.558,413,2.121,414,1.756,415,1.721,416,1.721,418,1.721,419,1.959,422,1.71,425,1.871,426,2.274,427,1.36,428,2.163,429,2.163,430,1.721,431,2.483,432,1.721,433,1.721,434,1.589,435,1.721,436,1.589,437,1.653,438,2.559,439,1.589,440,1.721,441,1.558,442,1.653,443,1.558,444,2.163,445,1.558,446,1.721,447,1.589,448,1.721,449,1.589,450,1.653,451,1.589,452,1.589,453,1.721,454,1.589,455,1.721,456,2.293,457,1.721,458,1.589,459,1.558,460,2.163,461,1.721,462,1.589,463,1.558,464,1.721,465,1.589,466,1.721,467,1.589,468,1.721,469,1.589,470,1.721,471,1.621,472,1.721,473,1.589,474,1.721,475,1.589,476,1.721,477,1.589,478,1.721,479,1.589,480,1.721,481,1.558,482,1.721,483,1.528,484,1.721,485,1.558,486,1.721,487,1.589,488,1.721,489,1.589,490,1.721,491,1.721,492,1.589,493,1.721,494,1.498,495,1.721,496,1.558,497,1.721,498,1.558,499,1.721,500,1.589,501,1.721,502,1.558,503,1.721,504,1.589,505,1.653,506,1.721,507,1.721,517,1.777,518,1.777,612,2.505,663,3.218,892,4.475,909,4.406,910,4.406,913,5.627,936,3.649,1094,5.299,1234,6.93,1236,4.696,1252,4.475,1299,5.238,1300,7.422,1301,8.118,1302,7.422,1303,7.791,1304,7.422,1305,7.422,1306,7.422,1307,5.902,1308,5.902,1309,5.902,1310,5.902,1311,5.902,1312,7.422,1313,5.902,1314,6.587,1315,7.422,1316,5.299,1317,5.627,1318,7.422,1319,5.627]],["title/injectables/EndSeasonGQL.html",[152,0.202,362,1.144]],["body/injectables/EndSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.126,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,1.068,363,1.11,364,1.11,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,1320,2.73]],["title/injectables/EventGQL.html",[152,0.202,386,1.144]],["body/injectables/EventGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.589,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.494,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,1.067,387,2.147,388,1.109,389,1.109,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1321,2.728]],["title/components/EventsComponent.html",[27,0.437,463,1.213]],["body/components/EventsComponent.html",[3,0.119,4,0.119,5,0.109,7,0.653,10,0.329,11,0.597,17,0.502,18,0.008,22,0.183,27,0.8,28,2.092,31,0.119,38,4.118,43,3.659,44,2.574,50,2.058,51,3.479,52,2.849,55,0.119,60,2.453,61,2.36,62,2.416,63,1.938,65,0.13,66,1.649,67,1.864,82,1.449,83,1.649,85,2.092,91,2.399,103,2.179,149,0.005,150,0.006,151,0.005,167,0.812,213,0.663,237,1.283,242,2.092,243,0.779,249,0.702,263,0.857,270,0.779,277,0.857,300,0.735,390,2.056,412,1.682,413,2.224,414,1.896,415,1.858,416,1.858,418,1.858,419,2.054,422,1.793,425,1.468,426,1.785,427,1.468,428,2.269,429,2.269,430,1.858,431,2.551,432,1.858,433,1.858,434,1.716,435,1.858,436,1.716,437,1.785,438,2.616,439,1.716,440,1.858,441,1.682,442,1.785,443,1.682,444,2.269,445,1.682,446,1.858,447,1.716,448,1.858,449,1.716,450,1.785,451,1.716,452,1.716,453,1.858,454,1.716,455,1.858,456,1.716,457,1.858,458,1.716,459,1.682,460,2.269,461,1.858,462,1.716,463,2.31,464,1.858,465,1.716,466,1.858,467,1.716,468,1.858,469,1.716,470,1.858,471,1.75,472,1.858,473,1.716,474,1.858,475,1.716,476,1.858,477,1.716,478,1.858,479,1.716,480,1.858,481,1.682,482,1.858,483,1.649,484,1.858,485,1.682,486,1.858,487,1.716,488,1.858,489,1.716,490,1.858,491,1.858,492,1.716,493,1.858,494,1.618,495,1.858,496,1.682,497,1.858,498,1.682,499,1.858,500,1.716,501,1.858,502,1.682,503,1.858,504,1.716,505,1.785,506,1.858,507,1.858,517,1.526,518,1.526,561,6.332,1317,4.832,1319,4.832,1322,5.656,1323,8.403,1324,7.783,1325,6.373,1326,7.783,1327,7.783,1328,6.373,1329,6.373,1330,5.184,1331,6.373,1332,6.373,1333,6.373,1334,3.94,1335,6.373,1336,7.783,1337,7.783]],["title/modules/EventsModule.html",[525,1.424,537,3.281]],["body/modules/EventsModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.19,31,0.135,55,0.135,65,0.147,149,0.006,150,0.007,151,0.006,427,1.659,463,2.556,525,2.231,527,2.71,528,3.605,529,4.431,530,3.718,531,3.718,532,4.431,537,6.93,538,5.007,539,4.464,540,3.84,541,3.84,544,3.465,545,3.381,547,4.275,561,5.857,706,6.358,707,5.857,1338,6.391,1339,6.391,1340,6.391,1341,6.391,1342,6.703,1343,7.2,1344,7.2,1345,6.391,1346,6.391]],["title/modules/EventsRoutingModule.html",[525,1.424,1342,3.281]],["body/modules/EventsRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.92,463,2.255,522,3.625,527,2.808,544,3.088,545,3.451,574,4.429,575,4.788,576,4.429,578,4.265,579,4.612,1342,6.1,1345,6.621,1347,7.46]],["title/modules/GraphQLModule.html",[525,1.424,723,3.281]],["body/modules/GraphQLModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,298,1.945,299,1.945,427,1.683,525,2.264,527,2.75,528,3.657,529,3.657,530,3.772,531,4.597,532,4.226,539,4.502,540,3.896,541,3.896,545,3.41,597,6.378,599,5.822,619,5.943,626,6.484,723,6.823,1348,6.484,1349,6.484,1350,7.305,1351,8.441,1352,8.441,1353,5.943,1354,5.943,1355,7.305]],["title/injectables/GraphqlService.html",[152,0.202,597,3.112]],["body/injectables/GraphqlService.html",[3,0.115,4,0.115,5,0.104,10,0.316,17,0.453,18,0.008,22,0.197,31,0.115,40,3.175,41,1.82,42,2.062,53,3.248,55,0.115,65,0.125,78,3.339,82,1.414,83,2.372,88,3.416,107,1.256,130,1.441,139,2.169,146,3.181,149,0.005,150,0.006,151,0.005,152,0.333,154,1.28,157,1.074,167,0.704,170,1.437,187,1.437,213,0.483,246,1.356,257,1.494,298,2.21,299,1.749,301,1.976,304,1.16,319,1.139,320,1.117,422,1.749,425,1.41,426,1.714,515,4.074,517,1.465,518,1.465,519,4.9,578,3.498,597,5.141,598,5.919,599,5.666,616,4.639,617,5.43,619,4.977,628,6.737,630,6.175,738,4.144,760,4.401,836,4.144,850,6.175,861,7.354,884,6.175,935,4.977,946,4.261,1059,7.324,1353,7.647,1354,6.175,1356,5.43,1357,8.628,1358,6.118,1359,9.166,1360,6.118,1361,6.118,1362,7.59,1363,8.135,1364,5.43,1365,6.118,1366,6.118,1367,8.252,1368,6.118,1369,6.118,1370,6.737,1371,5.43,1372,6.175,1373,4.639,1374,4.639,1375,5.755,1376,6.118,1377,6.118,1378,6.118,1379,7.59,1380,6.118,1381,6.118,1382,6.118,1383,6.118,1384,6.118,1385,6.118,1386,6.118,1387,6.118,1388,6.118,1389,8.135,1390,6.118,1391,6.118,1392,7.59,1393,7.59,1394,6.118,1395,6.118,1396,6.118,1397,6.118,1398,6.118,1399,6.118,1400,6.118,1401,5.43,1402,6.118,1403,6.118,1404,6.118,1405,6.118,1406,6.118,1407,6.118,1408,6.118,1409,6.118,1410,6.118,1411,6.118,1412,6.118,1413,6.118,1414,4.977,1415,7.59,1416,6.118,1417,6.118,1418,8.252,1419,5.755,1420,6.118,1421,6.118,1422,4.639,1423,6.118,1424,6.118,1425,5.43,1426,7.59,1427,6.118,1428,6.118,1429,6.118,1430,6.118,1431,6.118]],["title/injectables/GraphqlSubscriptionService.html",[152,0.202,599,2.841]],["body/injectables/GraphqlSubscriptionService.html",[0,0.765,3,0.121,4,0.121,5,0.11,10,0.335,11,0.603,17,0.506,18,0.008,19,1.494,21,0.911,22,0.184,31,0.121,55,0.147,65,0.132,82,1.465,83,2.44,85,2.245,112,1.852,115,2.785,134,1.094,135,3.256,139,2.247,145,3.516,146,2.282,149,0.005,150,0.006,151,0.005,152,0.345,154,1.356,158,1.429,167,0.851,213,0.621,243,0.649,304,0.97,319,1.207,320,1.184,390,2.068,393,2.068,396,2.097,402,1.878,422,1.812,425,1.812,426,2.203,517,1.884,518,1.884,587,5.304,599,4.862,618,7.034,650,5.327,651,5.467,652,5.467,760,4.195,814,5.616,853,3.849,876,5.92,936,4.008,946,3.348,1372,7.616,1373,4.916,1374,4.916,1375,4.916,1432,5.274,1433,7.515,1434,7.515,1435,7.813,1436,6.484,1437,5.962,1438,6.888,1439,7.515,1440,7.515,1441,6.484,1442,6.981,1443,6.484,1444,6.484,1445,6.484,1446,6.484,1447,6.484,1448,6.484,1449,6.484,1450,5.755,1451,5.755,1452,5.963,1453,4.629,1454,5.274,1455,5.274,1456,5.755,1457,6.981,1458,5.274,1459,5.755,1460,5.755,1461,8.004,1462,8.004,1463,5.755,1464,5.755,1465,5.755,1466,5.755,1467,5.755,1468,5.755,1469,5.755,1470,5.755,1471,5.755,1472,5.755,1473,4.916,1474,5.755,1475,5.755,1476,5.755,1477,5.755,1478,5.755,1479,6.981,1480,5.755]],["title/injectables/I18Service.html",[38,2.001,152,0.202]],["body/injectables/I18Service.html",[3,0.131,4,0.131,5,0.119,10,0.361,11,0.631,17,0.539,18,0.008,21,1.02,22,0.188,31,0.131,38,3.58,40,3.431,41,2.446,42,2.354,55,0.131,65,0.143,82,1.301,85,2.246,94,5.643,146,2.458,149,0.005,150,0.006,151,0.005,152,0.361,154,1.461,157,1.226,158,1.179,167,0.865,213,0.649,304,0.862,319,1.301,320,1.275,422,1.895,425,1.895,426,2.303,517,1.969,518,1.969,612,2.964,621,4.318,622,3.725,789,4.987,790,7.34,814,5.871,1481,5.681,1482,8.739,1483,8.739,1484,8.223,1485,8.739,1486,6.984,1487,6.984,1488,8.223,1489,6.984,1490,6.984,1491,9.202,1492,9.023,1493,6.984,1494,8.223,1495,6.984,1496,6.984,1497,6.984,1498,6.984,1499,6.984,1500,5.681,1501,6.984,1502,6.984,1503,6.984,1504,9.202,1505,6.984,1506,6.984,1507,6.984]],["title/interfaces/IPossibleKickoffs.html",[0,0.542,1508,3.281]],["body/interfaces/IPossibleKickoffs.html",[0,0.897,2,2.9,3,0.115,4,0.115,5,0.105,10,0.474,11,0.584,17,0.53,18,0.008,19,1.774,21,0.889,22,0.191,27,0.724,28,1.894,31,0.115,38,3.599,39,3.171,43,3.313,44,2.481,45,1.601,50,1.984,51,2.745,52,2.745,55,0.115,56,1.808,58,1.236,60,1.529,61,1.471,63,1.529,65,0.125,67,1.471,78,2.864,79,3.511,82,1.144,83,1.59,85,1.894,103,1.529,111,3.809,112,1.755,114,2.07,115,2.407,138,2.026,139,1.755,142,3.797,145,2.745,146,3.04,148,3.929,149,0.005,150,0.006,151,0.005,158,1.284,237,1.236,243,0.888,245,1.415,254,1.808,270,0.918,273,1.415,274,1.415,304,1.066,419,1.621,483,1.59,505,2.131,553,4.385,741,3.171,760,3.275,909,3.646,910,3.646,924,5.11,936,3.797,971,4.703,1007,4.726,1103,3.797,1230,4.656,1231,4.656,1236,4.268,1238,4.656,1240,5.768,1249,5.768,1250,4.656,1251,4.385,1253,4.656,1254,4.656,1255,4.656,1256,5.153,1257,4.656,1258,4.656,1259,4.656,1260,6.551,1261,4.656,1262,4.656,1263,5.902,1316,5.902,1508,6.341,1509,4.656,1510,4.656,1511,7.224,1512,7.224,1513,7.224,1514,6.169,1515,5.768,1516,4.996,1517,4.656,1518,4.159,1519,6.189,1520,4.996,1521,4.996,1522,4.996,1523,4.996,1524,4.996,1525,7.224,1526,4.996,1527,4.996,1528,4.996,1529,4.656,1530,4.996,1531,4.996,1532,4.996,1533,4.996,1534,4.996,1535,4.996,1536,4.996,1537,4.996,1538,4.996,1539,6.189,1540,4.996,1541,4.996,1542,4.656,1543,4.996,1544,4.996,1545,4.996,1546,4.996,1547,6.189,1548,6.189,1549,6.189,1550,4.996,1551,4.996,1552,4.996,1553,4.996,1554,6.725,1555,4.996,1556,4.996,1557,4.996,1558,4.996,1559,4.996,1560,4.996,1561,4.996,1562,4.996,1563,4.996,1564,4.996,1565,4.996,1566,4.996,1567,4.996,1568,6.189,1569,4.996,1570,4.996,1571,4.996,1572,4.996,1573,4.996,1574,4.996,1575,4.996,1576,4.385,1577,4.996,1578,4.996,1579,4.996,1580,4.996,1581,4.996,1582,4.996,1583,4.996,1584,4.996,1585,6.189,1586,6.189]],["title/interfaces/ISnackBarData.html",[0,0.542,1587,3.484]],["body/interfaces/ISnackBarData.html",[0,0.868,2,3.473,3,0.138,4,0.138,5,0.125,10,0.38,11,0.65,17,0.506,18,0.008,21,1.014,22,0.173,26,2.279,27,0.807,28,2.11,29,3.288,31,0.138,55,0.159,60,1.831,61,1.761,63,1.831,65,0.15,67,1.761,82,1.37,85,1.831,91,2.768,103,1.831,149,0.006,150,0.007,151,0.006,419,1.941,494,1.867,588,5.251,946,4.736,1587,6.768,1588,5.983,1589,7.461,1590,6.528,1591,6.528,1592,6.528,1593,6.528]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.542,1514,3.281]],["body/interfaces/ITeamCanPlayAtDate.html",[0,0.903,2,2.929,3,0.116,4,0.116,5,0.106,10,0.448,11,0.587,17,0.457,18,0.008,19,1.691,21,0.893,22,0.191,27,0.729,28,1.906,31,0.116,38,3.615,39,3.203,43,3.333,44,2.506,45,1.756,50,2.004,51,2.773,52,2.773,55,0.116,56,1.602,58,1.671,60,1.544,61,1.485,63,1.544,65,0.127,67,1.485,78,2.881,79,3.546,82,1.155,83,1.606,85,1.906,103,1.544,111,3.832,112,1.772,114,2.09,115,2.422,138,2.046,139,1.772,142,3.835,145,3.712,146,3.051,148,3.953,149,0.005,150,0.006,151,0.005,158,1.292,237,1.249,243,0.891,245,1.429,254,1.602,270,0.867,273,1.429,274,1.429,304,1.07,419,1.637,483,1.606,505,2.144,553,4.429,741,3.203,760,3.308,909,3.683,910,3.683,924,5.133,936,3.835,971,4.732,1007,4.747,1103,3.835,1230,4.703,1231,4.703,1236,4.287,1238,4.703,1240,5.804,1249,5.804,1250,4.703,1251,4.429,1253,4.703,1254,4.703,1255,4.703,1256,5.184,1257,4.703,1258,4.703,1259,4.703,1260,6.573,1261,4.703,1262,4.703,1263,5.929,1316,5.929,1508,6.191,1509,4.703,1510,4.703,1511,6.227,1512,6.227,1513,6.227,1514,5.929,1515,5.804,1516,5.046,1517,4.703,1518,4.201,1519,7.245,1520,5.046,1521,5.046,1522,5.046,1523,5.046,1524,5.046,1525,7.245,1526,5.046,1527,5.046,1528,5.046,1529,4.703,1530,5.046,1531,5.046,1532,5.046,1533,5.046,1534,5.046,1535,5.046,1536,5.046,1537,5.046,1538,5.046,1539,6.227,1540,5.046,1541,5.046,1542,4.703,1543,5.046,1544,5.046,1545,5.046,1546,5.046,1547,6.227,1548,6.227,1549,6.227,1550,5.046,1551,5.046,1552,5.046,1553,5.046,1554,6.755,1555,5.046,1556,5.046,1557,5.046,1558,5.046,1559,5.046,1560,5.046,1561,5.046,1562,5.046,1563,5.046,1564,5.046,1565,5.046,1566,5.046,1567,5.046,1568,6.227,1569,5.046,1570,5.046,1571,5.046,1572,5.046,1573,5.046,1574,5.046,1575,5.046,1576,4.429,1577,5.046,1578,5.046,1579,5.046,1580,5.046,1581,5.046,1582,5.046,1583,5.046,1584,5.046,1585,6.227,1586,6.227]],["title/interfaces/IntrospectionResultData.html",[0,0.542,1594,2.968]],["body/interfaces/IntrospectionResultData.html",[0,0.822,2,3.289,3,0.13,4,0.13,5,0.119,10,0.36,11,0.63,16,5.862,17,0.572,18,0.008,21,0.97,22,0.178,31,0.13,37,4.529,55,0.179,65,0.142,107,1.429,133,1.429,134,1.385,149,0.007,150,0.006,151,0.005,152,0.36,156,1.734,157,1.223,159,2.004,169,2.201,170,1.636,181,1.734,182,1.734,187,1.928,213,0.648,297,1.734,298,2.119,299,2.011,300,0.947,301,1.668,302,1.701,304,0.859,318,1.734,319,1.297,320,1.272,322,1.701,410,1.734,1419,5.281,1422,6.619,1437,4.717,1473,6.224,1594,5.637,1595,4.973,1596,6.972,1597,7.582,1598,7.287,1599,6.182,1600,6.224,1601,5.666]],["title/interfaces/IntrospectionResultData-1.html",[0,0.451,111,1.915,1594,2.471]],["body/interfaces/IntrospectionResultData-1.html",[0,0.876,2,3.509,3,0.139,4,0.139,5,0.127,10,0.384,11,0.654,16,6.086,17,0.535,18,0.008,21,0.964,55,0.16,149,0.007,150,0.007,151,0.006,157,1.305,213,0.673,304,0.917,1419,5.633,1594,5.788,1596,7.089,1600,6.463,1601,6.044,1602,6.044,1603,6.044]],["title/injectables/LatestEventGQL.html",[152,0.202,390,1.079]],["body/injectables/LatestEventGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.707,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.514,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.795,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,0.678,182,2.371,183,1.108,184,1.964,185,1.689,186,1.689,187,2.244,188,1.087,189,1.087,190,1.722,191,1.087,192,1.926,193,1.087,194,0.705,195,2.054,196,1.492,197,0.705,198,0.705,199,1.066,200,0.705,201,1.551,202,1.521,203,1.066,204,1.551,205,2.112,206,2.112,207,1.964,208,1.551,209,1.689,210,1.521,211,1.521,212,1.087,213,0.704,214,1.108,215,1.108,216,1.369,217,1.369,218,1.369,219,1.087,220,1.108,221,1.108,222,1.521,223,1.066,224,1.521,225,1.066,226,1.087,227,1.108,228,1.108,229,1.087,230,1.521,231,1.408,232,1.964,233,1.902,234,1.521,235,1.722,236,1.087,237,1.588,238,1.087,239,0.705,240,1.654,241,1.957,242,1.066,243,0.771,244,0.949,245,0.627,246,1.899,247,0.691,248,0.665,249,0.9,250,1.656,251,1.005,252,1.025,253,1.316,254,0.896,255,0.691,256,1.066,257,1.689,258,0.691,259,1.066,260,1.722,261,0.691,262,0.691,263,0.825,264,1.342,265,1.045,266,1.622,267,2.129,268,1.087,269,1.087,270,0.771,271,1.087,272,1.087,273,1.594,274,1.501,275,1.087,276,1.087,277,0.9,278,1.005,279,1.521,280,1.087,281,0.678,282,1.066,283,1.066,284,1.291,285,1.087,286,1.087,287,1.316,288,0.705,289,1.087,290,1.087,291,1.087,292,1.087,293,1.087,294,1.087,295,1.408,296,1.066,297,0.678,298,1.501,299,1.218,300,0.494,301,1.025,302,0.665,303,0.705,304,1.023,305,1.316,306,1.795,307,1.316,308,1.291,309,1.316,310,1.066,311,1.066,312,1.066,313,1.066,314,1.316,315,1.492,316,1.316,317,1.066,318,0.678,319,1.748,320,1.714,321,0.665,322,2.291,323,2.362,324,0.665,325,0.705,326,0.705,327,0.665,328,0.705,329,0.705,330,0.665,331,0.705,332,0.705,333,0.652,334,0.705,335,0.705,336,0.652,337,0.705,338,0.705,339,0.665,340,0.665,341,0.705,342,0.705,343,0.665,344,0.665,345,1.087,346,0.665,347,0.705,348,0.705,349,0.678,350,0.705,351,0.705,352,0.678,353,0.705,354,0.705,355,0.678,356,0.705,357,0.678,358,0.705,359,0.665,360,0.705,361,0.705,362,0.678,363,0.705,364,0.705,365,0.665,366,0.705,367,0.705,368,0.652,369,0.652,370,0.705,371,0.705,372,0.665,373,0.705,374,0.705,375,0.665,376,0.705,377,0.705,378,0.665,379,0.705,380,0.705,381,0.665,382,0.665,383,0.665,384,0.705,385,0.705,386,0.678,387,2.146,388,0.705,389,0.705,390,1.005,391,1.108,392,1.108,393,0.64,394,0.705,395,0.705,396,0.615,397,0.705,398,1.369,399,0.64,400,0.705,401,0.652,402,0.581,403,0.705,404,0.652,405,0.665,406,0.705,407,0.705,408,0.627,409,0.652,410,0.678,1604,2.723]],["title/injectables/LocateMatchGQL.html",[152,0.202,327,1.122]],["body/injectables/LocateMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,2.003,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,2.025,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,1.046,328,1.109,329,1.109,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1605,2.728]],["title/components/LoginComponent.html",[27,0.437,465,1.237]],["body/components/LoginComponent.html",[3,0.111,4,0.111,5,0.101,7,0.609,10,0.307,11,0.572,17,0.525,18,0.008,21,0.876,22,0.183,23,4.039,26,1.84,27,0.775,28,2.027,31,0.111,40,3.351,41,1.767,42,2.002,53,3.214,54,2.459,55,0.111,60,2.447,61,2.353,62,2.367,63,1.855,65,0.121,66,1.537,67,1.784,82,1.388,83,2.357,85,2.027,86,3.468,88,3.37,103,2.125,112,2.564,114,2.511,115,2.357,138,2.458,139,2.602,145,3.331,149,0.005,150,0.006,151,0.005,167,0.854,195,1.717,213,0.674,231,1.395,243,0.745,249,0.654,263,0.82,270,0.745,277,0.82,300,0.685,412,1.568,413,2.129,414,1.767,415,1.731,416,1.731,418,1.731,419,1.967,422,1.717,425,1.967,426,2.087,427,1.369,428,2.172,429,2.172,430,1.731,431,2.489,432,1.731,433,1.731,434,1.599,435,1.731,436,1.599,437,1.664,438,2.564,439,1.599,440,1.731,441,1.568,442,1.664,443,1.568,444,2.172,445,1.568,446,1.731,447,1.599,448,1.731,449,1.599,450,1.664,451,1.599,452,1.599,453,1.731,454,1.599,455,1.731,456,1.599,457,1.731,458,1.599,459,1.568,460,2.172,461,1.731,462,1.599,463,1.568,464,1.731,465,2.298,466,1.731,467,1.599,468,1.731,469,1.599,470,1.731,471,1.631,472,1.731,473,1.599,474,1.731,475,1.599,476,1.731,477,1.599,478,1.731,479,1.599,480,1.731,481,1.568,482,1.731,483,1.537,484,1.731,485,1.568,486,1.731,487,1.599,488,1.731,489,1.599,490,1.731,491,1.731,492,1.599,493,1.731,494,1.508,495,1.731,496,1.568,497,1.731,498,1.568,499,1.731,500,1.599,501,1.731,502,1.568,503,1.731,504,1.599,505,1.664,506,1.731,507,1.731,515,4.3,517,1.784,518,1.784,523,3.527,662,6.614,663,2.94,685,5.272,701,5.272,741,3.067,760,4.553,854,4.503,876,3.836,906,3.836,927,3.836,929,5.046,938,6.614,1005,5.272,1006,6.804,1020,4.832,1218,5.272,1219,5.272,1248,6.624,1606,5.272,1607,9.107,1608,8.142,1609,7.451,1610,7.227,1611,8.538,1612,7.451,1613,7.451,1614,5.94,1615,5.94,1616,5.94,1617,7.451,1618,5.94,1619,5.94,1620,5.94,1621,5.94,1622,5.272,1623,7.451,1624,5.94,1625,5.94,1626,7.451,1627,8.142,1628,5.94,1629,5.94,1630,5.94,1631,7.451,1632,6.614,1633,7.451]],["title/interfaces/LoginContext.html",[0,0.542,834,3.484]],["body/interfaces/LoginContext.html",[0,0.759,2,3.037,3,0.12,4,0.12,5,0.11,10,0.332,11,0.601,17,0.467,18,0.008,21,1.023,22,0.187,31,0.12,41,1.913,55,0.147,65,0.131,78,3.444,82,1.198,83,2.329,85,2.186,107,1.802,112,2.236,139,2.411,145,2.875,146,3.29,149,0.007,150,0.006,151,0.005,152,0.344,177,1.54,195,1.803,196,1.601,199,1.601,231,2.062,263,0.862,304,0.794,319,1.198,320,1.175,333,1.875,336,1.875,408,1.803,515,3.696,522,3.126,621,3.976,622,3.43,651,4.154,652,4.154,738,4.356,774,5.301,795,5.55,796,5.657,797,5.563,801,5.216,806,4.877,807,5.709,810,5.709,812,5.709,815,5.709,816,5.709,817,5.709,819,7.489,820,5.233,821,5.709,822,5.709,823,7.489,825,5.709,826,6.864,829,5.709,831,4.877,833,5.709,834,6.397,836,5.301,838,5.709,840,5.709,842,5.709,850,6.368,851,6.368,852,5.233,853,3.819,854,6.657,855,4.877,856,5.233,857,5.709,858,7.444,859,5.709,860,5.709,861,6.368,862,5.709,863,6.947,864,5.709,865,5.709,866,6.397,867,6.947,868,5.709,869,6.947,870,5.709,871,5.709,872,5.709,873,5.709,874,6.368,875,5.233,876,5.055,877,5.233,878,5.709,879,5.709,880,4.877,881,5.709,882,5.709,883,5.709,884,5.233,885,5.709,886,5.709]],["title/components/ManagePenaltyComponent.html",[27,0.437,467,1.237]],["body/components/ManagePenaltyComponent.html",[3,0.103,4,0.103,5,0.094,7,0.564,10,0.284,11,0.544,17,0.525,18,0.008,21,0.763,22,0.189,26,1.705,27,0.748,28,1.956,31,0.103,38,4.024,40,3.293,41,1.636,42,1.854,43,3.421,44,2.222,45,1.374,50,1.777,51,3.172,52,2.459,53,3.124,54,2.277,55,0.103,56,1.485,60,2.438,61,2.346,62,2.441,63,1.767,65,0.112,66,1.424,67,1.699,82,1.322,83,2.277,85,1.956,86,2.799,88,3.252,91,2.957,103,2.066,112,2.371,114,1.854,115,1.74,129,2.754,130,1.348,133,1.456,134,1.326,135,2.277,138,1.815,139,2.028,149,0.004,150,0.006,151,0.004,162,1.343,164,1.667,165,1.699,167,0.85,202,1.396,213,0.678,243,0.71,246,1.742,248,1.343,249,0.865,250,1.881,251,2.066,263,0.781,270,0.71,277,0.781,295,2.152,300,0.634,304,0.875,339,2.027,399,2.102,402,1.876,412,1.452,413,2.028,414,1.636,415,1.604,416,1.604,418,1.604,419,1.873,422,1.635,425,1.979,426,2.325,427,1.267,428,2.069,429,2.069,430,1.604,431,2.42,432,1.604,433,1.604,434,1.481,435,1.604,436,1.481,437,1.541,438,2.504,439,1.481,440,1.604,441,1.873,442,2.2,443,1.452,444,2.069,445,1.452,446,1.604,447,1.481,448,1.604,449,1.481,450,1.541,451,1.481,452,1.481,453,1.604,454,1.481,455,1.604,456,1.481,457,1.604,458,1.481,459,1.873,460,2.069,461,1.604,462,1.481,463,1.452,464,1.604,465,1.481,466,1.604,467,2.234,468,2.644,469,1.481,470,1.604,471,1.51,472,1.604,473,1.481,474,1.604,475,1.481,476,1.604,477,1.481,478,1.604,479,1.481,480,1.604,481,1.452,482,1.604,483,1.424,484,1.604,485,1.452,486,1.604,487,1.481,488,1.604,489,1.481,490,1.604,491,1.604,492,1.481,493,1.604,494,1.396,495,1.604,496,1.452,497,1.604,498,1.452,499,1.604,500,1.481,501,1.604,502,1.452,503,1.604,504,1.481,505,1.541,506,1.604,507,1.604,517,1.881,518,1.881,565,7.517,566,4.882,567,3.928,570,3.266,595,3.933,596,5.131,663,3.123,828,3.725,941,3.928,942,3.266,946,2.841,968,4.806,971,4.387,1104,7.006,1105,4.171,1106,6.391,1107,5.773,1118,4.882,1120,6.298,1123,4.882,1126,6.391,1138,4.475,1139,4.475,1169,4.806,1274,4.806,1330,4.475,1515,5.956,1529,6.293,1634,8.3,1635,6.298,1636,7.096,1637,7.856,1638,5.501,1639,7.856,1640,5.501,1641,5.501,1642,5.501,1643,7.096,1644,5.501,1645,7.096,1646,5.501,1647,7.096,1648,5.501,1649,5.501,1650,8.3,1651,3.928,1652,4.882,1653,5.501,1654,3.928,1655,5.501,1656,3.928,1657,5.501,1658,5.501,1659,5.501,1660,5.501,1661,7.096,1662,7.096,1663,7.096,1664,4.882,1665,7.096,1666,4.882]],["title/components/ManagepitchesComponent.html",[27,0.437,469,1.237]],["body/components/ManagepitchesComponent.html",[3,0.111,4,0.111,5,0.101,7,0.608,10,0.306,11,0.571,17,0.509,18,0.008,22,0.192,26,1.837,27,0.774,28,2.025,31,0.111,40,3.349,41,1.764,42,1.998,43,2.582,44,2.395,50,1.915,51,2.65,52,2.65,53,3.212,54,2.454,55,0.111,60,2.446,61,2.353,62,2.366,63,1.853,65,0.121,66,1.535,67,1.782,82,1.386,83,2.106,85,2.025,86,2.338,88,3.368,91,2.801,103,2.124,112,1.694,114,1.998,115,1.876,138,1.956,139,2.127,149,0.005,150,0.006,151,0.005,167,0.832,203,1.853,213,0.694,243,0.745,249,0.653,254,1.877,263,0.82,270,0.946,277,0.988,300,0.684,304,0.731,401,1.42,412,1.565,413,2.127,414,1.764,415,1.728,416,1.728,418,1.728,419,1.965,422,1.715,425,1.966,426,2.39,427,1.366,428,2.17,429,2.17,430,1.728,431,2.487,432,1.728,433,1.728,434,1.596,435,1.728,436,1.596,437,1.661,438,2.562,439,1.596,440,1.728,441,1.965,442,2.279,443,1.565,444,2.17,445,1.565,446,1.728,447,1.596,448,1.728,449,2.004,450,1.661,451,1.596,452,1.596,453,1.728,454,1.596,455,1.728,456,1.596,457,1.728,458,2.004,459,1.565,460,2.17,461,1.728,462,1.596,463,1.565,464,1.728,465,1.596,466,1.728,467,1.596,468,1.728,469,2.297,470,1.728,471,1.628,472,1.728,473,1.596,474,1.728,475,1.596,476,1.728,477,1.596,478,1.728,479,1.596,480,1.728,481,1.565,482,1.728,483,1.535,484,1.728,485,1.565,486,1.728,487,1.596,488,1.728,489,1.596,490,1.728,491,1.728,492,1.596,493,1.728,494,1.505,495,1.728,496,1.565,497,1.728,498,1.565,499,1.728,500,1.596,501,1.728,502,1.565,503,1.728,504,1.596,505,1.661,506,1.728,507,1.728,517,1.948,518,1.948,569,3.829,570,4.83,595,4.073,596,5.275,663,2.938,942,3.52,946,3.062,996,4.233,1004,6.941,1007,5.31,1017,5.262,1103,5.029,1169,5.041,1266,5.262,1271,5.643,1274,5.041,1654,4.233,1656,4.233,1667,5.262,1668,7.443,1669,8.135,1670,7.443,1671,7.443,1672,4.823,1673,5.929,1674,5.929,1675,7.443,1676,5.929,1677,7.443,1678,5.929,1679,5.929,1680,5.929,1681,5.929,1682,5.929,1683,5.929,1684,4.823,1685,4.495,1686,4.495,1687,5.929,1688,5.929,1689,5.929,1690,5.929,1691,6.606]],["title/components/ManageteamsComponent.html",[27,0.437,473,1.237]],["body/components/ManageteamsComponent.html",[3,0.112,4,0.112,5,0.102,7,0.614,10,0.309,11,0.575,17,0.537,18,0.008,21,0.879,22,0.188,26,1.855,27,0.778,28,2.034,31,0.112,32,4.961,33,3.866,40,3.356,41,1.781,42,2.017,45,1.658,50,1.934,53,3.223,54,2.478,55,0.112,58,1.81,60,2.447,61,2.354,62,2.456,63,1.864,65,0.122,66,1.549,67,1.793,82,1.394,83,1.938,85,2.238,86,2.361,88,3.382,91,2.818,103,2.131,112,2.606,114,2.523,115,2.369,138,2.47,139,2.446,149,0.005,150,0.006,151,0.005,167,0.846,213,0.71,225,1.864,243,0.749,249,0.659,263,0.824,270,0.749,277,0.824,300,0.69,304,0.738,412,1.58,413,2.139,414,1.781,415,1.745,416,1.745,418,1.745,419,1.976,422,1.725,425,1.973,426,2.097,427,1.379,428,2.183,429,2.183,430,1.745,431,2.496,432,1.745,433,1.745,434,1.611,435,1.745,436,1.611,437,1.677,438,2.57,439,1.611,440,1.745,441,1.976,442,2.097,443,1.58,444,2.183,445,1.58,446,1.745,447,1.611,448,1.745,449,1.611,450,1.677,451,1.611,452,1.611,453,1.745,454,1.611,455,1.745,456,1.611,457,1.745,458,1.611,459,1.58,460,2.183,461,1.745,462,1.611,463,1.58,464,1.745,465,1.611,466,1.745,467,1.611,468,1.745,469,1.611,470,1.745,471,1.644,472,1.745,473,2.305,474,1.745,475,1.611,476,1.745,477,1.611,478,1.745,479,1.611,480,1.745,481,1.58,482,1.745,483,1.549,484,1.745,485,1.58,486,1.745,487,1.611,488,1.745,489,2.016,490,2.183,491,1.745,492,1.611,493,1.745,494,1.52,495,1.745,496,1.58,497,1.745,498,1.58,499,1.745,500,1.611,501,1.745,502,1.58,503,1.745,504,1.611,505,1.677,506,1.745,507,1.745,517,2.05,518,2.05,559,4.539,560,5.313,570,3.554,595,4.413,596,5.449,942,3.554,946,3.091,960,4.851,1169,5.071,1179,4.87,1274,5.071,1654,4.274,1656,4.274,1684,4.87,1685,4.539,1686,4.539,1692,5.313,1693,7.488,1694,8.171,1695,7.488,1696,6.646,1697,7.488,1698,5.986,1699,6.646,1700,5.986,1701,5.313,1702,6.646,1703,5.986,1704,5.986,1705,7.488,1706,5.986,1707,5.986,1708,5.986,1709,5.986,1710,5.986,1711,5.986,1712,5.986,1713,5.986,1714,5.986,1715,5.986]],["title/components/ManagetournamentComponent.html",[27,0.437,475,1.237]],["body/components/ManagetournamentComponent.html",[3,0.092,4,0.092,5,0.084,7,0.849,8,3.322,10,0.384,11,0.505,12,2.041,13,2.078,14,1.786,15,5.125,16,4.698,17,0.558,18,0.008,19,1.734,20,5.375,21,0.952,22,0.188,26,1.52,27,0.707,28,1.849,31,0.092,38,3.943,40,3.203,41,1.957,42,1.653,43,3.71,44,1.981,48,1.794,49,1.759,51,3.32,52,2.192,53,2.987,54,2.03,55,0.092,56,1.377,57,1.152,59,1.152,60,2.425,61,2.333,62,2.382,63,1.638,65,0.1,66,1.703,67,1.576,78,2.795,79,2.804,82,1.225,83,2.381,85,2.121,86,1.934,88,3.074,89,5.302,91,2.795,103,1.976,107,1.35,111,3.973,112,2.487,114,1.653,115,2.082,117,1.175,129,3.294,130,1.25,134,1.11,135,2.724,138,1.618,139,1.88,146,2.613,148,2.533,149,0.006,150,0.005,151,0.004,157,1.155,158,1.11,167,0.874,170,1.152,213,0.715,226,1.885,229,1.67,243,0.658,249,0.54,259,1.221,263,0.725,270,0.658,273,1.13,277,0.725,284,1.813,300,0.566,304,1.074,375,1.938,378,2.125,412,1.295,413,1.88,414,1.459,415,1.43,416,1.43,418,1.43,419,1.737,422,1.516,425,2.038,426,2.387,427,1.13,428,1.918,429,1.918,430,1.43,431,2.313,432,1.43,433,1.43,434,1.32,435,1.43,436,1.32,437,1.374,438,2.413,439,1.32,440,1.43,441,1.737,442,2.223,443,1.295,444,1.918,445,1.295,446,1.43,447,1.32,448,1.43,449,1.32,450,1.374,451,1.32,452,1.32,453,1.43,454,1.32,455,1.43,456,1.32,457,1.43,458,1.32,459,1.295,460,1.918,461,1.43,462,1.32,463,1.295,464,1.43,465,1.32,466,1.43,467,1.32,468,1.43,469,1.32,470,1.43,471,1.347,472,1.43,473,1.32,474,1.43,475,2.136,476,1.43,477,1.32,478,1.43,479,1.32,480,1.43,481,1.295,482,1.43,483,1.27,484,1.43,485,1.295,486,1.43,487,1.32,488,1.43,489,1.32,490,1.43,491,1.43,492,1.32,493,1.43,494,1.245,495,1.43,496,1.295,497,1.43,498,1.295,499,1.43,500,1.32,501,1.43,502,1.295,503,1.43,504,1.32,505,1.374,506,1.43,507,1.43,517,1.982,518,1.982,570,2.912,572,4.353,595,4.144,596,5.117,612,2.082,621,3.032,622,2.616,663,2.934,768,3.99,828,4.456,853,2.912,909,3.907,910,3.907,942,2.912,946,2.533,1124,4.989,1125,3.167,1169,5.029,1330,3.99,1334,3.032,1401,4.353,1414,6.041,1542,3.719,1576,3.502,1635,5.84,1651,3.502,1654,3.502,1684,3.99,1685,3.719,1686,3.719,1716,3.99,1717,6.58,1718,7.426,1719,6.58,1720,7.426,1721,7.426,1722,7.426,1723,7.426,1724,7.044,1725,6.58,1726,6.58,1727,7.936,1728,7.936,1729,7.936,1730,4.353,1731,7.426,1732,6.58,1733,6.58,1734,4.905,1735,6.58,1736,4.905,1737,6.58,1738,4.905,1739,4.905,1740,4.905,1741,4.905,1742,4.905,1743,6.58,1744,4.905,1745,4.905,1746,4.905,1747,6.58,1748,4.905,1749,4.905,1750,4.905,1751,6.58,1752,4.905,1753,4.905,1754,4.905,1755,5.353,1756,4.905,1757,7.426,1758,4.905,1759,4.353,1760,4.905,1761,4.353,1762,4.905,1763,6.58,1764,6.58,1765,4.353,1766,4.905,1767,4.905,1768,4.905,1769,4.905,1770,4.905,1771,4.353,1772,6.58,1773,4.905,1774,4.905,1775,8.521,1776,4.905,1777,4.905,1778,4.905,1779,4.905,1780,4.905,1781,4.905,1782,4.905,1783,4.905,1784,4.905,1785,4.905,1786,4.905,1787,4.905,1788,6.58,1789,4.905,1790,4.905,1791,4.905,1792,3.99,1793,4.353,1794,4.905,1795,4.905,1796,4.905,1797,4.905,1798,4.353,1799,4.905,1800,6.591,1801,4.905,1802,4.905,1803,4.905,1804,4.905,1805,6.58,1806,6.58,1807,6.58,1808,6.58,1809,5.353,1810,6.58,1811,5.353]],["title/components/ManageusersComponent.html",[27,0.437,477,1.237]],["body/components/ManageusersComponent.html",[3,0.124,4,0.124,5,0.113,7,0.68,10,0.343,18,0.008,22,0.136,27,0.814,28,2.129,31,0.124,55,0.124,60,2.457,61,2.364,62,2.443,63,1.985,65,0.136,66,1.717,67,1.909,82,1.592,103,2.208,112,2.443,149,0.005,150,0.006,151,0.005,167,0.74,213,0.63,243,0.798,249,0.73,263,0.878,270,0.798,277,0.878,300,0.765,412,1.751,413,2.278,414,1.973,415,1.933,416,1.933,418,1.933,419,2.105,422,1.837,425,1.528,427,1.528,428,2.324,429,2.324,430,1.933,431,2.586,432,1.933,433,1.933,434,1.785,435,1.933,436,1.785,437,1.857,438,2.645,439,1.785,440,1.933,441,1.751,442,1.857,443,1.751,444,2.324,445,1.751,446,1.933,447,1.785,448,1.933,449,1.785,450,1.857,451,1.785,452,1.785,453,1.933,454,1.785,455,1.933,456,1.785,457,1.933,458,1.785,459,1.751,460,2.324,461,1.933,462,1.785,463,1.751,464,1.933,465,1.785,466,1.933,467,1.785,468,1.933,469,1.785,470,1.933,471,1.821,472,1.933,473,1.785,474,1.933,475,1.785,476,1.933,477,2.388,478,1.933,479,1.785,480,1.933,481,1.751,482,1.933,483,1.717,484,1.933,485,1.751,486,1.933,487,1.785,488,1.933,489,1.785,490,1.933,491,1.933,492,1.785,493,1.933,494,1.683,495,1.933,496,1.751,497,1.933,498,1.751,499,1.933,500,1.785,501,1.933,502,1.751,503,1.933,504,1.785,505,1.857,506,1.933,507,1.933,1812,5.886,1813,7.973,1814,8.55,1815,7.973,1816,6.632,1817,6.632]],["title/components/MatchComponent.html",[27,0.437,479,1.237]],["body/components/MatchComponent.html",[3,0.096,4,0.096,5,0.087,7,0.524,10,0.264,11,0.519,14,1.048,15,5.209,17,0.553,18,0.008,19,0.97,21,0.867,22,0.19,26,1.583,27,0.721,28,1.887,31,0.096,38,3.972,39,2.638,40,3.356,41,1.52,42,1.721,50,1.65,53,3.158,54,2.115,55,0.096,60,2.43,61,2.338,62,2.367,63,1.683,65,0.104,66,1.322,67,1.619,78,1.923,82,1.259,83,1.962,85,2.363,86,3.181,88,3.473,91,3.158,103,2.008,145,3.388,146,1.798,149,0.007,150,0.005,151,0.004,167,0.885,213,0.637,243,0.913,244,1.499,249,0.562,263,0.744,270,0.758,277,0.744,300,0.589,304,0.995,412,1.348,413,1.932,414,1.52,415,1.489,416,1.489,418,1.489,419,1.785,422,1.558,425,2.057,426,2.463,427,1.177,428,1.971,429,1.971,430,1.489,431,2.351,432,1.489,433,1.489,434,1.375,435,1.489,436,1.82,437,1.894,438,2.446,439,1.375,440,1.489,441,1.348,442,1.431,443,1.785,444,1.971,445,1.348,446,1.489,447,1.375,448,1.489,449,1.375,450,1.431,451,1.375,452,1.82,453,1.489,454,1.82,455,1.489,456,1.82,457,1.489,458,1.375,459,1.348,460,1.971,461,1.489,462,1.375,463,1.348,464,1.489,465,1.375,466,1.489,467,1.375,468,1.489,469,1.375,470,1.489,471,1.403,472,1.489,473,1.375,474,1.489,475,1.375,476,1.489,477,1.375,478,1.489,479,2.171,480,1.489,481,1.348,482,1.489,483,1.322,484,1.489,485,1.348,486,1.489,487,1.375,488,1.489,489,1.375,490,1.489,491,1.489,492,1.375,493,1.489,494,1.297,495,1.489,496,1.348,497,1.489,498,1.348,499,1.489,500,1.375,501,1.489,502,1.348,503,1.489,504,1.375,505,1.431,506,1.489,507,1.489,515,3.962,517,1.619,518,1.619,519,4.981,523,3.033,570,3.033,595,4.47,596,5.187,654,5.5,663,3.221,674,4.534,768,6.562,888,3.873,903,6.001,909,4.014,910,4.014,914,6.001,968,4.579,971,5.187,1076,5.5,1080,6.165,1091,5.5,1172,6.001,1236,4.711,1252,3.873,1256,3.46,1264,4.534,1267,6.001,1268,6.001,1270,6.001,1271,5.126,1316,5.759,1317,3.873,1319,3.873,1453,4.828,1576,4.828,1656,5.759,1691,6.001,1730,4.534,1792,6.562,1793,7.159,1818,4.534,1819,7.579,1820,6.761,1821,8.066,1822,6.761,1823,8.066,1824,8.066,1825,8.066,1826,8.066,1827,8.066,1828,7.579,1829,7.159,1830,6.726,1831,6.761,1832,5.108,1833,5.108,1834,5.108,1835,5.108,1836,5.108,1837,6.761,1838,5.108,1839,5.108,1840,5.108,1841,5.108,1842,5.108,1843,5.108,1844,5.108,1845,5.108,1846,5.108,1847,5.108,1848,5.108,1849,5.108,1850,5.108,1851,4.534,1852,4.534,1853,4.534,1854,4.534,1855,5.108,1856,8.066,1857,8.066,1858,5.108,1859,5.108,1860,5.108,1861,5.108,1862,5.108,1863,5.108,1864,5.108,1865,5.108,1866,5.108,1867,5.108,1868,7.159,1869,6.001,1870,6.761,1871,5.108,1872,4.534,1873,6.761,1874,6.761,1875,6.761,1876,6.761,1877,6.761,1878,6.761,1879,6.761,1880,5.108,1881,5.108,1882,5.108,1883,5.108,1884,4.534]],["title/interfaces/MatchEventPayload.html",[0,0.542,1452,3.484]],["body/interfaces/MatchEventPayload.html",[0,0.787,2,3.149,3,0.125,4,0.125,5,0.114,10,0.345,11,0.614,17,0.531,18,0.008,19,1.752,21,1.003,22,0.186,31,0.125,55,0.15,65,0.136,82,1.242,83,2.415,85,2.134,112,1.906,115,2.811,134,1.125,135,3.312,139,2.286,145,2.981,146,2.347,149,0.005,150,0.006,151,0.005,152,0.351,158,1.35,243,0.667,304,0.987,319,1.242,320,1.218,390,1.879,393,1.879,396,1.937,402,1.706,587,4.9,599,4.123,618,5.057,650,5.418,651,5.535,652,5.535,760,4.267,853,3.96,876,5.959,936,4.123,946,3.444,1372,7.394,1373,5.057,1374,5.057,1375,5.057,1432,5.426,1433,5.919,1434,5.919,1435,5.919,1437,5.418,1438,5.426,1439,5.919,1440,5.919,1442,5.919,1450,5.919,1451,5.919,1452,6.498,1453,6.346,1454,7.23,1455,7.23,1456,7.888,1457,7.101,1458,5.426,1459,5.919,1460,5.919,1461,8.067,1462,8.067,1463,5.919,1464,5.919,1465,5.919,1466,5.919,1467,5.919,1468,5.919,1469,5.919,1470,5.919,1471,5.919,1472,5.919,1473,5.057,1474,5.919,1475,5.919,1476,5.919,1477,5.919,1478,5.919,1479,7.101,1480,5.919]],["title/injectables/MatchGQL.html",[152,0.202,393,1.079]],["body/injectables/MatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.79,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.465,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,1.007,394,1.109,395,1.109,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1885,2.728]],["title/injectables/MatchPlanGQL.html",[152,0.202,396,1.039]],["body/injectables/MatchPlanGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.916,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.318,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.969,397,1.109,398,1.553,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,1886,2.728]],["title/components/MatchSchedulingComponent.html",[27,0.437,483,1.19]],["body/components/MatchSchedulingComponent.html",[0,0.777,3,0.092,4,0.092,5,0.084,7,0.503,10,0.428,11,0.505,17,0.545,18,0.008,19,1.72,21,0.854,22,0.183,27,0.707,28,1.85,31,0.092,38,3.944,39,2.535,43,3.235,44,1.983,45,1.439,50,1.586,51,2.195,52,2.195,55,0.092,56,1.378,58,0.988,60,2.426,61,2.333,62,2.229,63,1.639,65,0.1,66,1.271,67,1.577,78,2.988,79,3.765,82,1.226,83,1.271,85,2.122,103,1.977,111,3.297,112,1.403,114,1.655,115,2.083,138,1.62,139,1.403,142,3.035,145,2.195,146,2.794,148,3.837,149,0.004,150,0.005,151,0.004,157,1.305,158,1.397,167,0.874,213,0.687,237,1.496,243,0.914,245,1.131,249,0.541,252,1.577,254,1.661,263,0.725,270,0.871,273,1.908,274,1.131,277,0.725,300,0.566,304,0.979,412,1.296,413,1.882,414,1.461,415,1.431,416,1.431,418,1.431,419,1.738,422,1.517,425,2.039,426,2.387,427,1.131,428,1.92,429,1.92,430,1.431,431,2.314,432,1.431,433,1.431,434,1.322,435,1.431,436,1.322,437,1.375,438,2.414,439,1.322,440,1.431,441,1.296,442,1.375,443,1.296,444,1.92,445,1.296,446,1.431,447,1.322,448,1.431,449,1.322,450,1.375,451,1.322,452,1.322,453,1.431,454,1.322,455,1.431,456,1.322,457,1.431,458,1.322,459,1.296,460,1.92,461,1.431,462,1.322,463,1.296,464,1.431,465,1.322,466,1.431,467,1.322,468,1.431,469,1.322,470,1.431,471,1.348,472,1.431,473,1.322,474,1.431,475,1.322,476,1.431,477,1.322,478,1.431,479,1.322,480,1.431,481,1.296,482,1.431,483,2.055,484,1.431,485,1.296,486,1.431,487,1.322,488,1.431,489,1.322,490,1.431,491,1.431,492,1.322,493,1.431,494,1.246,495,1.431,496,1.296,497,1.431,498,1.296,499,1.431,500,1.322,501,1.431,502,1.296,503,1.431,504,1.322,505,2.081,506,1.431,507,1.431,517,1.983,518,1.983,553,6.749,663,2.734,741,2.535,760,2.619,814,4.702,828,3.325,909,4.411,910,4.411,924,5.119,936,3.035,968,4.46,971,4.071,1007,5.125,1062,5.357,1103,4.593,1230,5.634,1231,5.634,1232,5.845,1236,4.496,1238,4.993,1240,5.634,1249,4.993,1250,3.723,1251,3.506,1253,3.723,1254,3.723,1255,3.723,1256,4.46,1257,3.723,1258,3.723,1259,3.723,1260,6.02,1261,3.723,1262,3.723,1263,5.305,1314,5.845,1316,5.912,1317,3.723,1319,3.723,1508,5.912,1509,7.166,1510,3.723,1511,5.357,1512,5.357,1513,5.357,1514,4.702,1515,5.634,1516,3.994,1517,3.723,1518,3.325,1519,5.357,1520,5.357,1521,5.357,1522,6.045,1523,6.045,1524,5.357,1525,7.083,1526,6.045,1527,6.045,1528,3.994,1529,6.02,1530,5.357,1531,3.994,1532,3.994,1533,6.934,1534,3.994,1535,3.994,1536,5.357,1537,3.994,1538,3.994,1539,5.357,1540,6.934,1541,3.994,1542,3.723,1543,3.994,1544,3.994,1545,3.994,1546,3.994,1547,5.357,1548,5.357,1549,5.357,1550,3.994,1551,3.994,1552,3.994,1553,3.994,1554,6.045,1555,3.994,1556,3.994,1557,3.994,1558,3.994,1559,3.994,1560,3.994,1561,3.994,1562,3.994,1563,3.994,1564,3.994,1565,6.045,1566,3.994,1567,3.994,1568,5.357,1569,3.994,1570,3.994,1571,3.994,1572,3.994,1573,6.459,1574,3.994,1575,3.994,1576,3.506,1577,3.994,1578,3.994,1579,3.994,1580,3.994,1581,5.357,1582,3.994,1583,3.994,1584,3.994,1585,5.357,1586,5.357,1672,3.994,1809,5.357,1811,5.357,1872,4.358,1884,4.358,1887,6.585,1888,6.585,1889,6.585,1890,4.91,1891,4.91,1892,4.91,1893,4.91,1894,4.91,1895,4.91,1896,4.91,1897,4.91,1898,4.91,1899,4.91,1900,4.91,1901,4.91,1902,4.91,1903,4.91,1904,4.91,1905,4.91,1906,4.91,1907,4.91,1908,6.585,1909,6.585,1910,6.585,1911,6.585,1912,6.585,1913,6.585,1914,7.047,1915,5.845,1916,5.845,1917,6.585]],["title/injectables/MatchService.html",[152,0.202,1236,2.373]],["body/injectables/MatchService.html",[3,0.112,4,0.112,5,0.102,10,0.309,11,0.574,17,0.537,18,0.008,19,1.779,21,1.022,22,0.167,31,0.112,44,2.417,55,0.112,56,1.709,65,0.122,78,3.433,82,1.394,83,2.115,85,2.238,91,3.384,112,1.71,114,2.016,115,1.893,134,1.517,135,2.477,138,1.974,139,2.334,145,3.827,146,3.102,148,3.09,149,0.007,150,0.006,151,0.005,152,0.329,154,1.252,157,1.314,158,1.263,167,0.856,184,2.034,185,1.461,186,1.461,187,1.919,188,1.9,189,1.9,190,2.131,191,1.9,192,1.461,213,0.71,243,0.962,244,1.811,254,1.709,267,2.112,270,0.899,304,1.087,308,2.227,319,1.114,320,1.093,321,2.195,324,2.227,327,2.09,422,1.725,425,2.031,517,2.153,518,2.153,622,4.357,795,5.523,796,5.558,797,5.05,801,5.05,853,3.552,866,5.676,1236,3.865,1256,5.07,1303,7.98,1453,6.419,1454,6.964,1455,6.964,1918,5.311,1919,8.169,1920,8.169,1921,7.486,1922,7.486,1923,5.983,1924,8.169,1925,7.486,1926,7.486,1927,5.983,1928,7.486,1929,5.983,1930,8.169,1931,7.486,1932,5.983,1933,7.486,1934,5.983,1935,7.486,1936,5.983,1937,7.822,1938,5.983,1939,5.983,1940,5.983,1941,5.983,1942,7.251,1943,7.251,1944,7.98,1945,8.991,1946,7.251,1947,5.983,1948,5.983,1949,5.983,1950,5.983]],["title/components/MatchplanComponent.html",[27,0.437,481,1.213]],["body/components/MatchplanComponent.html",[3,0.101,4,0.101,5,0.092,7,0.553,10,0.279,11,0.538,17,0.55,18,0.008,21,0.754,22,0.185,27,0.741,28,1.937,31,0.101,38,4.01,39,2.785,41,1.604,43,3.389,44,2.179,51,3.132,52,2.411,55,0.101,60,2.436,61,2.344,62,2.299,63,1.744,65,0.11,66,1.396,67,1.678,82,1.305,83,1.814,85,2.335,91,2.03,103,2.051,111,4.125,134,1.182,145,3.479,146,2.899,148,4.664,149,0.004,150,0.005,151,0.004,157,1.23,158,1.182,167,0.87,213,0.674,237,1.086,243,0.779,244,1.893,245,1.793,249,0.594,263,0.771,270,0.701,273,1.793,274,1.614,277,0.771,281,1.744,282,2.126,300,0.622,304,0.96,393,1.267,396,2.081,402,1.9,412,1.424,413,2.002,414,1.604,415,1.572,416,1.572,418,1.572,419,1.849,422,1.614,425,1.898,426,1.962,427,1.243,428,2.043,429,2.043,430,1.572,431,2.402,432,1.572,433,1.572,434,1.452,435,1.572,436,1.452,437,1.511,438,2.489,439,1.452,440,1.572,441,1.424,442,1.511,443,1.424,444,2.043,445,1.424,446,1.572,447,1.452,448,1.572,449,1.452,450,1.511,451,1.452,452,1.452,453,1.572,454,1.452,455,1.572,456,1.452,457,1.572,458,1.452,459,1.424,460,2.043,461,1.572,462,1.452,463,1.424,464,1.572,465,1.452,466,1.572,467,1.452,468,1.572,469,1.452,470,1.572,471,1.481,472,1.572,473,1.452,474,1.572,475,1.452,476,1.572,477,1.452,478,1.572,479,1.452,480,1.572,481,2.175,482,1.572,483,1.396,484,1.572,485,1.424,486,1.572,487,1.452,488,1.572,489,1.452,490,1.572,491,1.572,492,1.452,493,1.572,494,1.369,495,1.572,496,1.424,497,1.572,498,1.424,499,1.572,500,1.452,501,1.572,502,1.424,503,1.572,504,1.452,505,1.511,506,1.572,507,1.572,517,1.864,518,1.864,587,5.22,612,3.303,621,3.335,622,2.877,648,4.388,650,3.653,651,3.483,652,3.483,663,3.013,682,4.787,814,5.003,853,3.202,960,4.16,1110,6.331,1128,7.119,1170,6.702,1236,4.601,1334,3.335,1518,3.653,1651,3.851,1652,4.787,1798,6.907,1809,6.702,1811,6.702,1914,7.767,1915,7.312,1916,7.312,1951,4.388,1952,7.782,1953,7.007,1954,7.782,1955,7.782,1956,7.782,1957,7.007,1958,7.007,1959,8.238,1960,7.782,1961,4.388,1962,5.394,1963,7.007,1964,5.394,1965,7.007,1966,5.394,1967,5.394,1968,5.394,1969,7.007,1970,5.394,1971,5.394,1972,5.394,1973,5.394,1974,5.394,1975,7.007,1976,5.394,1977,7.007,1978,5.394,1979,5.394,1980,5.394,1981,4.388,1982,4.388,1983,4.787,1984,4.388,1985,4.787,1986,4.388,1987,4.787,1988,5.394,1989,5.394,1990,4.787,1991,5.394,1992,4.787,1993,4.787,1994,8.538,1995,5.394,1996,5.394,1997,5.394,1998,5.394,1999,5.394,2000,5.394,2001,5.394,2002,5.394,2003,4.388,2004,4.388,2005,5.394,2006,5.394,2007,7.007,2008,7.007,2009,8.238,2010,7.007,2011,7.007,2012,5.394,2013,5.394]],["title/modules/MatchplanModule.html",[525,1.424,2014,3.484]],["body/modules/MatchplanModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,61,1.737,65,0.148,149,0.006,150,0.007,151,0.006,245,1.671,427,1.671,481,2.482,525,2.247,527,2.73,528,3.631,529,4.444,530,3.745,531,3.745,532,3.631,538,5.015,539,4.483,540,3.868,541,3.868,544,3.48,545,3.395,547,4.306,548,4.683,706,6.368,1346,6.437,2014,7.347,2015,6.437,2016,6.437,2017,6.437,2018,6.714,2019,7.252,2020,6.437]],["title/modules/MatchplanRoutingModule.html",[525,1.424,2018,3.281]],["body/modules/MatchplanRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.92,481,2.255,522,3.625,527,2.808,544,3.088,545,3.451,574,4.429,575,4.788,576,4.429,578,4.265,579,4.612,2018,6.1,2020,6.621,2021,7.46]],["title/modules/MaterialModule.html",[525,1.424,724,3.112]],["body/modules/MaterialModule.html",[3,0.134,4,0.134,5,0.122,18,0.008,22,0.195,26,2.213,31,0.134,55,0.134,65,0.146,149,0.006,150,0.007,151,0.006,527,2.688,532,3.575,544,2.956,545,3.365,724,5.642,2022,7.141,2023,8.82,2024,7.141,2025,8.82,2026,7.141,2027,8.82,2028,7.141,2029,8.82,2030,7.141,2031,8.82,2032,7.141,2033,8.82,2034,7.141,2035,7.141,2036,6.338,2037,7.141,2038,6.338,2039,7.141,2040,8.82,2041,8.82,2042,8.82,2043,9.255,2044,8.82,2045,8.82,2046,8.82,2047,8.82,2048,8.82,2049,8.82,2050,8.82,2051,8.82,2052,7.141,2053,8.82,2054,8.82,2055,8.82]],["title/components/NewpasswordComponent.html",[27,0.437,485,1.213]],["body/components/NewpasswordComponent.html",[3,0.114,4,0.114,5,0.103,7,0.623,10,0.314,11,0.58,17,0.514,18,0.008,21,0.813,22,0.184,27,0.783,28,2.048,31,0.114,40,3.367,41,1.807,42,2.047,53,3.24,54,2.515,55,0.114,60,2.449,61,2.356,62,2.383,63,1.881,65,0.124,66,1.573,67,1.81,82,1.407,83,2.228,85,2.048,88,3.405,103,2.143,112,2.459,114,2.047,115,2.391,138,2.004,139,2.159,149,0.005,150,0.006,151,0.005,167,0.837,213,0.649,231,1.427,243,0.756,249,0.669,263,0.948,270,0.756,277,0.832,300,0.701,304,0.75,412,1.604,413,2.159,414,1.807,415,1.771,416,1.771,418,1.771,419,1.995,422,1.741,425,1.741,426,1.702,427,1.4,428,2.203,429,2.203,430,1.771,431,2.509,432,1.771,433,1.771,434,1.636,435,1.771,436,1.636,437,1.702,438,2.581,439,1.636,440,1.771,441,1.604,442,1.702,443,1.604,444,2.203,445,1.604,446,1.771,447,1.636,448,1.771,449,1.636,450,1.702,451,1.636,452,1.636,453,1.771,454,1.636,455,1.771,456,1.636,457,1.771,458,1.636,459,1.604,460,2.203,461,1.771,462,1.636,463,1.604,464,1.771,465,1.636,466,1.771,467,1.636,468,1.771,469,1.636,470,1.771,471,1.668,472,1.771,473,1.636,474,1.771,475,1.636,476,1.771,477,1.636,478,1.771,479,1.636,480,1.771,481,1.604,482,1.771,483,1.573,484,1.771,485,2.272,486,1.771,487,1.636,488,1.771,489,1.636,490,1.771,491,1.771,492,1.636,493,1.771,494,1.542,495,1.771,496,1.604,497,1.771,498,1.604,499,1.771,500,1.636,501,1.771,502,1.604,503,1.771,504,1.636,505,1.702,506,1.771,507,1.771,514,4.338,515,4.18,517,1.455,518,1.455,519,5.11,522,2.952,523,3.607,630,4.942,631,5.392,663,2.602,741,3.137,774,5.118,927,3.923,929,4.115,935,6.148,940,6.708,1006,6.939,1020,4.942,1248,6.692,1389,7.301,1610,7.301,1622,5.392,1632,6.708,2056,5.392,2057,8.226,2058,7.557,2059,8.607,2060,9.152,2061,7.557,2062,6.075,2063,6.075,2064,6.075,2065,6.075,2066,6.075,2067,6.075,2068,8.226,2069,6.075,2070,6.075,2071,6.075,2072,6.075,2073,7.557,2074,7.557,2075,7.557,2076,7.557]],["title/modules/NewpasswordModule.html",[525,1.424,2077,3.484]],["body/modules/NewpasswordModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,65,0.149,149,0.006,150,0.007,151,0.006,427,1.678,485,2.484,525,2.257,527,2.742,528,3.647,529,4.452,530,3.762,531,3.762,532,3.647,538,5.019,539,4.494,540,3.885,541,3.885,544,3.489,545,3.404,547,4.325,548,4.704,743,4.503,774,4.934,2077,7.306,2078,6.466,2079,6.466,2080,6.466,2081,6.72,2082,7.285,2083,5.707,2084,6.466]],["title/modules/NewpasswordRoutingModule.html",[525,1.424,2081,3.281]],["body/modules/NewpasswordRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.92,485,2.255,522,3.625,527,2.808,544,3.088,545,3.451,574,4.429,575,4.788,576,4.429,578,4.265,579,4.612,2081,6.1,2084,6.621,2085,7.46]],["title/injectables/NotificationService.html",[53,1.73,152,0.202]],["body/injectables/NotificationService.html",[3,0.129,4,0.129,5,0.117,10,0.355,11,0.625,17,0.568,18,0.008,19,1.705,21,1.049,22,0.177,26,2.131,31,0.129,53,3.067,55,0.129,65,0.141,82,1.517,83,2.324,91,2.588,149,0.005,150,0.006,151,0.005,152,0.358,154,1.439,157,1.207,158,1.161,167,0.85,213,0.709,319,1.281,320,1.256,422,1.877,425,2.001,426,2.432,494,1.746,517,2.15,518,2.15,588,5.818,594,7.303,747,6.104,828,5.881,946,4.987,1589,7.455,1792,5.595,2086,6.104,2087,8.683,2088,8.148,2089,8.148,2090,8.148,2091,6.877,2092,8.148,2093,8.148,2094,6.877,2095,8.148,2096,8.978,2097,8.978,2098,9.164,2099,6.877,2100,8.148,2101,6.877,2102,8.148,2103,8.148,2104,6.877,2105,6.877,2106,8.148]],["title/injectables/PasswordChangeGQL.html",[152,0.202,336,1.101]],["body/injectables/PasswordChangeGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.319,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,1.027,337,1.11,338,1.11,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,2107,2.73]],["title/injectables/PasswordResetGQL.html",[152,0.202,333,1.101]],["body/injectables/PasswordResetGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.064,196,1.802,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,1.026,334,1.109,335,1.109,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2108,2.728]],["title/injectables/PitchService.html",[152,0.202,1007,2.627]],["body/injectables/PitchService.html",[3,0.125,4,0.125,5,0.114,10,0.346,11,0.615,17,0.531,18,0.008,21,0.923,22,0.186,31,0.125,43,3.738,44,2.704,50,2.162,51,3.837,52,2.992,55,0.125,65,0.137,78,3.018,82,1.493,83,2.222,91,3.018,111,4.455,112,2.69,114,2.702,115,2.536,129,4.014,130,1.523,134,1.13,135,3.319,138,2.645,139,2.291,146,2.822,149,0.005,150,0.006,151,0.005,152,0.352,154,1.4,157,1.175,158,1.13,167,0.826,192,1.634,203,1.996,209,1.634,210,1.699,211,1.699,213,0.678,253,2.137,254,1.796,270,0.802,319,1.247,320,1.222,340,2.28,344,2.28,401,2.212,422,1.847,425,1.847,517,2.056,518,2.056,795,5.484,796,5.501,797,4.957,801,4.957,1004,6.522,1007,4.584,1103,4.138,1124,6.079,1125,4.322,1334,4.957,2109,5.941,2110,6.693,2111,6.693,2112,8.018,2113,6.693,2114,8.018,2115,6.693,2116,8.018,2117,8.018,2118,8.018,2119,8.018,2120,8.018,2121,6.693,2122,6.693,2123,8.018,2124,6.693,2125,6.693,2126,6.693]],["title/components/PitchesComponent.html",[27,0.437,487,1.237]],["body/components/PitchesComponent.html",[3,0.12,4,0.12,5,0.109,7,0.657,10,0.331,11,0.6,17,0.467,18,0.008,22,0.16,27,0.802,28,2.098,31,0.12,55,0.12,60,2.454,61,2.361,62,2.42,63,1.945,65,0.131,66,1.66,67,1.871,82,1.455,85,2.098,103,2.183,112,2.408,149,0.005,150,0.006,151,0.005,167,0.782,213,0.665,243,0.782,249,0.706,252,1.871,263,0.86,270,0.782,277,0.86,300,0.74,412,1.693,413,2.232,414,1.908,415,1.87,416,1.87,418,1.87,419,2.062,422,1.8,425,1.478,427,1.478,428,2.278,429,2.278,430,1.87,431,2.557,432,1.87,433,1.87,434,1.726,435,1.87,436,1.726,437,1.796,438,2.621,439,1.726,440,1.87,441,1.693,442,1.796,443,1.693,444,2.278,445,1.693,446,1.87,447,1.726,448,1.87,449,1.726,450,1.796,451,1.726,452,1.726,453,1.87,454,1.726,455,1.87,456,1.726,457,1.87,458,1.726,459,1.693,460,2.278,461,1.87,462,1.726,463,1.693,464,1.87,465,1.726,466,1.87,467,1.726,468,1.87,469,1.726,470,1.87,471,1.761,472,1.87,473,1.726,474,1.87,475,1.726,476,1.87,477,1.726,478,1.87,479,1.726,480,1.87,481,1.693,482,1.87,483,1.66,484,1.87,485,1.693,486,1.87,487,2.361,488,1.87,489,1.726,490,1.87,491,1.87,492,1.726,493,1.87,494,1.628,495,1.87,496,1.693,497,1.87,498,1.693,499,1.87,500,1.726,501,1.87,502,1.693,503,1.87,504,1.726,505,1.796,506,1.87,507,1.87,517,1.536,518,1.536,663,3.149,978,6.356,1007,5.38,1103,5.422,1251,4.579,1271,5.924,1672,5.217,2127,5.692,2128,8.426,2129,7.813,2130,6.413,2131,6.413,2132,6.413,2133,7.813,2134,7.813]],["title/injectables/PitchesGQL.html",[152,0.202,401,1.101]],["body/injectables/PitchesGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.268,253,1.494,254,0.897,255,0.693,256,1.067,257,1.69,258,0.693,259,1.067,260,1.723,261,0.693,262,0.693,263,0.826,264,1.344,265,1.047,266,1.624,267,2.13,268,1.088,269,1.088,270,0.79,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.494,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,1.027,402,0.582,403,0.706,404,0.654,405,0.666,406,0.706,407,0.706,408,0.629,409,0.654,410,0.679,2135,2.729]],["title/injectables/RankingGQL.html",[152,0.202,402,0.98]],["body/injectables/RankingGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.913,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.318,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.553,399,0.641,400,0.706,401,0.653,402,0.914,403,1.109,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2136,2.728]],["title/injectables/RedisEventGQL.html",[152,0.202,1437,3.112]],["body/injectables/RedisEventGQL.html",[0,0.816,3,0.13,4,0.13,5,0.118,10,0.357,11,0.627,17,0.569,18,0.008,21,0.967,22,0.178,31,0.13,37,4.511,55,0.178,65,0.141,107,1.42,133,1.42,134,1.469,149,0.007,150,0.006,151,0.005,152,0.359,154,1.447,156,2.167,157,1.436,158,1.167,159,2.125,167,0.642,169,2.196,170,1.625,181,1.722,182,1.722,187,1.921,213,0.646,297,1.722,298,2.115,299,2.005,300,0.943,301,1.657,302,1.689,304,0.853,318,1.722,319,1.288,320,1.263,322,1.689,410,1.722,1419,5.245,1422,6.82,1437,5.537,1473,6.599,1594,5.28,1595,4.939,1596,6.199,1597,7.703,1598,7.726,1599,6.139,1600,6.199,1601,5.627,2137,6.917]],["title/injectables/RemoveRankingPenaltyGQL.html",[152,0.202,339,1.122]],["body/injectables/RemoveRankingPenaltyGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.552,162,2.153,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.723,172,1.109,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.964,185,1.689,186,1.689,187,2.245,188,1.087,189,1.087,190,1.723,191,1.087,192,1.927,193,1.087,194,0.705,195,2.054,196,1.493,197,0.705,198,0.705,199,1.066,200,0.705,201,1.791,202,1.837,203,1.066,204,1.552,205,2.112,206,2.112,207,1.964,208,1.552,209,1.689,210,1.522,211,1.522,212,1.087,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.087,220,1.109,221,1.109,222,1.522,223,1.066,224,1.522,225,1.066,226,1.087,227,1.109,228,1.109,229,1.087,230,1.522,231,1.409,232,1.964,233,1.903,234,1.522,235,1.723,236,1.087,237,1.552,238,1.087,239,0.705,240,1.522,241,1.756,242,1.066,243,0.771,244,0.949,245,0.628,246,1.899,247,0.692,248,0.665,249,0.9,250,1.657,251,1.006,252,1.026,253,1.317,254,0.896,255,0.692,256,1.066,257,1.689,258,0.692,259,1.066,260,1.723,261,0.692,262,0.692,263,0.825,264,1.343,265,1.046,266,1.623,267,2.129,268,1.087,269,1.087,270,0.771,271,1.087,272,1.087,273,1.594,274,1.502,275,1.087,276,1.087,277,0.9,278,1.006,279,1.522,280,1.087,281,0.679,282,1.066,283,1.066,284,1.292,285,1.087,286,1.087,287,1.317,288,0.705,289,1.087,290,1.087,291,1.087,292,1.087,293,1.087,294,1.087,295,1.409,296,1.066,297,0.679,298,1.502,299,1.219,300,0.494,301,1.026,302,0.665,303,0.705,304,1.023,305,1.317,306,1.795,307,1.317,308,1.292,309,1.317,310,1.066,311,1.066,312,1.066,313,1.066,314,1.317,315,1.317,316,1.317,317,1.066,318,0.679,319,1.748,320,1.714,321,0.665,322,2.291,323,2.362,324,0.665,325,0.705,326,0.705,327,0.665,328,0.705,329,0.705,330,0.665,331,0.705,332,0.705,333,0.653,334,0.705,335,0.705,336,0.653,337,0.705,338,0.705,339,1.046,340,0.665,341,0.705,342,0.705,343,0.665,344,0.665,345,1.087,346,0.665,347,0.705,348,0.705,349,0.679,350,0.705,351,0.705,352,0.679,353,0.705,354,0.705,355,0.679,356,0.705,357,0.679,358,0.705,359,0.665,360,0.705,361,0.705,362,0.679,363,0.705,364,0.705,365,0.665,366,0.705,367,0.705,368,0.653,369,0.653,370,0.705,371,0.705,372,0.665,373,0.705,374,0.705,375,0.665,376,0.705,377,0.705,378,0.665,379,0.705,380,0.705,381,0.665,382,0.665,383,0.665,384,0.705,385,0.705,386,0.679,387,2.147,388,0.705,389,0.705,390,0.64,391,0.705,392,0.705,393,0.64,394,0.705,395,0.705,396,0.616,397,0.705,398,1.37,399,0.64,400,0.705,401,0.653,402,0.581,403,0.705,404,0.653,405,0.665,406,0.705,407,0.705,408,0.628,409,0.653,410,0.679,2138,2.726]],["title/injectables/RemoveTeamFromSeasonGQL.html",[152,0.202,352,1.144]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.126,163,2.145,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,1.067,353,1.109,354,1.109,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2139,2.728]],["title/components/RenameTeamComponent.html",[27,0.437,489,1.237]],["body/components/RenameTeamComponent.html",[3,0.114,4,0.114,5,0.104,7,0.627,10,0.316,11,0.582,17,0.515,18,0.008,21,0.887,22,0.185,23,4.073,24,2.886,26,1.894,27,0.785,28,2.053,29,2.732,31,0.114,32,4.887,33,3.947,40,3.372,41,1.818,42,2.06,45,1.82,50,1.974,53,3.247,54,2.53,55,0.114,58,1.736,60,2.449,61,2.356,62,2.387,63,1.888,65,0.125,66,1.582,67,1.817,82,1.413,83,2.135,85,2.25,86,3.402,88,3.415,90,3.582,103,2.147,112,2.357,114,2.06,115,1.934,138,2.016,139,2.167,149,0.005,150,0.006,151,0.005,167,0.823,213,0.681,223,1.888,243,0.759,249,0.673,263,0.835,270,0.759,277,0.835,300,0.705,306,1.464,369,1.464,412,1.613,413,2.167,414,1.818,415,1.782,416,1.782,418,1.782,419,2.002,422,1.748,425,1.748,426,1.712,427,1.408,428,2.211,429,2.211,430,1.782,431,2.514,432,1.782,433,1.782,434,1.645,435,1.782,436,1.645,437,1.712,438,2.585,439,1.645,440,1.782,441,1.613,442,1.712,443,1.613,444,2.211,445,1.613,446,1.782,447,1.645,448,1.782,449,1.645,450,1.712,451,1.645,452,1.645,453,1.782,454,1.645,455,1.782,456,1.645,457,1.782,458,1.645,459,1.613,460,2.211,461,1.782,462,1.645,463,1.613,464,1.782,465,1.645,466,1.782,467,1.645,468,1.782,469,1.645,470,1.782,471,1.678,472,1.782,473,1.645,474,1.782,475,1.645,476,1.782,477,1.645,478,1.782,479,1.645,480,1.782,481,1.613,482,1.782,483,1.582,484,1.782,485,1.613,486,1.782,487,1.645,488,1.782,489,2.322,490,2.699,491,1.782,492,1.645,493,1.782,494,1.552,495,1.782,496,1.613,497,1.782,498,1.613,499,1.782,500,1.645,501,1.782,502,1.613,503,1.782,504,1.645,505,1.712,506,1.782,507,1.782,517,1.817,518,1.817,559,6.853,612,2.594,663,2.97,906,3.947,954,5.425,960,4.504,962,6.733,1062,6.171,2140,8.022,2141,5.425,2142,8.249,2143,7.586,2144,6.112,2145,6.112,2146,7.586,2147,6.112,2148,6.733,2149,6.112,2150,6.112,2151,6.112,2152,6.112,2153,6.112]],["title/injectables/RenameTeamGQL.html",[152,0.202,369,1.101]],["body/injectables/RenameTeamGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.124,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.838,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,1.026,370,1.109,371,1.109,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2154,2.728]],["title/injectables/RescheduleMatchDayGQL.html",[152,0.202,357,1.144]],["body/injectables/RescheduleMatchDayGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.409,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,107,0.56,117,1.657,119,1.964,123,1.464,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.795,166,1.553,167,0.253,169,2.358,170,0.64,171,1.802,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.493,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.553,218,1.688,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.771,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.9,250,1.657,251,1.006,252,1.026,253,1.318,254,0.896,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.825,264,1.343,265,1.046,266,1.623,267,2.129,268,1.088,269,1.088,270,0.771,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.9,278,1.006,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.292,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.219,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.795,307,1.318,308,1.292,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.291,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,1.067,358,1.109,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.64,391,0.706,392,0.706,393,0.64,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.64,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2155,2.727]],["title/interfaces/RoundTeam.html",[0,0.542,20,3.112]],["body/interfaces/RoundTeam.html",[0,0.926,1,5.602,2,3.049,3,0.121,4,0.121,5,0.11,6,4.896,7,0.901,8,4.374,9,4.896,10,0.334,11,0.602,12,1.547,13,1.985,14,1.325,15,4.17,17,0.468,18,0.008,19,1.49,20,5.954,21,0.695,22,0.194,23,3.603,24,3.049,25,4.611,26,2.001,27,0.747,28,1.953,29,2.887,30,4.17,31,0.121,32,4.508,33,4.17,34,6.408,35,3.992,36,3.992,37,3.563,38,3.68,39,3.335,40,3.11,41,1.921,42,2.176,43,3.417,44,2.609,45,1.25,46,1.843,47,1.517,48,1.773,49,1.739,50,2.086,51,2.887,52,2.887,53,2.953,54,2.673,55,0.158,56,1.839,57,2.197,58,1.883,59,2.213,60,1.608,61,1.547,62,2.112,63,1.608,64,5.253,65,0.132,66,1.672,67,1.547,68,5.253,69,5.253,70,5.253,71,5.253,72,5.253,73,5.253,74,5.253,75,5.253,76,1.517,77,5.253,78,3.181,79,3.692,80,5.253,81,5.253,82,1.203,83,2.371,84,5.253,85,2.104,86,2.547,87,5.253,88,2.673,89,4.611,90,3.049,91,2.431,92,4.896,93,4.896,94,4.17,95,4.896,96,6.383,97,5.253,98,5.253,99,6.876,100,5.253,101,6.876,102,5.253,103,1.608,104,5.253,105,5.253,106,5.253,107,1.61,108,5.253,109,5.253,110,5.253,111,3.233,112,1.845,113,5.253,114,2.176,115,2.043,116,5.253,117,1.547,118,6.383,119,1.577,120,5.253,121,5.253,122,5.253,123,1.577,124,5.253,125,1.577,126,5.253,127,1.577,128,5.253,129,3.233,130,1.49,131,5.253,132,5.253,133,1.325,134,1.09,135,2.673,136,5.253,137,3.992,138,2.13,139,2.242,140,5.253,141,5.253,142,4.851,143,5.253,144,5.253,145,2.887,146,2.273,147,5.253,148,3.335,149,0.005,150,0.006,151,0.005]],["title/injectables/ScheduleMatchGQL.html",[152,0.202,324,1.122]],["body/injectables/ScheduleMatchGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.46,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,2.003,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.92,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,1.046,325,1.109,326,1.109,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,0.706,407,0.706,408,0.628,409,0.653,410,0.679,2156,2.728]],["title/injectables/SeasonPenaltiesGQL.html",[152,0.202,399,1.079]],["body/injectables/SeasonPenaltiesGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.407,14,1.619,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.717,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.558,117,1.656,119,1.829,123,1.463,125,0.664,127,0.664,130,1.779,133,1.926,134,1.615,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.569,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.111,164,1.853,165,1.794,166,1.551,167,0.252,169,2.358,170,0.639,171,1.721,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.024,178,1.024,179,0.691,180,0.691,181,0.677,182,2.371,183,1.107,184,1.963,185,1.688,186,1.688,187,2.244,188,1.086,189,1.086,190,1.721,191,1.086,192,1.926,193,1.086,194,0.704,195,2.053,196,1.491,197,0.704,198,0.704,199,1.065,200,0.704,201,1.551,202,1.521,203,1.065,204,1.551,205,2.111,206,2.111,207,1.963,208,1.551,209,1.688,210,1.521,211,1.521,212,1.086,213,0.704,214,1.107,215,1.107,216,1.368,217,1.368,218,1.368,219,1.086,220,1.107,221,1.107,222,1.521,223,1.065,224,1.521,225,1.065,226,1.086,227,1.107,228,1.107,229,1.086,230,1.521,231,1.407,232,1.963,233,1.902,234,1.521,235,1.721,236,1.086,237,1.551,238,1.086,239,0.704,240,1.521,241,1.755,242,1.065,243,0.771,244,0.948,245,0.627,246,1.899,247,0.691,248,0.664,249,0.913,250,1.732,251,1.005,252,1.024,253,1.316,254,0.895,255,0.691,256,1.065,257,1.688,258,0.691,259,1.065,260,1.721,261,0.691,262,0.691,263,0.825,264,1.342,265,1.044,266,1.621,267,2.129,268,1.086,269,1.086,270,0.771,271,1.086,272,1.086,273,1.593,274,1.501,275,1.086,276,1.086,277,0.9,278,1.005,279,1.521,280,1.086,281,0.677,282,1.065,283,1.065,284,1.29,285,1.086,286,1.086,287,1.316,288,0.704,289,1.086,290,1.086,291,1.086,292,1.086,293,1.086,294,1.086,295,1.53,296,1.065,297,0.677,298,1.501,299,1.218,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.316,306,1.845,307,1.316,308,1.29,309,1.316,310,1.065,311,1.065,312,1.065,313,1.065,314,1.316,315,1.316,316,1.491,317,1.065,318,0.677,319,1.748,320,1.714,321,0.664,322,2.291,323,2.362,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.652,334,0.704,335,0.704,336,0.652,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,0.664,344,0.664,345,1.086,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,0.652,369,0.652,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.146,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.615,397,0.704,398,1.551,399,1.005,400,1.107,401,0.652,402,0.58,403,0.704,404,0.652,405,0.664,406,0.704,407,0.704,408,0.627,409,0.652,410,0.677,2157,2.721]],["title/injectables/SeasonService.html",[152,0.202,587,2.627]],["body/injectables/SeasonService.html",[3,0.123,4,0.123,5,0.112,10,0.34,11,0.609,17,0.549,18,0.008,21,0.99,22,0.185,31,0.123,41,1.959,44,2.66,55,0.123,65,0.135,78,3.331,82,1.479,83,2.206,85,2.122,112,2.659,114,2.219,115,2.083,129,3.975,130,1.508,134,1.34,135,2.726,138,2.172,139,2.268,145,2.944,146,3,149,0.005,150,0.006,151,0.005,152,0.349,154,1.378,157,1.156,158,1.111,167,0.854,212,2.015,213,0.715,219,2.015,246,1.89,256,1.639,304,0.812,319,1.226,320,1.203,346,2.272,359,2.272,404,2.203,422,1.829,425,1.964,517,2.119,518,2.119,587,4.539,612,2.795,621,4.071,622,3.512,795,5.463,796,5.471,797,4.908,801,4.908,853,3.91,866,4.993,1125,4.252,1194,6.02,1829,7.047,2158,5.357,2159,8.524,2160,8.524,2161,7.939,2162,6.585,2163,7.939,2164,7.939,2165,6.585,2166,7.939,2167,7.939,2168,8.85,2169,6.585,2170,7.939,2171,7.939,2172,6.585,2173,7.047,2174,7.939,2175,6.585,2176,8.524,2177,7.939,2178,5.357,2179,5.845,2180,6.585,2181,6.585,2182,6.585,2183,7.939,2184,6.585,2185,6.585,2186,6.585]],["title/components/SeasonchooserComponent.html",[27,0.437,492,1.237]],["body/components/SeasonchooserComponent.html",[3,0.111,4,0.111,5,0.101,7,0.609,10,0.307,11,0.572,17,0.544,18,0.008,22,0.183,25,5.812,26,1.84,27,0.775,28,2.027,31,0.111,43,3.545,44,2.398,50,1.918,51,3.33,52,2.654,55,0.111,60,2.446,61,2.353,62,2.367,63,1.854,65,0.121,66,1.537,67,1.784,78,2.235,79,4.259,82,1.387,83,1.537,85,2.027,91,2.235,103,2.125,111,3.729,146,2.622,149,0.005,150,0.006,151,0.005,157,1.308,158,1.257,167,0.862,173,2.292,213,0.674,237,1.195,243,0.745,246,1.949,249,0.654,256,1.478,263,0.82,270,0.745,277,0.82,300,0.685,304,0.919,404,2.181,412,1.567,413,2.128,414,1.766,415,1.731,416,1.731,418,1.731,419,1.966,422,1.716,425,1.716,426,2.086,427,1.368,428,2.172,429,2.172,430,1.731,431,2.488,432,1.731,433,1.731,434,1.598,435,1.731,436,1.598,437,1.663,438,2.563,439,1.598,440,1.731,441,1.567,442,1.663,443,1.567,444,2.172,445,1.567,446,1.731,447,1.598,448,1.731,449,1.598,450,1.663,451,1.598,452,1.598,453,1.731,454,1.598,455,1.731,456,1.598,457,1.731,458,1.598,459,1.567,460,2.172,461,1.731,462,1.598,463,1.567,464,1.731,465,1.598,466,1.731,467,1.598,468,1.731,469,1.598,470,1.731,471,1.63,472,1.731,473,1.598,474,1.731,475,1.598,476,1.731,477,1.598,478,1.731,479,1.598,480,1.731,481,1.567,482,1.731,483,1.537,484,1.731,485,1.567,486,1.731,487,1.598,488,1.731,489,1.598,490,1.731,491,1.731,492,2.298,493,1.731,494,1.507,495,1.731,496,1.567,497,1.731,498,1.567,499,1.731,500,1.598,501,1.731,502,1.567,503,1.731,504,1.598,505,1.663,506,1.731,507,1.731,517,1.784,518,1.784,587,5.311,663,2.565,968,5.045,971,4.605,1076,6.06,1080,6.944,1091,6.06,1263,4.239,1334,3.67,1961,4.83,1981,4.83,2173,6.612,2187,5.269,2188,7.449,2189,8.14,2190,7.449,2191,8.14,2192,7.449,2193,8.14,2194,8.14,2195,7.449,2196,8.536,2197,7.449,2198,5.937,2199,5.937,2200,5.937,2201,5.937,2202,5.937,2203,5.937,2204,5.937,2205,5.937,2206,5.937,2207,5.937,2208,5.937,2209,5.937,2210,6.612,2211,5.937,2212,5.937,2213,5.937,2214,5.937,2215,8.14,2216,5.937,2217,7.449,2218,5.937,2219,5.937,2220,5.937,2221,7.449,2222,8.536]],["title/modules/SharedModule.html",[525,1.424,538,2.451]],["body/modules/SharedModule.html",[3,0.119,4,0.119,5,0.108,18,0.008,22,0.198,31,0.119,35,3.917,36,3.917,37,3.495,41,1.885,42,2.135,55,0.119,62,2.088,65,0.129,149,0.005,150,0.006,151,0.005,243,0.776,270,0.874,277,0.923,427,1.46,436,2.584,437,1.774,441,2.461,442,1.774,443,2.461,447,2.567,449,2.51,450,1.774,451,2.567,452,2.51,454,2.51,456,2.51,458,2.51,479,2.567,492,2.567,494,2.366,525,1.963,527,2.385,528,3.172,529,4.196,530,3.271,531,3.271,532,4.196,538,5.251,539,4.136,540,3.379,541,3.379,543,6.309,544,3.21,545,3.133,569,4.091,570,5.186,712,6.818,724,6.458,736,5.623,739,7.439,740,7.439,741,3.271,743,3.917,888,4.803,942,3.761,964,5.154,996,4.524,1071,5.154,1851,5.623,1852,5.623,1853,5.623,1854,5.623,2083,5.676,2223,5.623,2224,5.623,2225,6.335,2226,5.623,2227,6.335,2228,6.335,2229,6.335,2230,8.381,2231,8.381,2232,6.335,2233,6.335,2234,6.335]],["title/components/SnackbarComponent.html",[27,0.437,494,1.167]],["body/components/SnackbarComponent.html",[0,0.763,3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,11,0.603,17,0.469,18,0.008,21,0.845,22,0.16,26,2.004,27,0.805,28,2.105,29,2.891,31,0.121,55,0.147,60,2.455,61,2.361,62,2.426,63,1.955,65,0.132,66,1.674,67,1.881,82,1.463,85,2.105,91,3.311,103,2.19,149,0.005,150,0.006,151,0.005,167,0.785,213,0.668,243,0.786,249,0.712,263,0.865,270,0.786,277,0.865,300,0.746,412,1.707,413,2.244,414,1.924,415,1.885,416,1.885,418,1.885,419,2.073,422,1.809,425,1.49,426,1.811,427,1.49,428,2.289,429,2.289,430,1.885,431,2.564,432,1.885,433,1.885,434,1.741,435,1.885,436,1.741,437,1.811,438,2.627,439,1.741,440,1.885,441,1.707,442,1.811,443,1.707,444,2.289,445,1.707,446,1.885,447,1.741,448,1.885,449,1.741,450,1.811,451,1.741,452,1.741,453,1.885,454,1.741,455,1.885,456,1.741,457,1.885,458,1.741,459,1.707,460,2.289,461,1.885,462,1.741,463,1.707,464,1.885,465,1.741,466,1.885,467,1.741,468,1.885,469,1.741,470,1.885,471,1.776,472,1.885,473,1.741,474,1.885,475,1.741,476,1.885,477,1.741,478,1.885,479,1.741,480,1.885,481,1.707,482,1.885,483,1.674,484,1.885,485,1.707,486,1.885,487,1.741,488,1.885,489,1.741,490,1.885,491,1.885,492,1.741,493,1.885,494,2.233,495,1.885,496,1.707,497,1.885,498,1.707,499,1.885,500,1.741,501,1.885,502,1.707,503,1.885,504,1.741,505,1.811,506,1.885,507,1.885,517,1.549,518,1.549,588,5.607,612,2.745,943,5.261,946,3.34,948,6.97,1587,6.833,1588,5.261,1589,5.261,1590,5.74,1591,6.97,1592,7.507,1593,6.97,2235,6.467,2236,6.467,2237,6.467,2238,7.853]],["title/injectables/StartSeasonGQL.html",[152,0.202,359,1.122]],["body/injectables/StartSeasonGQL.html",[0,0.506,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.667,127,0.667,130,1.777,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.46,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,167,0.253,169,2.358,170,0.641,171,1.724,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,0.68,182,2.371,183,1.11,184,1.965,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.054,196,1.494,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.965,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.089,220,1.11,221,1.11,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.11,228,1.11,229,1.089,230,1.524,231,1.41,232,1.965,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.629,246,1.9,247,0.693,248,0.667,249,0.901,250,1.658,251,1.007,252,1.027,253,1.319,254,0.897,255,0.693,256,1.068,257,1.691,258,0.693,259,1.068,260,1.724,261,0.693,262,0.693,263,0.826,264,1.345,265,1.047,266,1.624,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.595,274,1.503,275,1.089,276,1.089,277,0.901,278,1.007,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.293,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.41,296,1.068,297,0.68,298,1.503,299,1.22,300,0.495,301,1.027,302,0.667,303,0.707,304,1.024,305,1.319,306,1.796,307,1.319,308,1.293,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,1.047,360,1.11,361,1.11,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.641,391,0.707,392,0.707,393,0.641,394,0.707,395,0.707,396,0.617,397,0.707,398,1.371,399,0.641,400,0.707,401,0.654,402,0.582,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.629,409,0.654,410,0.68,2239,2.73]],["title/injectables/SubmitResultGQL.html",[152,0.202,321,1.122]],["body/injectables/SubmitResultGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.707,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.795,166,1.79,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,0.678,182,2.371,183,1.369,184,2.064,185,1.882,186,1.882,187,2.244,188,1.342,189,1.087,190,1.722,191,1.087,192,1.926,193,1.087,194,0.705,195,2.054,196,1.492,197,0.705,198,0.705,199,1.066,200,0.705,201,1.551,202,1.521,203,1.066,204,1.551,205,2.112,206,2.112,207,1.964,208,1.551,209,1.689,210,1.521,211,1.521,212,1.087,213,0.704,214,1.108,215,1.108,216,1.369,217,1.369,218,1.369,219,1.087,220,1.108,221,1.108,222,1.521,223,1.066,224,1.521,225,1.066,226,1.087,227,1.108,228,1.108,229,1.087,230,1.521,231,1.408,232,1.964,233,1.902,234,1.521,235,1.722,236,1.087,237,1.552,238,1.087,239,0.705,240,1.521,241,1.756,242,1.066,243,0.771,244,0.949,245,0.627,246,1.899,247,0.691,248,0.665,249,0.9,250,1.656,251,1.005,252,1.025,253,1.316,254,0.896,255,0.691,256,1.066,257,1.689,258,0.691,259,1.066,260,1.722,261,0.691,262,0.691,263,0.825,264,1.342,265,1.045,266,1.622,267,2.129,268,1.087,269,1.087,270,0.771,271,1.087,272,1.087,273,1.594,274,1.501,275,1.087,276,1.087,277,0.9,278,1.005,279,1.521,280,1.087,281,0.678,282,1.066,283,1.066,284,1.291,285,1.087,286,1.087,287,1.316,288,0.705,289,1.087,290,1.087,291,1.087,292,1.087,293,1.087,294,1.087,295,1.408,296,1.066,297,0.678,298,1.501,299,1.218,300,0.494,301,1.025,302,0.665,303,0.705,304,1.023,305,1.316,306,1.795,307,1.316,308,1.291,309,1.316,310,1.066,311,1.066,312,1.066,313,1.066,314,1.316,315,1.316,316,1.316,317,1.066,318,0.678,319,1.748,320,1.714,321,1.045,322,2.291,323,2.362,324,0.665,325,0.705,326,0.705,327,0.665,328,0.705,329,0.705,330,0.665,331,0.705,332,0.705,333,0.652,334,0.705,335,0.705,336,0.652,337,0.705,338,0.705,339,0.665,340,0.665,341,0.705,342,0.705,343,0.665,344,0.665,345,1.087,346,0.665,347,0.705,348,0.705,349,0.678,350,0.705,351,0.705,352,0.678,353,0.705,354,0.705,355,0.678,356,0.705,357,0.678,358,0.705,359,0.665,360,0.705,361,0.705,362,0.678,363,0.705,364,0.705,365,0.665,366,0.705,367,0.705,368,0.652,369,0.652,370,0.705,371,0.705,372,0.665,373,0.705,374,0.705,375,0.665,376,0.705,377,0.705,378,0.665,379,0.705,380,0.705,381,0.665,382,0.665,383,0.665,384,0.705,385,0.705,386,0.678,387,2.146,388,0.705,389,0.705,390,0.64,391,0.705,392,0.705,393,0.64,394,0.705,395,0.705,396,0.615,397,0.705,398,1.369,399,0.64,400,0.705,401,0.652,402,0.581,403,0.705,404,0.652,405,0.665,406,0.705,407,0.705,408,0.627,409,0.652,410,0.678,2240,2.723]],["title/components/TableComponent.html",[27,0.437,496,1.213]],["body/components/TableComponent.html",[3,0.107,4,0.107,5,0.097,7,0.586,10,0.295,11,0.558,17,0.539,18,0.008,22,0.189,26,1.77,27,0.761,28,1.991,31,0.107,38,4.049,39,2.95,40,2.102,41,1.699,42,1.925,43,3.482,44,2.308,45,1.63,50,1.845,51,2.554,52,2.554,55,0.107,58,1.61,60,2.443,61,2.35,62,2.34,63,1.81,65,0.117,66,1.479,67,1.741,82,1.354,83,1.882,85,2.297,103,2.096,107,1.172,134,1.227,146,2.011,148,2.95,149,0.004,150,0.006,151,0.004,167,0.856,213,0.686,237,1.15,243,0.727,249,0.957,250,1.741,251,2.147,263,0.801,270,0.727,277,0.801,295,1.342,300,0.659,304,0.705,402,1.796,412,1.508,413,2.077,414,1.699,415,1.665,416,1.665,418,1.665,419,1.919,422,1.675,425,1.94,426,2.24,427,1.316,428,2.119,429,2.119,430,1.665,431,2.454,432,1.665,433,1.665,434,1.538,435,1.665,436,1.538,437,1.6,438,2.534,439,1.538,440,1.665,441,1.508,442,1.6,443,1.508,444,2.119,445,1.508,446,1.665,447,1.538,448,1.665,449,1.538,450,1.6,451,1.538,452,1.538,453,1.665,454,1.538,455,1.665,456,1.538,457,1.665,458,1.538,459,1.508,460,2.119,461,1.665,462,1.538,463,1.508,464,1.665,465,1.538,466,1.665,467,1.538,468,1.665,469,1.538,470,1.665,471,1.569,472,1.665,473,1.538,474,1.665,475,1.538,476,1.665,477,1.538,478,1.665,479,1.538,480,1.665,481,1.508,482,1.665,483,1.479,484,1.665,485,1.508,486,1.665,487,1.538,488,1.665,489,1.538,490,1.665,491,1.665,492,1.538,493,1.665,494,1.45,495,1.665,496,2.222,497,1.665,498,1.508,499,1.665,500,1.538,501,1.665,502,1.508,503,1.665,504,1.538,505,1.6,506,1.665,507,1.665,517,1.915,518,1.915,587,5.275,588,6.206,594,7.071,648,4.648,650,3.869,651,3.689,652,3.689,663,2.503,769,5.512,1236,4.662,1438,6.506,1518,3.869,1651,4.079,1664,5.071,1666,5.071,1961,4.648,1981,4.648,1990,5.071,1992,5.071,1993,5.071,2210,6.453,2241,5.071,2242,7.997,2243,7.271,2244,7.271,2245,8.418,2246,7.271,2247,7.271,2248,7.271,2249,5.713,2250,5.713,2251,5.713,2252,7.271,2253,5.713,2254,5.713,2255,5.713,2256,5.713,2257,5.713,2258,7.271,2259,5.713,2260,5.713,2261,5.713,2262,5.713,2263,5.713,2264,5.071,2265,5.713,2266,5.713,2267,7.271,2268,7.271,2269,7.271,2270,7.271,2271,7.271,2272,7.271,2273,7.271,2274,7.271,2275,7.271,2276,7.271,2277,7.271,2278,7.271,2279,8.418,2280,8.418,2281,8.418,2282,7.271,2283,7.271,2284,7.271]],["title/modules/TableModule.html",[525,1.424,2285,3.484]],["body/modules/TableModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,65,0.149,149,0.006,150,0.007,151,0.006,427,1.678,496,2.484,525,2.257,527,2.742,528,3.647,529,4.452,530,3.762,531,3.762,532,3.647,538,5.019,539,4.494,540,3.885,541,3.885,544,3.489,545,3.404,547,4.325,548,4.704,743,4.503,769,5.523,2083,5.707,2285,7.306,2286,6.466,2287,6.466,2288,6.466,2289,6.72,2290,7.285,2291,6.466]],["title/modules/TableRoutingModule.html",[525,1.424,2289,3.281]],["body/modules/TableRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.92,496,2.255,522,3.625,527,2.808,544,3.088,545,3.451,574,4.429,575,4.788,576,4.429,578,4.265,579,4.612,2289,6.1,2291,6.621,2292,7.46]],["title/interfaces/TeamIdPair.html",[0,0.542,47,1.079]],["body/interfaces/TeamIdPair.html",[0,0.506,2,1.29,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.438,13,1.411,14,1.584,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.642,47,1.245,48,0.618,49,0.606,55,0.185,56,1.365,57,1.008,58,1.51,59,1.008,65,0.192,76,1.533,107,0.561,117,1.659,119,1.832,123,1.466,125,1.466,127,1.466,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,155,0.654,156,2.337,159,2.328,160,2.459,161,1.554,162,2.11,163,2.113,164,1.855,165,1.797,166,1.554,169,2.358,170,0.642,171,1.724,172,1.111,173,1.068,174,1.089,175,1.089,176,1.089,177,1.028,178,1.028,179,0.694,180,0.694,181,0.68,182,2.372,183,1.111,184,1.966,185,1.691,186,1.691,187,2.245,188,1.089,189,1.089,190,1.724,191,1.089,192,1.928,193,1.089,194,0.707,195,2.055,196,1.495,197,0.707,198,0.707,199,1.068,200,0.707,201,1.554,202,1.524,203,1.068,204,1.554,205,2.113,206,2.113,207,1.966,208,1.554,209,1.691,210,1.524,211,1.524,212,1.089,213,0.704,214,1.111,215,1.111,216,1.372,217,1.372,218,1.372,219,1.089,220,1.111,221,1.111,222,1.524,223,1.068,224,1.524,225,1.068,226,1.089,227,1.111,228,1.111,229,1.089,230,1.524,231,1.411,232,1.966,233,1.904,234,1.524,235,1.724,236,1.089,237,1.553,238,1.089,239,0.707,240,1.524,241,1.758,242,1.068,243,0.772,244,0.951,245,0.63,246,1.9,247,0.694,248,0.667,249,0.901,250,1.659,251,1.008,252,1.028,253,1.319,254,0.898,255,0.694,256,1.068,257,1.691,258,0.694,259,1.068,260,1.724,261,0.694,262,0.694,263,0.826,264,1.345,265,1.048,266,1.625,267,2.13,268,1.089,269,1.089,270,0.772,271,1.089,272,1.089,273,1.596,274,1.504,275,1.089,276,1.089,277,0.901,278,1.008,279,1.524,280,1.089,281,0.68,282,1.068,283,1.068,284,1.294,285,1.089,286,1.089,287,1.319,288,0.707,289,1.089,290,1.089,291,1.089,292,1.089,293,1.089,294,1.089,295,1.411,296,1.068,297,0.68,298,1.504,299,1.221,300,0.495,301,1.028,302,0.667,303,0.707,304,1.024,305,1.319,306,1.797,307,1.319,308,1.294,309,1.319,310,1.068,311,1.068,312,1.068,313,1.068,314,1.319,315,1.319,316,1.319,317,1.068,318,0.68,319,1.748,320,1.714,321,0.667,322,2.292,323,2.363,324,0.667,325,0.707,326,0.707,327,0.667,328,0.707,329,0.707,330,0.667,331,0.707,332,0.707,333,0.654,334,0.707,335,0.707,336,0.654,337,0.707,338,0.707,339,0.667,340,0.667,341,0.707,342,0.707,343,0.667,344,0.667,345,1.089,346,0.667,347,0.707,348,0.707,349,0.68,350,0.707,351,0.707,352,0.68,353,0.707,354,0.707,355,0.68,356,0.707,357,0.68,358,0.707,359,0.667,360,0.707,361,0.707,362,0.68,363,0.707,364,0.707,365,0.667,366,0.707,367,0.707,368,0.654,369,0.654,370,0.707,371,0.707,372,0.667,373,0.707,374,0.707,375,0.667,376,0.707,377,0.707,378,0.667,379,0.707,380,0.707,381,0.667,382,0.667,383,0.667,384,0.707,385,0.707,386,0.68,387,2.148,388,0.707,389,0.707,390,0.642,391,0.707,392,0.707,393,0.642,394,0.707,395,0.707,396,0.618,397,0.707,398,1.372,399,0.642,400,0.707,401,0.654,402,0.583,403,0.707,404,0.654,405,0.667,406,0.707,407,0.707,408,0.63,409,0.654,410,0.68]],["title/injectables/TeamService.html",[32,2.451,152,0.202]],["body/injectables/TeamService.html",[3,0.117,4,0.117,5,0.106,10,0.323,11,0.59,14,1.578,17,0.533,18,0.008,21,1.014,22,0.182,31,0.117,32,4.635,43,3.627,44,2.524,45,1.814,51,2.793,52,2.793,55,0.144,58,1.677,65,0.157,76,1.957,78,3.359,82,1.432,83,2.25,91,2.894,111,4.351,112,2.38,114,2.807,115,2.635,129,3.849,130,1.46,134,1.406,135,3.448,138,2.748,139,2.38,146,2.931,149,0.005,150,0.006,151,0.005,152,0.338,154,1.307,157,1.097,158,1.054,163,1.841,167,0.828,187,1.467,213,0.717,223,1.914,224,1.586,225,1.914,267,1.806,304,0.771,306,1.995,319,1.163,320,1.141,365,2.122,369,2.205,372,2.248,405,2.248,422,1.772,425,2.003,450,2.153,517,2.081,518,2.081,622,3.332,795,5.599,796,5.617,797,5.149,801,5.149,831,5.83,853,3.709,1125,4.034,1194,5.83,1334,4.753,1696,6.824,1699,6.824,1701,7.921,1702,6.824,1942,5.545,1943,5.545,1944,6.824,1946,5.545,2003,6.255,2004,6.255,2148,7.921,2264,5.545,2293,5.545,2294,6.247,2295,7.689,2296,7.689,2297,7.689,2298,7.689,2299,6.247,2300,6.247,2301,6.247,2302,7.689,2303,6.247,2304,7.689,2305,7.689,2306,6.247,2307,7.689,2308,6.247,2309,7.689,2310,7.689,2311,7.689,2312,6.247,2313,6.247,2314,6.247,2315,6.247,2316,6.247,2317,6.247,2318,7.689,2319,6.247,2320,7.689,2321,6.247]],["title/components/TeamadminComponent.html",[27,0.437,498,1.213]],["body/components/TeamadminComponent.html",[3,0.114,4,0.114,5,0.104,7,0.626,10,0.316,11,0.582,17,0.529,18,0.008,21,0.887,22,0.185,27,0.785,28,2.053,31,0.114,32,5.012,33,3.943,40,3.457,41,1.817,42,2.058,50,1.973,53,3.337,54,2.528,55,0.114,60,2.449,61,2.356,62,2.387,63,1.887,65,0.125,66,1.581,67,1.816,82,1.412,83,2.134,85,2.324,88,3.67,103,2.147,112,2.356,114,2.058,115,1.932,129,3.057,130,1.16,135,2.528,138,2.015,139,2.166,149,0.005,150,0.006,151,0.005,157,1.072,158,1.031,163,1.462,167,0.85,213,0.681,222,2.093,243,0.758,249,0.672,263,0.976,270,0.758,277,1.009,278,1.937,300,0.704,368,2.065,408,1.987,412,1.612,413,2.166,414,1.817,415,1.78,416,1.78,418,1.78,419,2.001,422,1.747,425,1.747,426,1.71,427,1.407,428,2.21,429,2.21,430,1.78,431,2.514,432,1.78,433,1.78,434,1.644,435,1.78,436,1.644,437,1.71,438,2.585,439,1.644,440,1.78,441,1.612,442,1.71,443,1.612,444,2.21,445,1.612,446,1.78,447,1.644,448,1.78,449,1.644,450,1.71,451,1.644,452,1.644,453,1.78,454,1.644,455,1.78,456,1.644,457,1.78,458,1.644,459,1.612,460,2.21,461,1.78,462,1.644,463,1.612,464,1.78,465,1.644,466,1.78,467,1.644,468,1.78,469,1.644,470,1.78,471,1.677,472,1.78,473,1.644,474,1.78,475,1.644,476,1.78,477,1.644,478,1.78,479,1.644,480,1.78,481,1.612,482,1.78,483,1.581,484,1.78,485,1.612,486,1.78,487,1.644,488,1.78,489,1.644,490,1.78,491,1.78,492,1.644,493,1.78,494,1.55,495,1.78,496,1.612,497,1.78,498,2.276,499,1.78,500,1.644,501,1.78,502,1.612,503,1.78,504,1.644,505,1.71,506,1.78,507,1.78,515,4.072,517,1.816,518,1.816,519,4.895,523,3.626,779,6.168,820,6.168,831,5.748,2322,5.42,2323,8.245,2324,7.581,2325,7.581,2326,6.107,2327,7.581,2328,6.107,2329,7.581,2330,6.107,2331,6.107,2332,6.107,2333,6.107,2334,7.581,2335,6.107,2336,6.107,2337,6.107,2338,6.107,2339,7.581]],["title/guards/TeamadminGuard.html",[508,3.738,763,3.484]],["body/guards/TeamadminGuard.html",[3,0.135,4,0.135,5,0.123,10,0.372,17,0.499,18,0.008,22,0.186,31,0.135,43,3.852,44,2.905,55,0.135,65,0.147,67,1.722,82,1.339,145,3.739,146,2.944,149,0.006,150,0.007,151,0.006,152,0.367,167,0.821,213,0.66,283,2.202,319,1.339,320,1.313,422,1.927,425,1.927,510,5.851,512,7.543,513,7.635,514,5.135,515,4.301,517,2.003,518,2.003,519,4.967,522,3.495,523,4.27,763,6.342,789,5.135,795,4.967,2036,7.425,2340,6.383,2341,7.192,2342,7.192,2343,9.108,2344,9.108,2345,7.192,2346,7.192,2347,8.365]],["title/modules/TeamadminModule.html",[525,1.424,2348,3.484]],["body/modules/TeamadminModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,427,1.68,498,2.485,525,2.26,527,2.745,528,3.651,529,4.454,530,3.766,531,3.766,532,3.651,538,5.021,539,4.497,540,3.889,541,3.889,544,3.491,545,3.406,547,4.33,548,4.709,743,4.508,779,5.933,2083,5.711,2348,7.308,2349,6.473,2350,6.473,2351,6.473,2352,6.722,2353,7.293,2354,6.473]],["title/modules/TeamadminRoutingModule.html",[525,1.424,2352,3.281]],["body/modules/TeamadminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.707,31,0.139,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,304,0.917,498,2.25,522,3.611,527,2.797,529,3.72,544,3.076,545,3.443,574,4.411,575,4.78,576,4.411,578,4.248,579,4.593,743,4.593,2083,5.032,2352,6.086,2354,6.595,2355,7.43]],["title/components/TeamsComponent.html",[27,0.437,500,1.237]],["body/components/TeamsComponent.html",[3,0.121,4,0.121,5,0.11,7,0.663,10,0.334,11,0.603,14,1.612,17,0.469,18,0.008,22,0.161,27,0.805,28,2.106,31,0.121,32,5.026,55,0.121,60,2.455,61,2.362,62,2.426,63,1.956,65,0.132,66,1.675,67,1.881,82,1.463,85,2.106,103,2.19,112,2.417,149,0.005,150,0.006,151,0.005,167,0.785,213,0.668,243,0.786,249,0.712,263,0.865,270,0.786,277,0.865,300,0.746,412,1.708,413,2.245,414,1.925,415,1.886,416,1.886,418,1.886,419,2.074,422,1.81,425,1.491,427,1.491,428,2.29,429,2.29,430,1.886,431,2.564,432,1.886,433,1.886,434,1.742,435,1.886,436,1.742,437,1.812,438,2.627,439,1.742,440,1.886,441,1.708,442,1.812,443,1.708,444,2.29,445,1.708,446,1.886,447,1.742,448,1.886,449,1.742,450,1.812,451,1.742,452,1.742,453,1.886,454,1.742,455,1.886,456,1.742,457,1.886,458,1.742,459,1.708,460,2.29,461,1.886,462,1.742,463,1.708,464,1.886,465,1.742,466,1.886,467,1.742,468,1.886,469,1.742,470,1.886,471,1.777,472,1.886,473,1.742,474,1.886,475,1.742,476,1.886,477,1.742,478,1.886,479,1.742,480,1.886,481,1.708,482,1.886,483,1.675,484,1.886,485,1.708,486,1.886,487,1.742,488,1.886,489,1.742,490,1.886,491,1.886,492,1.742,493,1.886,494,1.643,495,1.886,496,1.708,497,1.886,498,1.708,499,1.886,500,2.368,501,1.886,502,1.708,503,1.886,504,1.742,505,1.812,506,1.886,507,1.886,517,1.55,518,1.55,663,3.029,960,4.664,978,6.391,1179,5.264,1192,5.743,2356,5.743,2357,8.459,2358,7.856,2359,6.471,2360,6.471,2361,6.471,2362,7.856]],["title/components/TournamentComponent.html",[27,0.437,502,1.213]],["body/components/TournamentComponent.html",[3,0.099,4,0.099,5,0.09,7,0.91,10,0.274,11,0.532,13,2.174,15,4.989,17,0.52,18,0.008,21,0.914,22,0.181,27,0.735,28,1.923,31,0.099,38,3.964,39,2.743,41,1.58,43,3.7,44,2.146,48,1.851,49,1.816,50,1.716,51,3.453,52,2.375,55,0.13,60,2.435,61,2.342,62,2.287,63,1.727,65,0.109,66,1.375,67,1.661,78,2,79,3.037,82,1.292,83,2,85,1.923,89,5.516,91,2.611,103,2.039,107,1.681,111,4.686,134,0.897,148,4.388,149,0.004,150,0.005,151,0.004,167,0.845,213,0.647,237,1.069,243,0.773,249,0.585,259,1.323,263,0.764,270,0.694,277,0.764,300,0.613,304,0.655,412,1.402,413,1.982,414,1.58,415,1.549,416,1.549,418,1.549,419,1.831,422,1.598,425,1.887,426,2.294,427,1.224,428,2.022,429,2.022,430,1.549,431,2.388,432,1.549,433,1.549,434,1.43,435,1.549,436,1.43,437,1.488,438,2.477,439,1.43,440,1.549,441,1.402,442,1.488,443,1.402,444,2.022,445,1.402,446,1.549,447,1.43,448,1.549,449,1.43,450,1.488,451,1.43,452,1.43,453,1.549,454,1.43,455,1.549,456,1.43,457,1.549,458,1.43,459,1.402,460,2.022,461,1.549,462,1.43,463,1.402,464,1.549,465,1.43,466,1.549,467,1.43,468,1.549,469,1.43,470,1.549,471,1.459,472,1.549,473,1.43,474,1.549,475,1.43,476,1.549,477,1.43,478,1.549,479,1.43,480,1.549,481,1.402,482,1.549,483,1.375,484,1.549,485,1.402,486,1.549,487,1.43,488,1.549,489,1.43,490,1.549,491,1.549,492,1.43,493,1.549,494,1.349,495,1.549,496,1.402,497,1.549,498,1.402,499,1.549,500,1.43,501,1.549,502,2.162,503,1.549,504,1.43,505,1.488,506,1.549,507,1.549,517,1.661,518,1.661,612,2.255,613,6.158,621,3.284,622,2.833,623,4.028,654,6.285,663,3.281,880,5.26,1236,4.584,1334,4.776,1453,3.793,1518,3.598,1651,3.793,1724,6.857,1759,4.715,1761,4.715,1765,4.715,1771,4.715,1800,6.158,1830,6.158,1868,7.735,1869,7.542,2003,5.644,2004,5.644,2363,4.322,2364,7.725,2365,6.938,2366,8.19,2367,8.19,2368,5.312,2369,7.725,2370,6.938,2371,5.312,2372,6.938,2373,5.312,2374,5.312,2375,5.312,2376,5.312,2377,5.312,2378,5.312,2379,4.715,2380,5.312,2381,5.312,2382,5.312,2383,5.312,2384,5.312,2385,5.312,2386,5.312,2387,6.938,2388,5.312,2389,5.312,2390,5.312,2391,5.312,2392,5.312,2393,8.497,2394,5.312,2395,5.312,2396,5.312,2397,5.312,2398,5.312,2399,6.938,2400,5.312,2401,5.312,2402,6.938,2403,5.312,2404,5.312,2405,5.312,2406,5.312,2407,6.938,2408,6.938,2409,6.938,2410,6.938,2411,9.003,2412,6.938,2413,6.938]],["title/injectables/TournamentGQL.html",[49,1.019,152,0.202]],["body/injectables/TournamentGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.825,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.616,49,0.95,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.571,155,0.653,156,2.343,157,0.479,158,0.46,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,0.679,182,2.371,183,1.109,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.109,215,1.109,216,1.37,217,1.37,218,1.37,219,1.088,220,1.109,221,1.109,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.109,228,1.109,229,1.088,230,1.523,231,1.409,232,1.965,233,1.903,234,1.523,235,1.723,236,1.088,237,1.552,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.628,246,1.899,247,0.692,248,0.666,249,0.901,250,1.658,251,1.007,252,1.026,253,1.318,254,0.897,255,0.692,256,1.067,257,1.69,258,0.692,259,1.067,260,1.723,261,0.692,262,0.692,263,0.826,264,1.344,265,1.046,266,1.623,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.502,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.409,296,1.067,297,0.679,298,1.502,299,1.22,300,0.494,301,1.026,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.318,314,1.318,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.362,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.653,334,0.706,335,0.706,336,0.653,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.653,369,0.653,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.616,397,0.706,398,1.37,399,0.641,400,0.706,401,0.653,402,0.582,403,0.706,404,0.653,405,0.666,406,1.109,407,1.109,408,0.628,409,0.653,410,0.679,2414,2.728]],["title/modules/TournamentModule.html",[525,1.424,2415,3.484]],["body/modules/TournamentModule.html",[3,0.137,4,0.137,5,0.124,7,0.748,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,427,1.68,502,2.485,525,2.26,527,2.745,528,3.651,529,4.454,530,3.766,531,3.766,532,3.651,538,5.021,539,4.497,540,3.889,541,3.889,544,3.491,545,3.406,547,4.33,548,4.709,743,4.508,2083,5.711,2415,7.308,2416,6.473,2417,6.473,2418,6.473,2419,6.722,2420,7.293,2421,6.473]],["title/modules/TournamentRoutingModule.html",[525,1.424,2419,3.281]],["body/modules/TournamentRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.709,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,304,0.919,502,2.254,522,3.621,527,2.805,529,3.73,544,3.084,545,3.449,574,4.424,575,4.786,576,4.424,578,4.26,579,4.606,2419,6.096,2421,6.613,2422,7.451]],["title/injectables/UpdatePitchContactGQL.html",[152,0.202,343,1.122]],["body/injectables/UpdatePitchContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,123,1.462,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.569,155,0.651,156,2.342,157,0.477,158,0.459,159,2.329,160,2.46,161,1.55,162,2.109,163,2.111,164,1.852,165,1.794,166,1.55,167,0.252,169,2.357,170,0.639,171,1.721,172,1.106,173,1.064,174,1.085,175,1.085,176,1.085,177,1.024,178,1.024,179,0.69,180,0.69,181,0.677,182,2.371,183,1.106,184,1.963,185,1.688,186,1.688,187,2.244,188,1.085,189,1.085,190,1.721,191,1.085,192,2.024,193,1.085,194,0.704,195,2.08,196,1.491,197,0.704,198,0.704,199,1.064,200,0.704,201,1.55,202,1.52,203,1.064,204,1.789,205,2.144,206,2.144,207,2.063,208,1.55,209,1.688,210,1.52,211,1.52,212,1.085,213,0.704,214,1.106,215,1.106,216,1.367,217,1.367,218,1.367,219,1.085,220,1.106,221,1.106,222,1.52,223,1.064,224,1.52,225,1.064,226,1.085,227,1.106,228,1.106,229,1.085,230,1.52,231,1.407,232,1.963,233,1.901,234,1.52,235,1.721,236,1.085,237,1.551,238,1.085,239,0.704,240,1.52,241,1.755,242,1.064,243,0.771,244,0.948,245,0.626,246,1.898,247,0.69,248,0.664,249,0.9,250,1.655,251,1.004,252,1.024,253,1.315,254,0.894,255,0.69,256,1.064,257,1.688,258,0.69,259,1.064,260,1.721,261,0.69,262,0.69,263,0.825,264,1.341,265,1.044,266,1.621,267,2.129,268,1.085,269,1.085,270,0.771,271,1.085,272,1.085,273,1.593,274,1.5,275,1.085,276,1.085,277,0.9,278,1.004,279,1.52,280,1.085,281,0.677,282,1.064,283,1.064,284,1.29,285,1.085,286,1.085,287,1.315,288,0.704,289,1.085,290,1.085,291,1.085,292,1.085,293,1.085,294,1.085,295,1.407,296,1.064,297,0.677,298,1.5,299,1.217,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.315,306,1.794,307,1.315,308,1.29,309,1.315,310,1.064,311,1.064,312,1.064,313,1.064,314,1.315,315,1.315,316,1.315,317,1.064,318,0.677,319,1.747,320,1.714,321,0.664,322,2.291,323,2.361,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.651,334,0.704,335,0.704,336,0.651,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,1.044,344,0.664,345,1.085,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,0.651,369,0.651,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.145,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.614,397,0.704,398,1.367,399,0.639,400,0.704,401,0.651,402,0.58,403,0.704,404,0.651,405,0.664,406,0.704,407,0.704,408,0.626,409,0.651,410,0.677,2423,2.719]],["title/injectables/UpdateTeamContactGQL.html",[152,0.202,368,1.101]],["body/injectables/UpdateTeamContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.407,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.639,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.508,59,1.004,65,0.192,76,1.529,107,0.558,117,1.655,119,1.829,123,1.462,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.569,155,0.651,156,2.342,157,0.477,158,0.459,159,2.329,160,2.46,161,1.55,162,2.109,163,2.144,164,1.852,165,1.794,166,1.55,167,0.252,169,2.357,170,0.639,171,1.721,172,1.106,173,1.064,174,1.085,175,1.085,176,1.085,177,1.024,178,1.024,179,0.69,180,0.69,181,0.677,182,2.371,183,1.106,184,1.963,185,1.688,186,1.688,187,2.244,188,1.085,189,1.085,190,1.721,191,1.085,192,1.925,193,1.085,194,0.704,195,2.08,196,1.491,197,0.704,198,0.704,199,1.064,200,0.704,201,1.55,202,1.52,203,1.064,204,1.55,205,2.144,206,2.144,207,2.063,208,1.55,209,1.688,210,1.52,211,1.52,212,1.085,213,0.704,214,1.106,215,1.106,216,1.367,217,1.367,218,1.367,219,1.085,220,1.106,221,1.106,222,1.755,223,1.064,224,1.52,225,1.064,226,1.085,227,1.106,228,1.106,229,1.085,230,1.52,231,1.407,232,1.963,233,1.901,234,1.52,235,1.721,236,1.085,237,1.551,238,1.085,239,0.704,240,1.52,241,1.755,242,1.064,243,0.771,244,0.948,245,0.626,246,1.898,247,0.69,248,0.664,249,0.9,250,1.655,251,1.004,252,1.024,253,1.315,254,0.894,255,0.69,256,1.064,257,1.688,258,0.69,259,1.064,260,1.721,261,0.69,262,0.69,263,0.825,264,1.341,265,1.044,266,1.621,267,2.129,268,1.085,269,1.085,270,0.771,271,1.085,272,1.085,273,1.593,274,1.5,275,1.085,276,1.085,277,0.9,278,1.004,279,1.52,280,1.085,281,0.677,282,1.064,283,1.064,284,1.29,285,1.085,286,1.085,287,1.315,288,0.704,289,1.085,290,1.085,291,1.085,292,1.085,293,1.085,294,1.085,295,1.407,296,1.064,297,0.677,298,1.5,299,1.217,300,0.493,301,1.024,302,0.664,303,0.704,304,1.023,305,1.315,306,1.794,307,1.315,308,1.29,309,1.315,310,1.064,311,1.064,312,1.064,313,1.064,314,1.315,315,1.315,316,1.315,317,1.064,318,0.677,319,1.747,320,1.714,321,0.664,322,2.291,323,2.361,324,0.664,325,0.704,326,0.704,327,0.664,328,0.704,329,0.704,330,0.664,331,0.704,332,0.704,333,0.651,334,0.704,335,0.704,336,0.651,337,0.704,338,0.704,339,0.664,340,0.664,341,0.704,342,0.704,343,0.664,344,0.664,345,1.085,346,0.664,347,0.704,348,0.704,349,0.677,350,0.704,351,0.704,352,0.677,353,0.704,354,0.704,355,0.677,356,0.704,357,0.677,358,0.704,359,0.664,360,0.704,361,0.704,362,0.677,363,0.704,364,0.704,365,0.664,366,0.704,367,0.704,368,1.024,369,0.651,370,0.704,371,0.704,372,0.664,373,0.704,374,0.704,375,0.664,376,0.704,377,0.704,378,0.664,379,0.704,380,0.704,381,0.664,382,0.664,383,0.664,384,0.704,385,0.704,386,0.677,387,2.145,388,0.704,389,0.704,390,0.639,391,0.704,392,0.704,393,0.639,394,0.704,395,0.704,396,0.614,397,0.704,398,1.367,399,0.639,400,0.704,401,0.651,402,0.58,403,0.704,404,0.651,405,0.664,406,0.704,407,0.704,408,0.626,409,0.651,410,0.677,2424,2.719]],["title/injectables/UpdateUserGQL.html",[152,0.202,382,1.122]],["body/injectables/UpdateUserGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.406,14,1.581,17,0.585,18,0.008,19,1.7,21,1.058,22,0.108,31,0.051,45,1.707,46,0.638,47,1.003,48,0.614,49,0.602,55,0.185,56,1.362,57,1.003,58,1.507,59,1.003,65,0.192,76,1.529,107,0.557,117,1.655,119,1.828,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.568,155,0.651,156,2.342,157,0.477,158,0.458,159,2.329,160,2.46,161,1.549,162,2.108,163,2.111,164,1.852,165,1.793,166,1.549,167,0.252,169,2.357,170,0.638,171,1.72,172,1.106,173,1.063,174,1.084,175,1.084,176,1.084,177,1.023,178,1.023,179,0.69,180,0.69,181,0.676,182,2.371,183,1.106,184,1.962,185,1.687,186,1.687,187,2.244,188,1.084,189,1.084,190,1.72,191,1.084,192,1.925,193,1.084,194,0.703,195,2.08,196,1.49,197,0.703,198,0.703,199,1.063,200,0.703,201,1.549,202,1.519,203,1.063,204,1.549,205,2.144,206,2.144,207,1.962,208,1.549,209,1.687,210,1.519,211,1.519,212,1.084,213,0.703,214,1.106,215,1.106,216,1.367,217,1.367,218,1.367,219,1.084,220,1.106,221,1.106,222,1.519,223,1.063,224,1.519,225,1.063,226,1.084,227,1.106,228,1.106,229,1.084,230,1.519,231,1.406,232,2.063,233,2.04,234,1.754,235,1.917,236,1.084,237,1.55,238,1.084,239,0.703,240,1.519,241,1.754,242,1.063,243,0.771,244,0.947,245,0.626,246,1.898,247,0.69,248,0.663,249,0.9,250,1.655,251,1.003,252,1.023,253,1.314,254,0.894,255,0.69,256,1.063,257,1.687,258,0.69,259,1.063,260,1.72,261,0.69,262,0.69,263,0.824,264,1.34,265,1.043,266,1.62,267,2.128,268,1.084,269,1.084,270,0.771,271,1.084,272,1.084,273,1.592,274,1.499,275,1.084,276,1.084,277,0.9,278,1.003,279,1.519,280,1.084,281,0.676,282,1.063,283,1.063,284,1.289,285,1.084,286,1.084,287,1.314,288,0.703,289,1.084,290,1.084,291,1.084,292,1.084,293,1.084,294,1.084,295,1.406,296,1.063,297,0.676,298,1.499,299,1.216,300,0.493,301,1.023,302,0.663,303,0.703,304,1.022,305,1.314,306,1.793,307,1.314,308,1.289,309,1.314,310,1.063,311,1.063,312,1.063,313,1.063,314,1.314,315,1.314,316,1.314,317,1.063,318,0.676,319,1.747,320,1.713,321,0.663,322,2.291,323,2.361,324,0.663,325,0.703,326,0.703,327,0.663,328,0.703,329,0.703,330,0.663,331,0.703,332,0.703,333,0.651,334,0.703,335,0.703,336,0.651,337,0.703,338,0.703,339,0.663,340,0.663,341,0.703,342,0.703,343,0.663,344,0.663,345,1.084,346,0.663,347,0.703,348,0.703,349,0.676,350,0.703,351,0.703,352,0.676,353,0.703,354,0.703,355,0.676,356,0.703,357,0.676,358,0.703,359,0.663,360,0.703,361,0.703,362,0.676,363,0.703,364,0.703,365,0.663,366,0.703,367,0.703,368,0.651,369,0.651,370,0.703,371,0.703,372,0.663,373,0.703,374,0.703,375,0.663,376,0.703,377,0.703,378,0.663,379,0.703,380,0.703,381,0.663,382,1.043,383,0.663,384,0.703,385,0.703,386,0.676,387,2.145,388,0.703,389,0.703,390,0.638,391,0.703,392,0.703,393,0.638,394,0.703,395,0.703,396,0.614,397,0.703,398,1.367,399,0.638,400,0.703,401,0.651,402,0.579,403,0.703,404,0.651,405,0.663,406,0.703,407,0.703,408,0.626,409,0.651,410,0.676,2425,2.716]],["title/injectables/UserGQL.html",[152,0.202,408,1.059]],["body/injectables/UserGQL.html",[0,0.506,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.585,18,0.008,19,1.701,21,1.058,22,0.108,31,0.051,45,1.708,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.365,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,107,0.56,117,1.658,119,1.831,123,1.465,125,0.666,127,0.666,130,1.78,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,154,0.571,155,0.654,156,2.343,157,0.479,158,0.461,159,2.33,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.796,166,1.553,167,0.253,169,2.358,170,0.641,171,1.723,172,1.11,173,1.067,174,1.088,175,1.088,176,1.088,177,1.027,178,1.027,179,0.693,180,0.693,181,0.679,182,2.371,183,1.11,184,1.965,185,1.69,186,1.69,187,2.245,188,1.088,189,1.088,190,1.723,191,1.088,192,1.927,193,1.088,194,0.706,195,2.054,196,1.494,197,0.706,198,0.706,199,1.067,200,0.706,201,1.553,202,1.523,203,1.067,204,1.553,205,2.112,206,2.112,207,1.965,208,1.553,209,1.69,210,1.523,211,1.523,212,1.088,213,0.704,214,1.11,215,1.11,216,1.371,217,1.371,218,1.371,219,1.088,220,1.11,221,1.11,222,1.523,223,1.067,224,1.523,225,1.067,226,1.088,227,1.11,228,1.11,229,1.088,230,1.523,231,1.41,232,1.965,233,1.904,234,1.523,235,1.723,236,1.088,237,1.553,238,1.088,239,0.706,240,1.523,241,1.757,242,1.067,243,0.772,244,0.95,245,0.629,246,1.9,247,0.693,248,0.666,249,0.901,250,1.658,251,1.007,252,1.027,253,1.318,254,0.897,255,0.693,256,1.067,257,1.69,258,0.693,259,1.067,260,1.723,261,0.693,262,0.693,263,0.869,264,1.523,265,1.047,266,1.624,267,2.13,268,1.088,269,1.088,270,0.772,271,1.088,272,1.088,273,1.595,274,1.503,275,1.088,276,1.088,277,0.901,278,1.007,279,1.523,280,1.088,281,0.679,282,1.067,283,1.067,284,1.293,285,1.088,286,1.088,287,1.318,288,0.706,289,1.088,290,1.088,291,1.088,292,1.088,293,1.088,294,1.088,295,1.41,296,1.067,297,0.679,298,1.503,299,1.22,300,0.494,301,1.027,302,0.666,303,0.706,304,1.023,305,1.318,306,1.796,307,1.318,308,1.293,309,1.318,310,1.067,311,1.067,312,1.067,313,1.067,314,1.494,315,1.318,316,1.318,317,1.067,318,0.679,319,1.748,320,1.714,321,0.666,322,2.292,323,2.363,324,0.666,325,0.706,326,0.706,327,0.666,328,0.706,329,0.706,330,0.666,331,0.706,332,0.706,333,0.654,334,0.706,335,0.706,336,0.654,337,0.706,338,0.706,339,0.666,340,0.666,341,0.706,342,0.706,343,0.666,344,0.666,345,1.088,346,0.666,347,0.706,348,0.706,349,0.679,350,0.706,351,0.706,352,0.679,353,0.706,354,0.706,355,0.679,356,0.706,357,0.679,358,0.706,359,0.666,360,0.706,361,0.706,362,0.679,363,0.706,364,0.706,365,0.666,366,0.706,367,0.706,368,0.654,369,0.654,370,0.706,371,0.706,372,0.666,373,0.706,374,0.706,375,0.666,376,0.706,377,0.706,378,0.666,379,0.706,380,0.706,381,0.666,382,0.666,383,0.666,384,0.706,385,0.706,386,0.679,387,2.147,388,0.706,389,0.706,390,0.641,391,0.706,392,0.706,393,0.641,394,0.706,395,0.706,396,0.617,397,0.706,398,1.371,399,0.641,400,0.706,401,0.654,402,0.582,403,0.706,404,0.654,405,0.666,406,0.706,407,0.706,408,0.988,409,0.654,410,0.679,2426,2.729]],["title/components/UserListComponent.html",[27,0.437,504,1.237]],["body/components/UserListComponent.html",[3,0.106,4,0.106,5,0.097,7,0.581,10,0.293,11,0.555,14,1.485,17,0.501,18,0.008,22,0.188,26,1.757,27,0.759,28,1.984,31,0.106,40,3.316,41,1.687,42,1.911,43,3.47,44,2.291,50,1.832,51,3.235,52,2.535,53,3.16,54,2.347,55,0.106,60,2.442,61,2.349,62,2.457,63,1.801,65,0.116,66,1.468,67,1.733,82,1.348,83,2.245,86,2.236,88,3.299,91,3,103,2.09,111,3.623,112,1.62,114,1.911,115,1.794,129,2.839,130,1.077,135,2.347,138,1.871,139,2.068,149,0.004,150,0.006,151,0.004,167,0.823,205,1.733,206,1.733,213,0.685,235,1.412,236,1.837,243,0.724,249,0.624,263,1.05,265,2.165,266,1.984,270,0.724,277,0.797,300,0.654,304,0.7,383,2.201,409,2.124,412,1.497,413,2.068,414,1.687,415,1.653,416,1.653,418,1.653,419,1.91,422,1.667,425,1.934,426,2.351,427,1.307,428,2.109,429,2.109,430,1.653,431,2.447,432,1.653,433,1.653,434,1.527,435,1.653,436,1.527,437,1.588,438,2.528,439,1.527,440,1.653,441,1.91,442,2.232,443,1.497,444,2.109,445,1.497,446,1.653,447,1.527,448,1.653,449,1.527,450,1.588,451,1.527,452,1.527,453,1.653,454,1.527,455,1.653,456,1.527,457,1.653,458,1.527,459,1.497,460,2.109,461,1.653,462,1.948,463,1.497,464,1.653,465,1.527,466,1.653,467,1.527,468,1.653,469,1.527,470,1.653,471,1.557,472,1.653,473,1.527,474,1.653,475,1.527,476,1.653,477,1.527,478,1.653,479,1.527,480,1.653,481,1.497,482,1.653,483,1.468,484,1.653,485,1.497,486,1.653,487,1.527,488,1.653,489,1.527,490,1.653,491,1.653,492,1.527,493,1.653,494,1.439,495,1.653,496,1.497,497,1.653,498,1.497,499,1.653,500,1.527,501,1.653,502,1.497,503,1.653,504,2.26,505,2.232,506,1.653,507,1.653,517,1.909,518,1.909,556,7.332,569,3.662,570,4.296,595,3.99,596,5.19,663,3.198,854,5.486,941,4.049,942,3.367,946,2.928,960,4.296,1169,4.901,1170,4.613,1274,4.901,1334,3.506,1654,4.049,1656,4.049,1685,4.3,1686,4.3,2427,8,2428,5.033,2429,7.969,2430,7.236,2431,8.395,2432,7.236,2433,5.671,2434,7.236,2435,5.671,2436,7.236,2437,5.671,2438,7.236,2439,5.671,2440,5.671,2441,5.671,2442,5.671,2443,5.671,2444,5.671,2445,5.671,2446,7.236,2447,8.395,2448,5.671,2449,5.671,2450,5.671,2451,5.671,2452,5.671,2453,7.236,2454,7.236,2455,7.236,2456,7.236]],["title/coverage.html",[2457,5.122]],["body/coverage.html",[0,1.105,1,3.56,5,0.085,6,5.677,7,0.878,8,5.071,9,5.677,17,0.298,18,0.008,20,3.376,27,0.927,32,2.659,38,2.171,46,1.171,47,1.171,48,1.127,49,1.105,53,1.876,66,1.29,78,1.876,148,5.124,149,0.006,150,0.005,151,0.004,152,0.431,153,1.194,155,2.351,171,1.241,243,0.666,249,0.88,263,0.732,270,0.799,277,0.732,305,1.241,306,1.194,307,1.241,308,1.217,309,1.241,310,1.241,311,1.241,312,1.241,313,1.241,314,1.241,315,1.241,316,1.241,317,1.241,321,1.217,324,1.217,327,1.217,330,1.217,333,1.194,336,1.194,339,1.217,340,1.217,343,1.217,344,1.217,346,1.217,349,1.241,352,1.241,355,1.241,357,1.241,359,1.217,362,1.241,365,1.217,368,1.194,369,1.194,372,1.217,375,1.217,378,1.217,381,1.217,382,1.217,383,1.217,386,1.241,390,1.171,393,1.171,396,1.127,399,1.171,401,1.194,402,1.063,404,1.194,405,1.217,408,1.149,409,1.194,412,1.316,417,4.425,434,1.342,436,1.342,439,1.342,441,1.316,443,1.316,445,1.316,447,1.342,449,1.342,451,1.342,452,1.342,454,1.342,456,1.342,458,1.342,459,1.316,462,1.342,463,1.316,465,1.342,467,1.342,469,1.342,471,1.369,473,1.342,475,1.342,477,1.342,479,1.342,481,1.316,483,1.29,485,1.316,487,1.342,489,1.342,492,1.342,494,1.265,496,1.316,498,1.316,500,1.342,502,1.316,504,1.342,508,5.412,509,3.56,511,4.425,515,2.354,553,5.346,556,4.056,559,3.78,565,4.056,567,5.704,569,4.296,584,4.425,587,2.85,597,3.376,598,3.219,599,3.082,616,6.057,618,5.044,623,3.78,710,3.78,725,5.412,751,5.904,757,4.056,761,4.056,763,3.78,769,3.78,782,3.78,783,5.412,806,5.677,834,3.78,836,3.376,855,3.78,887,4.425,888,3.78,889,5.528,916,4.425,941,4.75,942,3.95,944,3.78,951,5.412,955,3.78,963,4.425,964,4.056,965,4.425,979,4.425,995,4.425,996,3.56,1007,2.85,1056,4.425,1070,5.412,1071,4.056,1072,4.425,1104,5.677,1105,5.677,1113,3.78,1175,4.425,1226,4.425,1236,2.574,1275,4.425,1299,4.425,1322,4.425,1356,4.425,1432,5.412,1437,3.376,1452,3.78,1481,5.412,1500,4.056,1508,3.56,1509,5.677,1510,5.677,1514,3.56,1587,3.78,1588,5.412,1594,4.296,1595,5.346,1602,5.412,1603,5.412,1606,4.425,1667,4.425,1692,4.425,1716,5.412,1755,4.056,1812,4.425,1818,4.425,1918,4.425,1951,6.498,1982,4.056,1984,4.056,1986,4.056,2056,4.425,2086,4.425,2109,4.425,2127,4.425,2140,4.425,2141,4.425,2158,5.412,2178,4.056,2187,4.425,2241,4.425,2293,4.425,2322,4.425,2340,4.425,2356,4.425,2363,5.412,2427,4.425,2428,4.425,2457,4.056,2458,4.425,2459,4.985,2460,4.985,2461,9.782,2462,9.223,2463,9.671,2464,9.691,2465,6.652,2466,8.88,2467,8.88,2468,7.988,2469,7.988,2470,8.561,2471,5.904,2472,4.985,2473,4.425,2474,4.985,2475,8.322,2476,8.322,2477,4.985,2478,4.985,2479,4.985,2480,4.985,2481,4.985,2482,4.985,2483,4.985,2484,4.425,2485,4.425,2486,4.425,2487,4.425,2488,5.904,2489,4.425,2490,4.985]],["title/dependencies.html",[528,2.77,2491,3.826]],["body/dependencies.html",[18,0.008,26,2.079,31,0.126,35,4.149,36,4.149,37,3.702,41,2.556,42,2.261,44,3.244,139,1.917,149,0.005,150,0.006,151,0.005,267,1.576,298,2.195,299,1.98,301,2.27,522,3.261,528,3.36,530,3.465,622,3.579,727,7.127,728,6.532,734,5.956,735,5.956,741,3.465,743,4.149,836,4.545,851,5.459,852,6.532,1194,5.088,1274,4.545,1353,7.245,1354,5.459,1363,7.627,1364,5.956,1371,5.956,1373,5.088,1374,5.088,1375,6.088,1425,5.956,1458,5.459,1517,5.088,1937,5.956,2038,5.956,2457,5.459,2492,6.711,2493,9.48,2494,6.711,2495,8.03,2496,6.711,2497,8.03,2498,6.711,2499,6.711,2500,6.711,2501,6.711,2502,6.711,2503,6.711,2504,6.711,2505,6.711,2506,6.711,2507,6.711,2508,6.711,2509,6.711,2510,8.03,2511,6.711,2512,6.711,2513,6.711,2514,6.711,2515,8.03,2516,8.03,2517,8.03,2518,6.711,2519,6.711,2520,6.711,2521,6.711,2522,6.711,2523,6.711,2524,6.711,2525,6.711,2526,6.711,2527,6.711,2528,6.711,2529,6.711,2530,6.711,2531,6.711,2532,5.956,2533,6.711,2534,9.419,2535,9.342,2536,6.711,2537,6.711,2538,8.905,2539,6.711,2540,6.711,2541,6.711,2542,6.711,2543,6.711,2544,6.711,2545,6.711,2546,6.711,2547,6.711,2548,6.711,2549,6.711,2550,6.711,2551,6.711,2552,6.711,2553,6.711,2554,6.711,2555,6.711,2556,6.711,2557,6.711,2558,6.711,2559,6.711,2560,6.711,2561,6.711,2562,6.711,2563,6.711,2564,6.711,2565,6.711,2566,6.711,2567,6.711,2568,6.711,2569,6.711,2570,6.711,2571,6.711]],["title/miscellaneous/enumerations.html",[2572,2.365,2573,4.912]],["body/miscellaneous/enumerations.html",[10,0.389,18,0.007,149,0.006,150,0.007,151,0.006,155,1.803,158,1.583,173,2.138,174,2.18,175,2.18,176,2.18,177,2.057,178,2.057,179,1.911,180,1.911,2572,4.654,2573,6.682,2574,6.987]],["title/miscellaneous/functions.html",[2572,2.365,2575,4.912]],["body/miscellaneous/functions.html",[10,0.391,18,0.007,149,0.006,150,0.007,151,0.006,213,0.68,517,2.062,518,2.062,725,6.153,752,6.713,754,6.713,757,7.005,761,7.005,2572,4.676,2575,6.713,2576,8.611,2577,8.611]],["title/index.html",[10,0.198,2578,3.396,2579,3.396]],["body/index.html",[18,0.007,149,0.006,150,0.007,151,0.006,2458,6.772,2580,7.63,2581,8.654,2582,8.654,2583,7.63]],["title/modules.html",[527,2.37]],["body/modules.html",[18,0.007,149,0.006,150,0.007,151,0.006,526,5.486,527,2.724,536,5.167,537,5.167,538,3.859,706,4.901,716,5.486,722,5.167,723,5.167,724,4.901,728,7.859,985,5.486,989,5.167,1342,5.167,2014,5.486,2018,5.167,2077,5.486,2081,5.167,2285,5.486,2289,5.167,2348,5.486,2352,5.167,2415,5.486,2419,5.167,2584,9.66,2585,9.66,2586,9.825,2587,9.66,2588,9.66]],["title/overview.html",[2589,5.588]],["body/overview.html",[2,2.81,18,0.008,66,2.109,149,0.005,150,0.006,151,0.005,154,1.245,412,2.151,413,1.7,427,1.371,434,2.453,436,2.453,439,2.194,441,2.151,443,2.151,445,2.151,447,2.453,449,2.194,451,2.453,452,2.194,454,2.194,456,2.194,458,2.194,459,2.151,462,2.194,463,2.405,465,2.194,467,2.194,469,2.194,471,2.237,473,2.194,475,2.194,477,2.194,479,2.453,481,2.151,483,2.109,485,2.151,487,2.194,489,2.194,492,2.453,494,2.069,496,2.151,498,2.151,500,2.194,502,2.151,504,2.194,510,4.841,515,3.848,525,1.844,526,7.43,527,2.24,528,2.979,529,2.979,530,3.073,531,3.073,532,2.979,533,5.281,534,5.281,535,5.281,536,5.819,537,6.754,538,5.25,539,3.979,540,3.174,541,3.174,575,3.174,597,5.519,599,5.038,706,5.786,716,7.287,717,5.281,718,5.281,719,5.281,720,5.281,721,5.281,722,5.819,723,6.505,724,6.239,985,7.172,986,5.281,987,5.281,988,5.281,989,5.819,1338,5.281,1339,5.281,1340,5.281,1341,5.281,1342,5.819,1348,5.281,1349,5.281,1414,4.841,2014,7.096,2015,5.281,2016,5.281,2017,5.281,2018,5.819,2077,6.985,2078,5.281,2079,5.281,2080,5.281,2081,5.819,2223,5.281,2224,5.281,2226,5.281,2285,6.985,2286,5.281,2287,5.281,2288,5.281,2289,5.819,2348,6.985,2349,5.281,2350,5.281,2351,5.281,2352,5.819,2415,6.985,2416,5.281,2417,5.281,2418,5.281,2419,5.819,2589,5.281,2590,7.46,2591,5.951,2592,5.951,2593,5.951]],["title/routes.html",[575,3.358]],["body/routes.html",[18,0.007,149,0.006,150,0.007,151,0.006,575,4.084]],["title/todo.html",[899,3.396,2578,3.396,2579,3.396]],["body/todo.html",[18,0.007,139,2.174,149,0.006,150,0.007,151,0.006,296,1.894,300,0.877,2532,6.752,2594,7.608,2595,7.608,2596,7.608,2597,7.608,2598,7.608,2599,7.608,2600,7.608,2601,7.608]],["title/miscellaneous/typealiases.html",[2572,2.365,2602,5.534]],["body/miscellaneous/typealiases.html",[7,0.733,10,0.287,14,1.811,16,7.081,17,0.592,18,0.007,37,3.943,45,1.614,56,1.495,57,1.679,58,1.83,59,1.679,76,1.679,107,1.467,130,1.842,133,2.032,149,0.004,150,0.006,151,0.004,155,1.332,160,2.502,169,2.035,170,1.679,237,1.439,238,1.814,242,1.779,243,0.715,244,1.584,246,1.956,247,1.412,249,0.918,250,1.996,251,1.679,253,1.779,254,1.495,255,1.412,257,1.745,258,1.412,260,1.779,261,1.412,262,1.412,264,1.814,265,1.745,266,1.779,267,2.278,270,0.715,274,1.647,277,0.918,278,1.679,281,1.779,282,1.779,284,1.745,287,1.779,1422,5.419,1595,3.971,1597,5.814,2572,3.438,2574,8.081,2603,5.562,2604,7.652]],["title/miscellaneous/variables.html",[133,1.136,2572,2.365]],["body/miscellaneous/variables.html",[7,0.832,10,0.305,14,1.523,17,0.573,18,0.008,19,1.409,21,0.998,45,1.81,94,3.81,133,1.211,134,1.595,149,0.007,150,0.006,151,0.005,155,1.413,157,1.714,158,1.647,159,2.317,164,1.386,165,1.777,185,1.44,186,1.44,190,1.469,195,1.709,205,1.777,206,1.777,207,1.469,209,1.44,213,0.693,232,1.469,237,1.493,240,1.497,241,1.497,243,0.812,246,1.888,249,0.817,250,1.413,257,1.44,260,1.469,263,0.817,267,2.229,268,1.497,269,1.497,270,0.852,271,1.497,272,1.497,273,1.962,274,1.709,275,1.497,276,1.497,277,0.986,279,1.883,280,1.497,283,1.469,284,1.44,285,1.497,286,1.497,287,1.469,289,1.497,290,1.497,291,1.497,292,1.497,293,1.497,294,1.497,295,1.743,296,1.469,305,2.12,306,2.178,307,2.021,308,1.982,309,2.12,310,1.847,311,1.847,312,1.847,313,1.847,314,1.847,315,1.847,316,2.021,317,1.847,616,6.973,623,5.625,760,4.542,806,4.473,836,5.025,855,5.625,856,4.799,876,5.668,1370,7.559,1481,4.799,1500,6.036,1594,4.791,1595,4.212,1596,5.625,1600,5.625,1602,4.799,1603,6.036,1716,4.799,1755,6.603,1951,4.799,1982,6.036,1983,5.236,1984,6.036,1985,5.236,1986,6.036,1987,5.236,2158,4.799,2178,6.036,2179,5.236,2363,4.799,2379,5.236,2471,5.236,2473,6.585,2484,5.236,2485,5.236,2486,5.236,2487,5.236,2488,5.236,2489,6.585,2572,3.647,2574,7.719,2604,5.236,2605,5.899,2606,7.42,2607,5.899,2608,5.899,2609,5.899,2610,5.899,2611,8.117,2612,5.899,2613,5.899,2614,5.899,2615,5.899,2616,5.899,2617,5.899,2618,5.899,2619,5.899,2620,8.517,2621,8.517,2622,5.899]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":705,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":111,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["1.1.10",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.1",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":700,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2593,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1414,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2590,"title":{},"body":{"overview.html":{}}}],["25",{"_index":677,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":912,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["25px",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1882,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":699,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["304701",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2591,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1751,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1400,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["441313",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["53",{"_index":2592,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["6000",{"_index":2102,"title":{},"body":{"injectables/NotificationService.html":{}}}],["7.0.0",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1298,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1596,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":187,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":2159,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1433,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["a.email.tolowercase",{"_index":2444,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.label.tolowercase",{"_index":2119,"title":{},"body":{"injectables/PitchService.html":{}}}],["a.length",{"_index":1582,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":2003,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":1771,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1335,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":2216,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["a[i",{"_index":1585,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1586,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1913,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1577,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1172,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchComponent.html":{}}}],["access_token",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["accesstoken",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":2060,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2343,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":507,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":1274,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1887,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1530,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewteam",{"_index":1696,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":1699,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addpenaltygql",{"_index":1114,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["addrankingpenalty",{"_index":161,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addrankingpenaltygql",{"_index":153,"title":{"injectables/AddRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addteam",{"_index":1142,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["addteam(hometeam",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteamtoseason",{"_index":214,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":350,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":351,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseasongql",{"_index":349,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtypename",{"_index":1423,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["adm",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":178,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":433,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":420,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":421,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":577,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":412,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":509,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":526,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":536,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":997,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["afterwarelink",{"_index":1384,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["alert",{"_index":2106,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alert(`${matchday.id",{"_index":1564,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":2007,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":2008,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":253,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":257,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":258,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":311,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":256,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":2173,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":404,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":405,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":259,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":48,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2369,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":260,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":261,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":312,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsgql",{"_index":1731,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["alltournamentsqgl",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":266,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":409,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":2220,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["angular",{"_index":299,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":2028,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":2032,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":2030,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":2034,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2026,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2024,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":522,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2305,"title":{},"body":{"injectables/TeamService.html":{}}}],["api/graphql",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["apollo",{"_index":298,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":323,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":387,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1599,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollolink",{"_index":1366,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollolink((operation",{"_index":1385,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollomodule",{"_index":1351,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":732,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":434,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":706,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":716,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":722,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":788,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["appsettings.service",{"_index":1365,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["appsettingsmodel",{"_index":782,"title":{"interfaces/AppsettingsModel.html":{}},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["appsettingsservice",{"_index":598,"title":{"injectables/AppsettingsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/GraphqlService.html":{},"coverage.html":{}}}],["args",{"_index":1425,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["array",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1777,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":2215,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["async",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["auth",{"_index":1404,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticateduser",{"_index":264,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authentication.service",{"_index":1368,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticationservice",{"_index":515,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":519,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_name",{"_index":2074,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":664,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":682,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2588,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1482,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["b",{"_index":1334,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2445,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.label.tolowercase",{"_index":2120,"title":{},"body":{"injectables/PitchService.html":{}}}],["b.name.tolowercase",{"_index":2004,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":2218,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["background",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1417,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["basic",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":1408,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["behaviorsubject",{"_index":2176,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":2177,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["bname",{"_index":2219,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["boolean",{"_index":145,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":530,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1401,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2586,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":731,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":2217,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["button.add_user",{"_index":1223,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.back",{"_index":1048,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.cancel",{"_index":913,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_match",{"_index":914,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["button.cancel_result",{"_index":1296,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":962,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1049,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["button.create_tournament",{"_index":1805,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1878,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1877,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_time",{"_index":1879,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":662,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1046,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.no",{"_index":949,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["button.ok",{"_index":940,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1094,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.send_user_mail",{"_index":1225,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.set_time",{"_index":1314,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":1174,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["button.update_user",{"_index":1224,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.yes",{"_index":950,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["c1",{"_index":2170,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":2185,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":2168,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":2186,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1363,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1424,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["calls",{"_index":2304,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":512,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2342,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":437,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["cancel_match",{"_index":908,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancellation_reason",{"_index":272,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelled_at",{"_index":271,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelmatch",{"_index":193,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch($match_id",{"_index":331,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(match_id",{"_index":332,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(reason",{"_index":894,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancelmatchdialogcomponent",{"_index":436,"title":{"components/CancelMatchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancelmatchgql",{"_index":330,"title":{"injectables/CancelMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["canload",{"_index":513,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1519,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1880,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1399,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["catch",{"_index":138,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["changedetectorref",{"_index":1016,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1484,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1488,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":440,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":917,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":918,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":439,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":200,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":338,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":1003,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["class",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["cleanup",{"_index":2600,"title":{},"body":{"todo.html":{}}}],["client",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":533,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":534,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":535,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":986,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":987,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":988,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1338,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1339,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1341,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1340,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1348,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1349,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":2015,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":2016,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":2017,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":2078,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":2079,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":2080,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2223,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2224,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2226,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2225,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2286,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2287,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2288,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2349,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2350,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2351,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2416,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2417,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2418,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2532,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["codegen",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":685,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["command",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":2083,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":27,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":432,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":413,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":778,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":777,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{}}}],["components/table#tablemodule",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":780,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament/tournament.component",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["conceded_goals",{"_index":294,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":442,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["confirm_tilte",{"_index":947,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmdialog",{"_index":1799,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialog.afterclosed().subscribe",{"_index":1801,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialogcomponent",{"_index":441,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdialogcomponentdata",{"_index":944,"title":{"interfaces/ConfirmDialogComponentData.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"coverage.html":{}}}],["connect",{"_index":1435,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connected",{"_index":1434,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.error('iwas",{"_index":1571,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":936,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log",{"_index":1396,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('connected",{"_index":1461,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":793,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["console.log(message.data",{"_index":1469,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(penalties",{"_index":2266,"title":{},"body":{"components/TableComponent.html":{}}}],["const",{"_index":304,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":2162,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":1146,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["constructor(allusersgql",{"_index":2433,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(apollo",{"_index":1358,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["constructor(authservice",{"_index":514,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(createteamql",{"_index":2300,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(data",{"_index":943,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1730,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":954,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1005,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(httpclient",{"_index":802,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["constructor(i18service",{"_index":2368,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1325,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":892,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitch",{"_index":1095,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["constructor(pitchesgql",{"_index":2110,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1672,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":789,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(rankinggql",{"_index":1638,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["constructor(redis",{"_index":1436,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1961,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(snackbar",{"_index":2091,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(submitresultgql",{"_index":1923,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":1179,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(translateservice",{"_index":1486,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":1057,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["constructor(userqgl",{"_index":2326,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["contact",{"_index":277,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":444,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component",{"_index":2234,"title":{},"body":{"modules/SharedModule.html":{}}}],["contact.component.css",{"_index":952,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.html",{"_index":953,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.ts",{"_index":1072,"title":{},"body":{"components/EditContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:14",{"_index":1079,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:16",{"_index":1081,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:18",{"_index":1078,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:24",{"_index":1089,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:27",{"_index":1084,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:36",{"_index":1087,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.email",{"_index":977,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":972,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":278,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":973,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":975,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1851,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["contact/edit",{"_index":1071,"title":{},"body":{"components/EditContactComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["contact_mail",{"_index":976,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":974,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactchanged",{"_index":1077,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{}}}],["contactchanged(contact",{"_index":1097,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["contactcomponent",{"_index":443,"title":{"components/ContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactcomponentdata",{"_index":955,"title":{"interfaces/ContactComponentData.html":{}},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["contactfragment",{"_index":305,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":980,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":446,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":991,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":981,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":982,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":445,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":985,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":989,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":447,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":776,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["context",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1346,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":708,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2457,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":450,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["createapollolink",{"_index":1357,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["created_at",{"_index":279,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchesforseason",{"_index":216,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":356,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":355,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":1004,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"injectables/PitchService.html":{}}}],["createnewpitch(pitch",{"_index":2112,"title":{},"body":{"injectables/PitchService.html":{}}}],["createnewtournament",{"_index":1725,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1733,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewuser",{"_index":2431,"title":{},"body":{"components/UserListComponent.html":{}}}],["createpitch",{"_index":208,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createpitchdialogcomponent",{"_index":449,"title":{"components/CreatePitchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createpitchgql",{"_index":344,"title":{"injectables/CreatePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createround",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createseason",{"_index":212,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":347,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":348,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":2164,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":346,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":221,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam($id",{"_index":366,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":367,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteamgql",{"_index":365,"title":{"injectables/CreateTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteamql",{"_index":2302,"title":{},"body":{"injectables/TeamService.html":{}}}],["createtournament",{"_index":226,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":376,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":377,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":375,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":227,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":46,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":230,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":381,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["currentlang",{"_index":1485,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":2160,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":2192,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":2200,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":710,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d').todate",{"_index":1557,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1911,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":2096,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches.sort((a",{"_index":2118,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":2211,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allteams.sort((a",{"_index":2311,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1761,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2443,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.dates",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.from",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.to",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.find(x",{"_index":1781,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1333,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":948,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/SnackbarComponent.html":{}}}],["data.pitch.label",{"_index":961,"title":{},"body":{"components/ContactComponent.html":{}}}],["data.round",{"_index":1166,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["data.season",{"_index":1652,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":2005,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":2001,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":2006,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":2002,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.teams",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.title",{"_index":2238,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.tournament",{"_index":2386,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds",{"_index":2387,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2388,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1559,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1561,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(r.end_date",{"_index":1786,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date(r.start_date",{"_index":1785,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date(this.newroundplandatefrom).todatestring",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["date(this.newroundplandateto).todatestring",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["date.setutchours(new",{"_index":1558,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1560,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1562,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1871,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":1664,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1317,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1809,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1872,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1883,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":1666,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1319,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1811,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1884,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":171,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1511,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1491,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":529,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"components/TournamentComponent.html":{}}}],["default",{"_index":157,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultduration",{"_index":2087,"title":{},"body":{"injectables/NotificationService.html":{}}}],["defined",{"_index":167,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":1169,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["deletepitch",{"_index":203,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch($pitch_id",{"_index":341,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitch",{"_index":1675,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["deletepitch(pitch_id",{"_index":342,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitchid",{"_index":2114,"title":{},"body":{"injectables/PitchService.html":{}}}],["deletepitchgql",{"_index":340,"title":{"injectables/DeletePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteteam",{"_index":225,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam($team_id",{"_index":373,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam(team",{"_index":1702,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["deleteteam(team_id",{"_index":374,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteamgql",{"_index":372,"title":{"injectables/DeleteTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deletetournament",{"_index":229,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament($tournament_id",{"_index":379,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournament_id",{"_index":380,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournamentid",{"_index":1735,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["deletetournamentgql",{"_index":378,"title":{"injectables/DeleteTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteuser",{"_index":236,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["deleteuser($user_id",{"_index":384,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteuser(user",{"_index":2436,"title":{},"body":{"components/UserListComponent.html":{}}}],["deleteuser(user_id",{"_index":385,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteusergql",{"_index":383,"title":{"injectables/DeleteUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dependencies",{"_index":528,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":758,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":2294,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialog'},{'name",{"_index":438,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["dialog.component",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{}}}],["dialog.component.css",{"_index":890,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.html",{"_index":891,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts",{"_index":889,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:116",{"_index":1185,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1096,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":893,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1098,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":898,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":897,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1013,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":945,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1191,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1015,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1008,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1187,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":896,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1188,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1181,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":895,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1189,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1011,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1190,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1010,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":1009,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":1184,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":1182,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":1186,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog/cancel",{"_index":888,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/confirm",{"_index":942,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialog/create",{"_index":996,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1656,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1794,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["dialogs",{"_index":2599,"title":{},"body":{"todo.html":{}}}],["directive",{"_index":430,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":506,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["display",{"_index":2597,"title":{},"body":{"todo.html":{}}}],["displaypitch",{"_index":1232,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":1238,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":156,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":646,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2458,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":181,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":415,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["draws",{"_index":291,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":2098,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dynamic",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1910,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1909,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1908,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["edit_round",{"_index":1165,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2339,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editcontactcomponent",{"_index":451,"title":{"components/EditContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatch.pitch",{"_index":1227,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":453,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":1228,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":1229,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1277,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1278,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1300,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":457,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1301,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1302,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1854,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.result.component",{"_index":1852,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.time.component",{"_index":1853,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatchpitchcomponent",{"_index":452,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1276,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":455,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":454,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":456,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editpitchcontact",{"_index":1671,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontact(pitch",{"_index":1677,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontactdialogcomponent",{"_index":458,"title":{"components/EditPitchContactDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponent",{"_index":459,"title":{"components/EditRankingPenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponentdata",{"_index":1113,"title":{"interfaces/EditRankingPenaltyComponentData.html":{}},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"coverage.html":{}}}],["editround",{"_index":1726,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["editround(round",{"_index":1737,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["edittournamentroundcomponent",{"_index":66,"title":{"components/EditTournamentRoundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":2432,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituser(user",{"_index":2438,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituserdialogcomponent",{"_index":462,"title":{"components/EditUserDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":429,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":195,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":1073,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitchanges",{"_index":1821,"title":{},"body":{"components/MatchComponent.html":{}}}],["emitcontactchanged",{"_index":1074,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitcontactchanged(firstname",{"_index":1082,"title":{},"body":{"components/EditContactComponent.html":{}}}],["empty",{"_index":1754,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["en",{"_index":1492,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":410,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":241,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":176,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":220,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason($season_id",{"_index":363,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason(season_id",{"_index":364,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseasongql",{"_index":362,"title":{"injectables/EndSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["englisch",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":543,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":172,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2573,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.persistcache",{"_index":1427,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["err",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":139,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"todo.html":{}}}],["error('empty",{"_index":2316,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorhandler",{"_index":1391,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errorhandler.concat(afterwarelink).concat(auth).concat(http",{"_index":1409,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errors.enter_valid_email",{"_index":1220,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["errors.enter_valid_password",{"_index":937,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["errors.password_token_invalid",{"_index":2076,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1044,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["errors.username_password_wrong",{"_index":939,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["event",{"_index":237,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":388,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":389,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":238,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.occurred_at",{"_index":1336,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.seasonid",{"_index":1992,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["event.tournamentid",{"_index":2383,"title":{},"body":{"components/TournamentComponent.html":{}}}],["event.type",{"_index":1337,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":142,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventemitter",{"_index":1080,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":315,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":386,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":464,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1345,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1323,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1324,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":463,"title":{"components/EventsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1439,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":537,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1342,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2297,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2299,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":532,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":322,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":651,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":2009,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1960,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":1230,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1957,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1963,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1958,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1965,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstates",{"_index":2193,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2413,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":205,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":1221,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["firstname",{"_index":1085,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["fix",{"_index":2594,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":2013,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":733,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":345,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["forgot_password",{"_index":1633,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":1006,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":924,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["formgroup",{"_index":1248,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward",{"_index":1386,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["forward(operation).map(response",{"_index":1387,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["fragment",{"_index":267,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1944,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":303,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["full",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2575,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gamecount",{"_index":1775,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1727,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["getcachekey",{"_index":1426,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getcurrentlang",{"_index":1496,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1979,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1377,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmaindefinition(query",{"_index":1420,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmatchdaylength",{"_index":1906,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getpenaltyforteam",{"_index":2244,"title":{},"body":{"components/TableComponent.html":{}}}],["getpenaltyforteam(penalties",{"_index":2248,"title":{},"body":{"components/TableComponent.html":{}}}],["getranking",{"_index":2245,"title":{},"body":{"components/TableComponent.html":{}}}],["getsubscriptionclient",{"_index":1446,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2578,"title":{"index.html":{},"todo.html":{}},"body":{}}],["getwinner",{"_index":2366,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1014,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1023,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["googlemapsapikey",{"_index":784,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["googlemapsjs",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":159,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2587,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":301,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":1392,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlerrors.map",{"_index":1394,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlmodule",{"_index":723,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":597,"title":{"injectables/GraphqlService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":599,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":785,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["graphqlwsurl",{"_index":786,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["green",{"_index":681,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":508,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":510,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["guest_score",{"_index":186,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":269,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":127,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1455,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2412,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1959,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1407,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('authorization",{"_index":1406,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('x",{"_index":1390,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["height",{"_index":674,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":2073,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played",{"_index":1983,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["hide_played_key",{"_index":1982,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_played_matches",{"_index":2010,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1828,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1954,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["home_score",{"_index":185,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":268,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":125,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1454,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":428,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1354,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["httpclient",{"_index":787,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["httpclientmodule",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["httplink",{"_index":1359,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["httplinkmodule",{"_index":1352,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2583,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1498,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1499,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":38,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":134,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2596,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":790,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/I18Service.html":{}}}],["inject",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1593,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":154,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1364,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1362,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["input",{"_index":971,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":968,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1297,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":166,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1594,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1508,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":1075,"title":{},"body":{"components/EditContactComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1086,"title":{},"body":{"components/EditContactComponent.html":{}}}],["ismatchplayed",{"_index":1921,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1926,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1587,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1822,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1837,"title":{},"body":{"components/MatchComponent.html":{}}}],["isroundvalid",{"_index":144,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["isteamadmin",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1922,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1928,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1514,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1583,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1544,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1474,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["karma",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1430,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["kickoff",{"_index":190,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1304,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1306,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1512,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1419,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1567,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":209,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{},"miscellaneous/variables.html":{}}}],["lang_key",{"_index":1500,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":206,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":1222,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["last_updated_at",{"_index":2283,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":1083,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["latestevent",{"_index":239,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":391,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":390,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":242,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":392,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1327,"title":{},"body":{"components/EventsComponent.html":{}}}],["latitude",{"_index":211,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["launcher",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1411,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["led",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":427,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":2039,"title":{},"body":{"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2580,"title":{},"body":{"index.html":{}}}],["line",{"_index":2038,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":2037,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1353,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["list",{"_index":505,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2429,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2430,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2428,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":2434,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":2440,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":2435,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":2439,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":2437,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1551,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1553,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1563,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1555,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"components/ManagetournamentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2296,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1728,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadappsettings",{"_index":794,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["loadappsettingsfactory",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadappsettingsfactory(provider",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":2595,"title":{},"body":{"todo.html":{}}}],["loadpenalties",{"_index":1634,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["loaduser",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":621,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["localstorage(access_token_key",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localstorage(hide_played_key",{"_index":1969,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(lang_key",{"_index":1494,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage(manage_tournament_key",{"_index":1747,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["localstorage(selected_matchday_key",{"_index":1975,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_season_key",{"_index":2174,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage(selected_team_key",{"_index":1977,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_tournament_key",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["localstorageservice",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["locatematch",{"_index":191,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":328,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":329,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1931,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":327,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1924,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":2133,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":276,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":275,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1267,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1271,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["locations",{"_index":1395,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["login",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":466,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":465,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":834,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["longitude",{"_index":210,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["losses",{"_index":292,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1088,"title":{},"body":{"components/EditContactComponent.html":{}}}],["manage",{"_index":468,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manage_season_id_key",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage_season_key",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_tournament_key",{"_index":1755,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managepenaltycomponent",{"_index":467,"title":{"components/ManagePenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managepitches",{"_index":1668,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches'},{'name",{"_index":470,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managepitches.component.css",{"_index":1669,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches.component.html",{"_index":1670,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches/managepitches.component",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{}}}],["managepitchescomponent",{"_index":469,"title":{"components/ManagepitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":2581,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1523,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":472,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason/manage",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/manageseason.component",{"_index":549,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":552,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncomponent",{"_index":471,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1637,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["manageteams",{"_index":1693,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams'},{'name",{"_index":474,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageteams.component.css",{"_index":1694,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams.component.html",{"_index":1695,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams/manageteams.component",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteams/rename",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteamscomponent",{"_index":473,"title":{"components/ManageteamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournament",{"_index":1717,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":476,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1718,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1719,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/edit",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":551,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":475,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1720,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1721,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1722,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1813,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":478,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1814,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1815,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/edit",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":477,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map((data",{"_index":1779,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["map((result",{"_index":2260,"title":{},"body":{"components/TableComponent.html":{}}}],["map(({data",{"_index":2310,"title":{},"body":{"injectables/TeamService.html":{}}}],["map(value",{"_index":1255,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1259,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1590,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":2043,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":2027,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":2055,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":243,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":480,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":394,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":395,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match.cancellation_reason",{"_index":1876,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.cancelled_at",{"_index":1875,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.css",{"_index":1819,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1820,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":244,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1868,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2398,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1552,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":910,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2403,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1869,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2397,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1550,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":909,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2405,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1316,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1554,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1270,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1917,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match/match.component",{"_index":2228,"title":{},"body":{"modules/SharedModule.html":{}}}],["match:${matchid",{"_index":1945,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_canceled_at",{"_index":1874,"title":{},"body":{"components/MatchComponent.html":{}}}],["match_day_id",{"_index":218,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match_days",{"_index":280,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":184,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":479,"title":{"components/MatchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":273,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1916,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":282,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.matches.foreach",{"_index":1545,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1914,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1915,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchdayfragment",{"_index":309,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1527,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":281,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1995,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":274,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1996,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1578,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1955,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcheventpayload",{"_index":1452,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":308,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":393,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1453,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1303,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1947,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":245,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":482,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":397,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":2020,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1952,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1953,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1524,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":481,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":396,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":2014,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":2018,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1440,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":483,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservc",{"_index":901,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["matchservice",{"_index":1236,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1830,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":2372,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matchviewmodel",{"_index":2401,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":2047,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["matdialogmodule",{"_index":2040,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":2031,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":724,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1773,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1584,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":2029,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":2042,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":2046,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":2045,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":2048,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":2051,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":2054,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselect",{"_index":1121,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["matselectchange",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":2033,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":2025,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":2052,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":2053,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{},"components/TableComponent.html":{}}}],["matsnackbarmodule",{"_index":2050,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":2041,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":2044,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":2023,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":2049,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":169,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2314,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":657,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":660,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":946,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["message.data",{"_index":1468,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1472,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":418,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":422,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["miscellaneous",{"_index":2572,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":525,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":527,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1517,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1516,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1556,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["move",{"_index":900,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["msgtype",{"_index":1471,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1475,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.end_date",{"_index":1810,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.number",{"_index":1807,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.start_date",{"_index":1808,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":160,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":213,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":182,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1170,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchplanComponent.html":{},"components/UserListComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1870,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":652,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["networkerror",{"_index":1393,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['status",{"_index":1398,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['statustext",{"_index":1403,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1318,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":224,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":199,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1272,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1047,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_pitch_label",{"_index":1043,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_tournament_round",{"_index":1806,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["newelement",{"_index":1531,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":1231,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1273,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":2148,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":486,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":2084,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":2057,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":2058,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":485,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":2077,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":2081,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":998,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchformcontrol",{"_index":999,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchlabelexist",{"_index":1000,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplace",{"_index":1021,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplaceformgroup",{"_index":1001,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newroundplandatefrom",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2400,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":2036,"title":{},"body":{"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["ng",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":545,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1529,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1568,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":978,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1268,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1873,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2407,"title":{},"body":{"components/TournamentComponent.html":{}}}],["notification.service",{"_index":1380,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["notificationservice",{"_index":53,"title":{"injectables/NotificationService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["notify",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["nswag",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":285,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1598,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1533,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_time",{"_index":1315,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1269,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":919,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1515,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1177,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onchangeteamselect(event",{"_index":1183,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onerror",{"_index":1379,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["oninit",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["only'}).topromise",{"_index":1479,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["onpitchselect",{"_index":1233,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1242,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":1234,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["ontournamentselected",{"_index":1729,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["opencancelmatchdialog",{"_index":1823,"title":{},"body":{"components/MatchComponent.html":{}}}],["openchangepassworddialog",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1824,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditdialog",{"_index":1635,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["openeditdialog(round",{"_index":1743,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openeditdialog(season",{"_index":1643,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["openeditpitchdialog",{"_index":1825,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1826,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1827,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["openpenaltydialog",{"_index":2246,"title":{},"body":{"components/TableComponent.html":{}}}],["openpenaltydialog(penalties",{"_index":2252,"title":{},"body":{"components/TableComponent.html":{}}}],["openrenameteamdialog",{"_index":1697,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["openrenameteamdialog(team",{"_index":1705,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["operation",{"_index":1418,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operation.getcontext",{"_index":1388,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operationdefinition",{"_index":1421,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["optional",{"_index":518,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":541,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1091,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1076,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2589,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":709,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":2230,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":2231,"title":{},"body":{"modules/SharedModule.html":{}}}],["p",{"_index":2210,"title":{},"body":{"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["p.label",{"_index":1038,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["p.length",{"_index":2265,"title":{},"body":{"components/TableComponent.html":{}}}],["p.sort((a",{"_index":2214,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["package",{"_index":2491,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":1792,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/NotificationService.html":{}}}],["param",{"_index":2313,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":517,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2067,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":2068,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1572,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":231,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":2075,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1632,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":198,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":337,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":336,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":194,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":334,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":333,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":578,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1473,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1477,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":250,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["penalties.filter(t",{"_index":2262,"title":{},"body":{"components/TableComponent.html":{}}}],["penalty",{"_index":295,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["penalty'},{'name",{"_index":460,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["penalty.component",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.css",{"_index":1106,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.html",{"_index":1107,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts",{"_index":1105,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty.component.ts:19",{"_index":1123,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:21",{"_index":1120,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:23",{"_index":1119,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:24",{"_index":1115,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:27",{"_index":1118,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:33",{"_index":1642,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:36",{"_index":1116,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:37",{"_index":1641,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:41",{"_index":1640,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:45",{"_index":1117,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:47",{"_index":1644,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:56",{"_index":1646,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.created_at",{"_index":1663,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.fragment",{"_index":251,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["penalty.id",{"_index":1658,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.points",{"_index":1665,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.reason",{"_index":1662,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.team.name",{"_index":1661,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty/edit",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty/manage",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penaltyfragment",{"_index":316,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["penaltypoints",{"_index":1108,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["penaltyreason",{"_index":1109,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["perm_contact_calendar",{"_index":1691,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{}}}],["persist",{"_index":1371,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1370,"title":{},"body":{"injectables/GraphqlService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":448,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":2233,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":966,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":967,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":965,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":969,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":970,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":964,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":207,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":270,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":254,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1950,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1103,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["pitch.location_latitude",{"_index":2126,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch.location_longitude",{"_index":2125,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch_contact",{"_index":2134,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":192,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1045,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitches",{"_index":252,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitches'},{'name",{"_index":488,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":2128,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":2129,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.find(p",{"_index":1037,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchescomponent",{"_index":487,"title":{"components/PitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":401,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchexist",{"_index":1040,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchfragment",{"_index":307,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":2116,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchservice",{"_index":1007,"title":{"injectables/PitchService.html":{}},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1025,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lat",{"_index":1028,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lng",{"_index":1030,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["places",{"_index":1002,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["plan_date_from",{"_index":1171,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plan_date_to",{"_index":1173,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plandatefrom",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["plandateto",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["points",{"_index":165,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2280,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2277,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2278,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2275,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2273,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2281,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2279,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2274,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2276,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":287,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1525,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1547,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1601,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":174,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":175,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":795,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":714,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["providedin",{"_index":319,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":531,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":130,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["r",{"_index":1780,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["r.matches.map(y",{"_index":1782,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["radius",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":249,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":403,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":255,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2284,"title":{},"body":{"components/TableComponent.html":{}}}],["ranking_penalty_id",{"_index":202,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingfragment",{"_index":317,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":402,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":296,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["rankingposition",{"_index":288,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1438,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":164,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reason.value.length",{"_index":911,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["reconnect",{"_index":1412,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["reconnectionattempts",{"_index":1413,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["red",{"_index":701,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["redesign",{"_index":2598,"title":{},"body":{"todo.html":{}}}],["redirectto",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1442,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1597,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1437,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":1993,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["refetchqueries",{"_index":129,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["refresh",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["registerlocaledata",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":797,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":801,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2315,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2298,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1912,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":938,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1888,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1536,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removepenaltiesgql",{"_index":1639,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty",{"_index":1636,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty(penalty",{"_index":1645,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removerankingpenalty",{"_index":201,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removerankingpenaltygql",{"_index":339,"title":{"injectables/RemoveRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteam",{"_index":1143,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["removeteam(index",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":215,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":353,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":354,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseasongql",{"_index":352,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rename",{"_index":490,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["renameteam",{"_index":223,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":370,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":2146,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":371,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2307,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":489,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":369,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["require",{"_index":2489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1627,"title":{},"body":{"components/LoginComponent.html":{}}}],["res",{"_index":799,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["reschedulematchday",{"_index":217,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchday(match_day_id",{"_index":358,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchdaygql",{"_index":357,"title":{"injectables/RescheduleMatchDayGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["reset",{"_index":540,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":796,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(res",{"_index":800,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":149,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season.ranking",{"_index":2261,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament",{"_index":1766,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1767,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1769,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.sort((a",{"_index":1770,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.ts",{"_index":1603,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["returns",{"_index":425,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":704,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":232,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":320,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":435,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["round'},{'name",{"_index":461,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round.component",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagetournamentComponent.html":{}}}],["round.component.html",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["round.component.ts",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["round.component.ts:111",{"_index":1153,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:115",{"_index":1154,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:119",{"_index":1150,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:28",{"_index":1162,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:29",{"_index":1161,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:31",{"_index":1159,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:32",{"_index":1158,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:34",{"_index":1155,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:36",{"_index":1163,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:37",{"_index":1160,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:38",{"_index":1147,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:42",{"_index":1157,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:43",{"_index":1164,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:50",{"_index":1156,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:66",{"_index":1151,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:69",{"_index":1148,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:81",{"_index":1152,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:85",{"_index":1149,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.number",{"_index":2411,"title":{},"body":{"components/TournamentComponent.html":{}}}],["round/edit",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AdminModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["rounds",{"_index":284,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":20,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":576,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":579,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":781,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2344,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":575,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":547,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":574,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":2213,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":1062,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2325,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2329,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1573,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["savepenalty",{"_index":1112,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["schedulematch",{"_index":189,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":325,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":326,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1933,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1540,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":324,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1520,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":484,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1522,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1521,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1510,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:115",{"_index":1897,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:129",{"_index":1899,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1891,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1904,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1900,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1902,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1905,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1907,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1890,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1903,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1901,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1895,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1894,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1893,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1892,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1896,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1898,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":553,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1930,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":293,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1793,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["season",{"_index":246,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":398,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":247,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.name",{"_index":2221,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1451,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["season.state",{"_index":2222,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season_id",{"_index":162,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":2194,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":2188,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":493,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":2189,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":2190,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser/seasonchooser.component",{"_index":2229,"title":{},"body":{"modules/SharedModule.html":{}}}],["seasonchoosercomponent",{"_index":492,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":2161,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":2167,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":310,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonid",{"_index":1829,"title":{},"body":{"components/MatchComponent.html":{},"injectables/SeasonService.html":{}}}],["seasonlist",{"_index":2191,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonmatchupdated",{"_index":1919,"title":{},"body":{"injectables/MatchService.html":{}}}],["seasonname",{"_index":2166,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonpenalties",{"_index":248,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties($id",{"_index":400,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties.season",{"_index":1126,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["seasonpenaltiesgql",{"_index":399,"title":{"injectables/SeasonPenaltiesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["seasonservice",{"_index":587,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":173,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.ended",{"_index":2197,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonstate.progress",{"_index":2196,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selected_matchday",{"_index":1985,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_matchday_key",{"_index":1984,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_season",{"_index":2179,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/variables.html":{}}}],["selected_season_key",{"_index":2178,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_team",{"_index":1987,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_team_key",{"_index":1986,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament",{"_index":2379,"title":{},"body":{"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament_key",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedmatchdayid",{"_index":1956,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1110,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["selector",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendpasswordmail",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":197,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":335,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":1178,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["server",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":2295,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":318,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["services/appsettings.service",{"_index":625,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/authentication.service",{"_index":523,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/graphql",{"_index":1355,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["services/graphql.service",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["services/i18.service",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1252,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1251,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1981,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1458,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1369,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setcontext((_",{"_index":1405,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setplandatefrom",{"_index":1144,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandatefrom(event",{"_index":141,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":1145,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandateto(event",{"_index":143,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setsubscriptionclient(value",{"_index":1448,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentround",{"_index":228,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/confirm",{"_index":1684,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["shared/create",{"_index":1683,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/edit",{"_index":1682,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/shared.module",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["sharedmodule",{"_index":538,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":1235,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrornotification",{"_index":2088,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerrornotification(title",{"_index":2093,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification",{"_index":2089,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification(title",{"_index":2095,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification",{"_index":2090,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification(title",{"_index":2100,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shuffle",{"_index":1889,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1581,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{}}}],["snackbar'},{'name",{"_index":495,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1592,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1591,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":2232,"title":{},"body":{"modules/SharedModule.html":{}}}],["snackbarcomponent",{"_index":494,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":289,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":2012,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1566,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1565,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1367,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/.../app.module.ts",{"_index":2576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.ts",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.local.ts",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2574,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2604,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../i18.service.ts",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manageseason.component.ts",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../managetournament.component.ts",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../matchplan.component.ts",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../season.service.ts",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.component.ts",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":155,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1057",{"_index":2240,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:1078",{"_index":2156,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:1091",{"_index":1605,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:1104",{"_index":915,"title":{},"body":{"injectables/CancelMatchGQL.html":{}}}],["src/api/graphql.ts:1117",{"_index":2108,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:1130",{"_index":2107,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:1143",{"_index":168,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1168",{"_index":2138,"title":{},"body":{"injectables/RemoveRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1187",{"_index":1066,"title":{},"body":{"injectables/DeletePitchGQL.html":{}}}],["src/api/graphql.ts:1200",{"_index":2423,"title":{},"body":{"injectables/UpdatePitchContactGQL.html":{}}}],["src/api/graphql.ts:1225",{"_index":1050,"title":{},"body":{"injectables/CreatePitchGQL.html":{}}}],["src/api/graphql.ts:1248",{"_index":1051,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:1261",{"_index":411,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:1274",{"_index":2139,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:1287",{"_index":994,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:1303",{"_index":2155,"title":{},"body":{"injectables/RescheduleMatchDayGQL.html":{}}}],["src/api/graphql.ts:1319",{"_index":2239,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:1332",{"_index":1320,"title":{},"body":{"injectables/EndSeasonGQL.html":{}}}],["src/api/graphql.ts:1345",{"_index":1052,"title":{},"body":{"injectables/CreateTeamGQL.html":{}}}],["src/api/graphql.ts:1358",{"_index":2424,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphql.ts:1383",{"_index":2154,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1396",{"_index":1067,"title":{},"body":{"injectables/DeleteTeamGQL.html":{}}}],["src/api/graphql.ts:1409",{"_index":1053,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1422",{"_index":1054,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1445",{"_index":1068,"title":{},"body":{"injectables/DeleteTournamentGQL.html":{}}}],["src/api/graphql.ts:1458",{"_index":1055,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1487",{"_index":2425,"title":{},"body":{"injectables/UpdateUserGQL.html":{}}}],["src/api/graphql.ts:1514",{"_index":1069,"title":{},"body":{"injectables/DeleteUserGQL.html":{}}}],["src/api/graphql.ts:1524",{"_index":1321,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1541",{"_index":1604,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1555",{"_index":1885,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1572",{"_index":1886,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1589",{"_index":2157,"title":{},"body":{"injectables/SeasonPenaltiesGQL.html":{}}}],["src/api/graphql.ts:1612",{"_index":2135,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1626",{"_index":2136,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1643",{"_index":580,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1660",{"_index":581,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1677",{"_index":582,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1694",{"_index":2414,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1708",{"_index":2426,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1725",{"_index":583,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1450,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1595,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":2137,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1602,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":707,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:24",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/admin/admin",{"_index":573,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":417,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":424,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":423,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":511,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":520,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":521,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":516,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":542,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1347,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1322,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1326,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1329,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1328,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1343,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts",{"_index":1667,"title":{},"body":{"components/ManagepitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:18",{"_index":1673,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:21",{"_index":1680,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:27",{"_index":1679,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:31",{"_index":1676,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:50",{"_index":1674,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:54",{"_index":1678,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/manageseason/manage",{"_index":1104,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1509,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts",{"_index":1692,"title":{},"body":{"components/ManageteamsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:15",{"_index":1698,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:18",{"_index":1708,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:19",{"_index":1707,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:26",{"_index":1704,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:29",{"_index":1700,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:38",{"_index":1703,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:55",{"_index":1706,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/rename",{"_index":2140,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/edit",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1716,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:128",{"_index":1744,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:140",{"_index":1736,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1753,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":1748,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1749,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:26",{"_index":1752,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":1750,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:28",{"_index":1732,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1745,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:38",{"_index":1746,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1741,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:48",{"_index":1740,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:54",{"_index":1734,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:66",{"_index":1742,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:85",{"_index":1739,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:96",{"_index":1738,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/edit",{"_index":1175,"title":{},"body":{"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1812,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1817,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1816,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2427,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":916,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":925,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":926,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":920,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":923,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":922,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":921,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":993,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":979,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":984,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":983,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":990,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":2127,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":2132,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":2131,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":2130,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2356,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2361,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2360,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2359,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":1620,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":2021,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1951,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:21",{"_index":1972,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:23",{"_index":1970,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:25",{"_index":1976,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1978,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1980,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:31",{"_index":1962,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:34",{"_index":1974,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:35",{"_index":1971,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:36",{"_index":1973,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1968,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:52",{"_index":1964,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:58",{"_index":1966,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:66",{"_index":1967,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":2019,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":2085,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":2056,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:15",{"_index":2065,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":2061,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:19",{"_index":2064,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:30",{"_index":2062,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:46",{"_index":2063,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":2082,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/cancel",{"_index":887,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/confirm",{"_index":941,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact",{"_index":963,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":951,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":956,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:17",{"_index":959,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":958,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":957,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/create",{"_index":995,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1070,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":1226,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1247,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1237,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1246,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1241,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:42",{"_index":1239,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":1243,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:50",{"_index":1244,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1245,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1275,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1282,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1279,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1283,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1284,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1285,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1280,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1281,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1299,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1305,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1311,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1310,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1308,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1307,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1309,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1818,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:101",{"_index":1840,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:114",{"_index":1838,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1834,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1835,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1833,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1832,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:27",{"_index":1831,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1846,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1845,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1847,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1849,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1848,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:35",{"_index":1850,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:38",{"_index":1839,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:41",{"_index":1843,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:53",{"_index":1836,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:62",{"_index":1842,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:75",{"_index":1844,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:88",{"_index":1841,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":2187,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":2198,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":2203,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":2204,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":2199,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:19",{"_index":2195,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:22",{"_index":2205,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:26",{"_index":2202,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:61",{"_index":2201,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/shared.module",{"_index":1344,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/shared/shared.module.ts",{"_index":2227,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1588,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:13",{"_index":2235,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:16",{"_index":2237,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:21",{"_index":2236,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2292,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":2241,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":2247,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:21",{"_index":2255,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":2254,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":2256,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:29",{"_index":2251,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:40",{"_index":2250,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:46",{"_index":2249,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:51",{"_index":2253,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2290,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2355,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2322,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:15",{"_index":2327,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:20",{"_index":2332,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2331,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2333,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:26",{"_index":2328,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2330,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2340,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2346,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2345,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2341,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2353,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2422,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2363,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":2378,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:19",{"_index":2377,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":2370,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:24",{"_index":2376,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":2374,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:46",{"_index":2373,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:49",{"_index":2375,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:75",{"_index":2371,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2420,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1350,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/app/material.module.ts",{"_index":2022,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/appsettings.service.ts",{"_index":783,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["src/app/services/appsettings.service.ts:15",{"_index":803,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:19",{"_index":804,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:27",{"_index":805,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/authentication.service",{"_index":1193,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:119",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:21",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":832,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:78",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts",{"_index":1356,"title":{},"body":{"injectables/GraphqlService.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts:23",{"_index":1360,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/graphql.service.ts:36",{"_index":1361,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/i18.service",{"_index":1330,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1481,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/i18.service.ts:14",{"_index":1493,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:16",{"_index":1495,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:18",{"_index":1497,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1487,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:25",{"_index":1490,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:37",{"_index":1489,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":711,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":1056,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":1058,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1518,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1918,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:10",{"_index":1938,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:11",{"_index":1925,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1932,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1927,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:23",{"_index":1929,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1936,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:68",{"_index":1934,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/notification.service",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/services/notification.service.ts",{"_index":2086,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/notification.service.ts:10",{"_index":2092,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:16",{"_index":2101,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:20",{"_index":2094,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:24",{"_index":2099,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/pitch.service",{"_index":1017,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["src/app/services/pitch.service.ts",{"_index":2109,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:12",{"_index":2121,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:14",{"_index":2111,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:23",{"_index":2115,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:45",{"_index":2113,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{}}}],["src/app/services/season.service.ts",{"_index":2158,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/season.service.ts:14",{"_index":2175,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:16",{"_index":2163,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:32",{"_index":2165,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:57",{"_index":2172,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:81",{"_index":2169,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1192,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2293,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:102",{"_index":2306,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2312,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2301,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:35",{"_index":2303,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":2308,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/environments/environment",{"_index":617,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":297,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":240,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2579,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1772,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1526,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":219,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":360,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":361,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(seasonid",{"_index":2171,"title":{},"body":{"injectables/SeasonService.html":{}}}],["startseasongql",{"_index":359,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1723,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1249,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":283,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1428,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["store",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["store.readfragment",{"_index":1943,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1946,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["storedlang",{"_index":1483,"title":{},"body":{"injectables/I18Service.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":414,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":419,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":1937,"title":{},"body":{"injectables/MatchService.html":{},"dependencies.html":{}}}],["submit",{"_index":2059,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":188,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1935,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":183,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":321,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{}}}],["subscription",{"_index":1422,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{}}}],["subscription.service.ts",{"_index":1432,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:19",{"_index":1445,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:21",{"_index":1444,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1447,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:25",{"_index":1449,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:59",{"_index":1441,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:71",{"_index":1443,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1372,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1459,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1373,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":2097,"title":{},"body":{"injectables/NotificationService.html":{}}}],["super",{"_index":1060,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2584,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2585,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1397,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["switchmapto",{"_index":1250,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1258,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":170,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.dates",{"_index":1790,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["t.guestteam.id",{"_index":128,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":126,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.team.id",{"_index":2263,"title":{},"body":{"components/TableComponent.html":{}}}],["t.teams",{"_index":1789,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["table",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":497,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2291,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":2243,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2242,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2269,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2267,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2272,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2268,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2271,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2270,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":496,"title":{"components/TableComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2285,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2289,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":302,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":196,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":45,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":491,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{}}}],["team.component.css",{"_index":2142,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":2143,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":2141,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:13",{"_index":2144,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":2149,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:20",{"_index":2150,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":2145,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:27",{"_index":2147,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.id",{"_index":2264,"title":{},"body":{"components/TableComponent.html":{},"injectables/TeamService.html":{}}}],["team.name",{"_index":960,"title":{},"body":{"components/ContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2320,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2362,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":163,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":123,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":233,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":180,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":779,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":499,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2354,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2323,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2324,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":498,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":763,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2348,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2352,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":306,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":47,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":179,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":1701,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":501,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams.component.css",{"_index":2357,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2358,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.subscribe",{"_index":1787,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["teams/teams.component",{"_index":992,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":1513,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":500,"title":{"components/TeamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamselect",{"_index":1111,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["teamservice",{"_index":32,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["template",{"_index":300,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["templateref",{"_index":1681,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["templateurl",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1569,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["testing",{"_index":2601,"title":{},"body":{"todo.html":{}}}],["text",{"_index":1881,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["thing",{"_index":1686,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this._currentseason",{"_index":2181,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1457,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":2066,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addpenaltygql.mutate",{"_index":1135,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.allseasonslistgql.document",{"_index":2183,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":2209,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2318,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2309,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2380,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsgql.document",{"_index":1763,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsgql.watch().valuechanges.pipe",{"_index":1760,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":131,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.allusers",{"_index":2441,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.document",{"_index":2450,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2442,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apollo.create",{"_index":1431,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettings",{"_index":791,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.appsettingsservice.appsettings.googlemapsapikey",{"_index":640,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsettingsservice.appsettings.graphqlurl",{"_index":1383,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettingsservice.appsettings.graphqlwsurl",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1629,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":2070,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":932,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":524,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2347,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":935,"title":{},"body":{"components/ChangepasswordComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":1217,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.authservice.user",{"_index":2334,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":1065,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cancelmatchgql.mutate",{"_index":902,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.changelang(this.storedlang",{"_index":1506,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.connected",{"_index":1462,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.contactchanged.emit",{"_index":1092,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.createform",{"_index":1621,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createpitchgql.mutate",{"_index":2124,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.createroundgql.mutate",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createseasongql.mutate",{"_index":2182,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createteamql.mutate",{"_index":2317,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.createtournament.mutate",{"_index":1762,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":1205,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.currentseason.subscribe",{"_index":2180,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.penalty",{"_index":1127,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.id",{"_index":1136,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.points",{"_index":1131,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.reason",{"_index":1133,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.team.id",{"_index":1129,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.round",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.season.id",{"_index":1137,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.tournamentid",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.defaultduration",{"_index":2105,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.deletepitchgql.mutate",{"_index":2122,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.deleteteamgql.mutate",{"_index":2321,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.deletetournamentgql.mutate",{"_index":1802,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.deleteusergql.mutate",{"_index":2448,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(cancelmatchdialogcomponent",{"_index":1867,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1654,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1864,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(createpitchdialogcomponent",{"_index":1266,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1862,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1855,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1863,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editpitchcontactdialogcomponent",{"_index":1690,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editrankingpenaltycomponent",{"_index":1653,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.dialog.open(edittournamentroundcomponent",{"_index":1791,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.dialog.open(edituserdialogcomponent",{"_index":2446,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":1715,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.dialogref.close",{"_index":906,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":137,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":1195,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.setvalue(this.user.email",{"_index":1199,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.value.tolowercase",{"_index":1206,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1093,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.emitchanges",{"_index":1857,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.error",{"_index":1623,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1470,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1253,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstates.some(x",{"_index":2212,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":1196,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.setvalue(this.user.first_name",{"_index":1200,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.value",{"_index":1208,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.formbuilder.group",{"_index":1020,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getranking",{"_index":2257,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2389,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2392,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphqlservice.createapollolink",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.connect",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.subscriptionclient",{"_index":1410,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.guest.value",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.guest_score",{"_index":1288,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.handlegetmatches",{"_index":1989,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1988,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home.value",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.home_score",{"_index":1286,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.httpclient.get('./appsettings.json",{"_index":798,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.httplink.create",{"_index":1381,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.i18service.changelang(lang",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isteamadmin",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1940,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1939,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":1197,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.setvalue(this.user.last_name",{"_index":1201,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.value",{"_index":1209,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.latestevents",{"_index":1331,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1332,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1756,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadappsettings",{"_index":792,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.loadgooglemapsscript",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1795,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpenalties",{"_index":1647,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.localstorageservice.remove(access_token_key",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.locatematchqgl.mutate",{"_index":1949,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1622,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls.password.disable",{"_index":1630,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.seterrors",{"_index":1628,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.setvalue",{"_index":1625,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.seterrors",{"_index":1626,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason.match_days.filter",{"_index":1541,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1574,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1528,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1534,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1650,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.managetournamentid",{"_index":1757,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1768,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1764,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.pipe",{"_index":1778,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1856,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1289,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1866,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1287,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1865,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":903,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1264,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.matches",{"_index":2390,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2391,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2394,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2395,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesgql",{"_index":1999,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchkickoff",{"_index":1312,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":904,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.matchplangql.fetch",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1478,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":2000,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1476,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1291,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1290,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1579,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1265,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1580,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1313,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.seasonmatchupdated.next",{"_index":1860,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.seasonmatchupdated.subscribe",{"_index":1990,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1292,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.next",{"_index":1859,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.subscribe",{"_index":2382,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated(event.matchid",{"_index":2384,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1858,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1260,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1254,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":928,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch",{"_index":1032,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1027,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1029,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1018,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1039,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1041,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1042,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.value",{"_index":1033,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1019,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newroundplandatefrom",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('cancel_match_error",{"_index":907,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_pitch_error",{"_index":1035,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_team_error",{"_index":1711,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_tournament__round_error",{"_index":140,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_user_error",{"_index":1212,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_pitch_error",{"_index":1689,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_team_error",{"_index":1714,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_tournament_error",{"_index":1804,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_user_error",{"_index":2452,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('edit_result_error",{"_index":1294,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('enter_valid_result",{"_index":1295,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('password_changed_error",{"_index":2072,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('penalty_error",{"_index":1141,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('remove_penalty_error",{"_index":1660,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('rename_team_error",{"_index":2153,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('send_new_password_mail_error",{"_index":1219,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('team_contact_save_error",{"_index":2338,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('update_user_error",{"_index":1216,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translationservice.instant('unknown_network_error",{"_index":1402,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('cancel_match_success",{"_index":905,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_pitch_success",{"_index":1034,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_team_success",{"_index":1710,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_tournament_round_success",{"_index":136,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_user_success",{"_index":1211,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_pitch_sucess",{"_index":1688,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_team_success",{"_index":1713,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_tournament_success",{"_index":1803,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_user_success",{"_index":2451,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('edit_result_success",{"_index":1293,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('password_changed_success",{"_index":2071,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('penalty_saved",{"_index":1140,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_error",{"_index":1102,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_success",{"_index":1101,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('remove_penalty_success",{"_index":1659,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('rename_team_success",{"_index":2152,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('send_new_password_mail_success",{"_index":1218,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('team_contact_save_success",{"_index":2337,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('update_user_success",{"_index":1215,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.oldpassword",{"_index":931,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":933,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":934,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.ontournamentselected",{"_index":1758,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.openeditdialog(round",{"_index":1788,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.password",{"_index":1198,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.password.value",{"_index":1207,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.penalties",{"_index":1648,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.penaltypoints",{"_index":1130,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.penaltyreason",{"_index":1132,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.pitch.id",{"_index":1100,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.pitchesgql.document",{"_index":2123,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchesgql.watch().valuechanges.pipe",{"_index":2117,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.allpitches.subscribe",{"_index":1036,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.createnewpitch",{"_index":1031,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.deletepitch(pitch.id",{"_index":1687,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.places",{"_index":1022,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1024,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.getplace",{"_index":1026,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.possiblekickoffs",{"_index":1537,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1538,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1532,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1535,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.fetch",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranking.watch",{"_index":2258,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.document",{"_index":1139,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.rankinggql.watch",{"_index":1991,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2259,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.fetch({id",{"_index":1480,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1467,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removepenaltiesgql.mutate",{"_index":1657,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2319,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1774,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1776,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.length",{"_index":147,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":124,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.splice(index",{"_index":110,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1948,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":2207,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonid",{"_index":1861,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.seasonlist",{"_index":2208,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonpenaltiesgql.document",{"_index":1138,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.seasonpenaltiesgql.watch",{"_index":1649,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":648,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":650,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":2206,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1994,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1128,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["this.setbtnlabel",{"_index":1063,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shownotification(title",{"_index":2103,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1546,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":2104,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.startmatchday).foreach",{"_index":1543,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":2184,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.storedlang",{"_index":1504,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.submitresultgql.mutate",{"_index":1941,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1460,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1463,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1464,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnected",{"_index":1465,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnecting",{"_index":1466,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamselect.setdisabledstate(true",{"_index":1134,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":1709,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.deleteteam(team",{"_index":1712,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":2151,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.token",{"_index":2069,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2385,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2381,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentgql.fetch",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tournamentid",{"_index":654,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":132,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1765,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1759,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments.subscribe",{"_index":1796,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1501,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1505,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('confirm_delete",{"_index":1685,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.translateservice.instant('confirm_delete_penalty",{"_index":1655,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1502,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1503,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1507,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":1064,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":1061,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updatepitchcontactgql.mutate",{"_index":1099,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.updateteamcontact.mutate",{"_index":2335,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.updateusergql.mutate",{"_index":1213,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.id",{"_index":1214,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user.role",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.map(t",{"_index":1204,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userqgl.document",{"_index":2336,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":1202,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.usersgql.document",{"_index":1210,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userteamlist",{"_index":1203,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.winnerlastround",{"_index":2393,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2402,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2406,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2396,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2404,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2399,"title":{},"body":{"components/TournamentComponent.html":{}}}],["title",{"_index":1589,"title":{},"body":{"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{}}}],["todo",{"_index":899,"title":{"todo.html":{}},"body":{"components/CancelMatchDialogComponent.html":{}}}],["token",{"_index":1389,"title":{},"body":{"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":135,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tournament",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":503,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":406,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":407,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2421,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2365,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2364,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":262,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1800,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2367,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":502,"title":{"components/TournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":313,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":49,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentmatchupdated",{"_index":1920,"title":{},"body":{"injectables/MatchService.html":{}}}],["tournamentmodule",{"_index":2415,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2419,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1724,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournaments.find(x",{"_index":1797,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["translate",{"_index":663,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":2011,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":712,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":713,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["translationservice",{"_index":1059,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"injectables/GraphqlService.html":{}}}],["transport",{"_index":1374,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":416,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":760,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tslint:disable",{"_index":2035,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel.guestteam.name",{"_index":1168,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["tupel.hometeam.name",{"_index":1167,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2602,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1256,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":1600,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2582,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1240,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1942,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["updated_at",{"_index":286,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updatepitchcontact",{"_index":204,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updatepitchcontactgql",{"_index":343,"title":{"injectables/UpdatePitchContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateteamcontact",{"_index":222,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":368,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateuser",{"_index":234,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateusergql",{"_index":382,"title":{"injectables/UpdateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1382,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["useclass",{"_index":715,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["useexisting",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["usefactory",{"_index":756,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":263,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.authenticateduser",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["user.email",{"_index":2447,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2454,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":265,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["user.id",{"_index":2449,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.last_name",{"_index":2455,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2456,"title":{},"body":{"components/UserListComponent.html":{}}}],["user_id",{"_index":235,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["user_role",{"_index":2453,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":314,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":408,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1456,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":504,"title":{"components/UserListComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1631,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":177,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["usersgql",{"_index":1180,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["userteamlist",{"_index":1176,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["utilities",{"_index":1378,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["uuid",{"_index":1194,"title":{},"body":{"components/EditUserDialogComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":1125,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1124,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{}}}],["val",{"_index":1576,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":927,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["validators.email",{"_index":1090,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.minlength(6",{"_index":930,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.required",{"_index":929,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["value",{"_index":158,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1257,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["valuechanges.pipe",{"_index":1651,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":431,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":133,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2410,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('adressautocomplete",{"_index":1012,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["viewchild('guest",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('home",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandatefrom",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandateto",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('teamselect",{"_index":1122,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["void",{"_index":426,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["warning",{"_index":2282,"title":{},"body":{"components/TableComponent.html":{}}}],["websocketlink",{"_index":1376,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websocketlink(this.graphqlsubscriptionservice.subscriptionclient",{"_index":1416,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websockets",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["webstoragemodule",{"_index":749,"title":{},"body":{"modules/AppModule.html":{}}}],["werden",{"_index":1570,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":676,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1429,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["winner.name",{"_index":2409,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2408,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":290,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1375,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["wsclient",{"_index":1415,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["x",{"_index":1263,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["x.filter(y",{"_index":1261,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1997,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1998,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1798,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1539,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1575,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":1542,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1548,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.guest_team",{"_index":1784,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.home_team",{"_index":1783,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1262,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1549,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/NotificationService.html":{}}}],["zip",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":539,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dates\n                                \n                                \n                                        round\n                                \n                                \n                                        teams\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dates\n                                    \n                                \n                                \n                                    \n                                        dates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         RoundTeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoundTeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddRankingPenaltyGQL.html":{"url":"injectables/AddRankingPenaltyGQL.html","title":"injectable - AddRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1143\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1261\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            ManagePenaltyComponent\n                        \n                        \n                            ManagepitchesComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManageteamsComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './manageteams/rename-team/rename-team.component';\nimport { EventsModule } from './events';\nimport { ManageteamsComponent } from './manageteams/manageteams.component';\nimport { ManagepitchesComponent } from './managepitches/managepitches.component';\nimport { ManagePenaltyComponent } from './manageseason/manage-penalty/manage-penalty.component';\nimport { EditRankingPenaltyComponent } from './manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component';\nimport { EditUserDialogComponent } from './manageusers/edit-user-dialog/edit-user-dialog.component';\nimport { EditTournamentRoundComponent } from './managetournament/edit-tournament-round/edit-tournament-round.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    ManageteamsComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    EditTournamentRoundComponent,\n    MatchSchedulingComponent,\n    UserListComponent,\n    RenameTeamComponent,\n    ManagepitchesComponent,\n    ManagePenaltyComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ],\n  entryComponents: [\n    EditTournamentRoundComponent,\n    RenameTeamComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1643\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1660\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1677\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1725\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, ranking: RankingGQL, matchPlanGQL: MatchPlanGQL, tournamentGQL: TournamentGQL, seasonService: SeasonService, graphqlService: GraphqlService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentGQL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlService\n                                                  \n                                                        \n                                                                        GraphqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { RankingGQL, MatchPlanGQL, TournamentGQL } from 'src/api/graphql';\nimport { SeasonService } from 'src/app/services/season.service';\nimport { LocalStorage } from 'ngx-store';\nimport { SELECTED_TOURNAMENT_KEY } from './components/tournament/tournament.component';\nimport { AppsettingsService } from './services/appsettings.service';\nimport { Apollo } from 'apollo-angular';\nimport { GraphqlService } from './services/graphql.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private ranking: RankingGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private tournamentGQL: TournamentGQL,\n    public seasonService: SeasonService,\n    private graphqlService: GraphqlService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService) {\n  }\n  async ngOnInit() {\n\n    this.graphqlService.createApolloLink();\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n      this.graphqlSubscriptionService.connect();\n    }\n\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.appsettingsService.appsettings.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n\n  async refresh() {\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.ranking.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.matchPlanGQL.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.tournamentId) {\n      await this.tournamentGQL.fetch({ id: this.tournamentId }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n      \n        \n          refresh\n        \n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                   -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                              refresh                                  Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebStorageModule } from 'ngx-store';\nimport { AppsettingsService } from './services/appsettings.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function loadAppsettingsFactory(provider: AppsettingsService) {\n  return () => provider.init();\n}\n\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    WebStorageModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadAppsettingsFactory,\n      deps: [AppsettingsService], multi: true\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppsettingsModel.html":{"url":"interfaces/AppsettingsModel.html","title":"interface - AppsettingsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppsettingsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        googleMapsApiKey\n                                \n                                \n                                        graphqlUrl\n                                \n                                \n                                        graphqlWsUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleMapsApiKey\n                                    \n                                \n                                \n                                    \n                                        googleMapsApiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlWsUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlWsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppsettingsService.html":{"url":"injectables/AppsettingsService.html","title":"injectable - AppsettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppsettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appsettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                loadAppsettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appsettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppsettingsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(ACCESS_TOKEN_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelMatchDialogComponent.html":{"url":"components/CancelMatchDialogComponent.html","title":"component - CancelMatchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelMatchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cancel-match-dialog\n            \n\n            \n                styleUrls\n                ./cancel-match-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cancel-match-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelMatch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dialogRef: MatDialogRef, cancelMatchGQL: CancelMatchGQL, translateService: TranslateService, notify: NotificationService, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelMatchGQL\n                                                  \n                                                        \n                                                                        CancelMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cancelMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelMatch(reason: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Match, CancelMatchGQL, MatchPlanGQL } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { SeasonService } from 'src/app/services/season.service';\n\n@Component({\n  selector: 'app-cancel-match-dialog',\n  templateUrl: './cancel-match-dialog.component.html',\n  styleUrls: ['./cancel-match-dialog.component.css']\n})\nexport class CancelMatchDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    public dialogRef: MatDialogRef,\n    private cancelMatchGQL: CancelMatchGQL,\n    private translateService: TranslateService,\n    private notify: NotificationService,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async cancelMatch(reason: string) {\n    // TODO: move to MatchServc\n    try {\n      await this.cancelMatchGQL.mutate({\n        match_id: this.match.id,\n        reason: reason\n      }, {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.seasonService.currentSeason.getValue().id}\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CANCEL_MATCH_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CANCEL_MATCH_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'CANCEL_MATCH' | translate }}\n    \n    \n      {{ match.home_team.name}} - {{ match.guest_team.name}}\n    \n  \n\n\n  \n    \n    {{reason.value.length}} / 255\n  \n\n\n  {{ 'BUTTON.CANCEL' | translate }} \n  {{ 'BUTTON.CANCEL_MATCH' | translate }} \n\n    \n\n    \n                \n                    ./cancel-match-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'CANCEL_MATCH\\' | translate }}              {{ match.home_team.name}} - {{ match.guest_team.name}}                {{reason.value.length}} / 255    {{ \\'BUTTON.CANCEL\\' | translate }}   {{ \\'BUTTON.CANCEL_MATCH\\' | translate }} '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelMatchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CancelMatchGQL.html":{"url":"injectables/CancelMatchGQL.html","title":"injectable - CancelMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CancelMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1104\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ConfirmDialogComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConfirmDialogComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfirmDialogComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ 'CONFIRM_TILTE' | translate }}\n\n\n  {{ data.message }}\n\n\n  \n    {{ 'BUTTON.NO' | translate }}\n  \n  \n      {{ 'BUTTON.YES' | translate }}\n  \n\n    \n\n    \n                \n                    ./confirm-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'CONFIRM_TILTE\\' | translate }}  {{ data.message }}      {{ \\'BUTTON.NO\\' | translate }}          {{ \\'BUTTON.YES\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmDialogComponentData.html":{"url":"interfaces/ConfirmDialogComponentData.html","title":"interface - ConfirmDialogComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmDialogComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ContactComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ContactComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         {{ 'CONTACT' | translate }}\n\n  \n    \n      {{ team.name }}\n    \n    \n      \n    \n  \n  \n    \n      {{ data.pitch.label }}\n    \n    \n      \n    \n  \n\n\n  {{ 'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'CONTACT\\' | translate }}            {{ team.name }}                                {{ data.pitch.label }}                      {{ \\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactComponentData.html":{"url":"interfaces/ContactComponentData.html","title":"interface - ContactComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/contact/contact.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pitch\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team.Fragment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1287\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePitchDialogComponent.html":{"url":"components/CreatePitchDialogComponent.html","title":"component - CreatePitchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePitchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-pitch-dialog\n            \n\n            \n                styleUrls\n                ./create-pitch-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-pitch-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialogRef: MatDialogRef, pitchService: PitchService, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Pitch } from 'src/api/graphql';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-create-pitch-dialog',\n  templateUrl: './create-pitch-dialog.component.html',\n  styleUrls: ['./create-pitch-dialog.component.css']\n})\nexport class CreatePitchDialogComponent implements OnInit {\n\n  newPitchFormControl: FormControl;\n  newPitch = {};\n  newPitchPlaceFormGroup: any;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private pitchService: PitchService,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n  \n  async createNewPitch() {\n    try {\n      await this.pitchService.createNewPitch({\n        ...this.newPitch,\n        label: this.newPitchFormControl.value\n      });\n      this.dialogRef.close();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_PITCH_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_PITCH_ERROR'), error);\n    }\n  }\n  checkNewPitchName() {\n    this.pitchService.allPitches.subscribe(\n      (pitches) => {\n        const pitch = pitches.find(p => p.label === this.newPitchFormControl.value);\n        if (pitch) {\n          this.newPitchFormControl.setErrors({ pitchexist: true });\n        } else {\n          this.newPitchFormControl.setErrors(null);\n          this.newPitchFormControl.updateValueAndValidity();\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ 'NEW_PITCH_LABEL' | translate }}\n    \n      \n      \n        ERRORS.PITCH_EXIST\n      \n      PITCH_REQUIRED\n      \n    \n    \n      \n    \n    \n      \n        {{'BUTTON.NEXT' | translate}}\n      \n    \n  \n  \n    \n      {{ 'NEW_PITCH_ADRESS' | translate}}\n      \n        \n      \n      \n        \n          {{'BUTTON.BACK' | translate}}\n        \n        \n          {{'BUTTON.CREATE_PITCH' | translate}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./create-pitch-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'NEW_PITCH_LABEL\\' | translate }}                        ERRORS.PITCH_EXIST            PITCH_REQUIRED                                          {{\\'BUTTON.NEXT\\' | translate}}                        {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                            {{\\'BUTTON.BACK\\' | translate}}                          {{\\'BUTTON.CREATE_PITCH\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePitchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePitchGQL.html":{"url":"injectables/CreatePitchGQL.html","title":"injectable - CreatePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreatePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1225\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1248\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTeamGQL.html":{"url":"injectables/CreateTeamGQL.html","title":"injectable - CreateTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1345\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1409\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1422\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1458\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeletePitchGQL.html":{"url":"injectables/DeletePitchGQL.html","title":"injectable - DeletePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeletePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1187\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTeamGQL.html":{"url":"injectables/DeleteTeamGQL.html","title":"injectable - DeleteTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1396\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTournamentGQL.html":{"url":"injectables/DeleteTournamentGQL.html","title":"injectable - DeleteTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1445\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserGQL.html":{"url":"injectables/DeleteUserGQL.html","title":"injectable - DeleteUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1514\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditContactComponent.html":{"url":"components/EditContactComponent.html","title":"component - EditContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-contact/edit-contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-contact\n            \n\n            \n                styleUrls\n                ./edit-contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitContactChanged\n                            \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        contactChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitContactChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitContactChanged(firstName: string, lastName: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserGQL, UpdateTeamContactGQL, Contact } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  @Output() contactChanged = new EventEmitter();\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n\n  constructor(\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  emitContactChanged(firstName: string, lastName: string, email: string, phone: string) {\n    this.contactChanged.emit({\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      phone: phone\n    });\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.SAVE' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                    {{ \\'BUTTON.SAVE\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditPitchContactDialogComponent.html":{"url":"components/EditPitchContactDialogComponent.html","title":"component - EditPitchContactDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditPitchContactDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-pitch-contact-dialog\n            \n\n            \n                styleUrls\n                ./edit-pitch-contact-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-pitch-contact-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contactChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitch: Pitch.Fragment, notify: NotificationService, dialogRef: MatDialogRef, translateService: TranslateService, updatePitchContactGQL: UpdatePitchContactGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                  \n                                                        \n                                                                    Pitch.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updatePitchContactGQL\n                                                  \n                                                        \n                                                                        UpdatePitchContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            contactChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contactChanged(contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { Pitch, Contact, UpdatePitchContactGQL } from 'src/api/graphql';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-edit-pitch-contact-dialog',\n  templateUrl: './edit-pitch-contact-dialog.component.html',\n  styleUrls: ['./edit-pitch-contact-dialog.component.css']\n})\nexport class EditPitchContactDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public pitch: Pitch.Fragment,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private updatePitchContactGQL: UpdatePitchContactGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async contactChanged(contact: Contact.Fragment) {\n    try {\n      await this.updatePitchContactGQL.mutate(\n        {\n          pitch_id: this.pitch.id,\n          ...contact\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        {{pitch.label}}\n\n  \n\n    \n\n    \n                \n                    ./edit-pitch-contact-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{pitch.label}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditPitchContactDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRankingPenaltyComponent.html":{"url":"components/EditRankingPenaltyComponent.html","title":"component - EditRankingPenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRankingPenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-ranking-penalty\n            \n\n            \n                styleUrls\n                ./edit-ranking-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-ranking-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                penaltyPoints\n                            \n                            \n                                penaltyReason\n                            \n                            \n                                selectedTeamId\n                            \n                            \n                                teamSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                savePenalty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: EditRankingPenaltyComponentData, addPenaltyGQL: AddRankingPenaltyGQL, dialogRef: MatDialogRef, notify: NotificationService, seasonPenaltiesGQL: SeasonPenaltiesGQL, translateService: TranslateService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        EditRankingPenaltyComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addPenaltyGQL\n                                                  \n                                                        \n                                                                        AddRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            savePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePenalty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditRankingPenaltyComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyReason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSelect\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('teamSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n  {{ 'BUTTON.SAVE' | translate }}\n\n    \n\n    \n                \n                    ./edit-ranking-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ team.name }}                                                                                                {{ \\'BUTTON.SAVE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRankingPenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditRankingPenaltyComponentData.html":{"url":"interfaces/EditRankingPenaltyComponentData.html","title":"interface - EditRankingPenaltyComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditRankingPenaltyComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        penalty\n                                \n                                \n                                        season\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        penalty\n                                    \n                                \n                                \n                                    \n                                        penalty:     Penalty.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Penalty.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:     SeasonPenalties.Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SeasonPenalties.Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTournamentRoundComponent.html":{"url":"components/EditTournamentRoundComponent.html","title":"component - EditTournamentRoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTournamentRoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-tournament-round\n            \n\n\n\n\n            \n                templateUrl\n                edit-tournament-round.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guest\n                            \n                            \n                                home\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                planDateFrom\n                            \n                            \n                                planDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                isRoundValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, notify: NotificationService, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    homeTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRoundValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRoundValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('guest')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('home')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateFrom')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateTo')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n    \n         {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n\n  \n    \n      {{ tupel.homeTeam.name }}\n    \n    \n      -\n    \n    \n      {{ tupel.guestTeam.name }}\n    \n    \n      \n        \n          delete\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      -\n    \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ 'PLAN_DATE_FROM'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n    \n      {{ 'PLAN_DATE_TO'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.START_ROUND' | translate }}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}            {{ tupel.homeTeam.name }}              -              {{ tupel.guestTeam.name }}                                delete                                                              {{team.name}}                                      -                                            {{team.name}}                                                         {{ \\'PLAN_DATE_FROM\\'| translate}}:                                              access_time                                  {{ \\'PLAN_DATE_TO\\'| translate}}:                                              access_time                                {{ \\'BUTTON.START_ROUND\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTournamentRoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserDialogComponent.html":{"url":"components/EditUserDialogComponent.html","title":"component - EditUserDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-dialog\n            \n\n            \n                styleUrls\n                ./edit-user-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, authService: AuthenticationService, createUserGQL: CreateUserGQL, usersGQL: AllUsersGQL, notify: NotificationService, dialogRef: MatDialogRef, updateUserGQL: UpdateUserGQL, user: User.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateUserGQL\n                                                  \n                                                        \n                                                                        UpdateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { UserRole, CreateUserGQL, AllUsersGQL, User, UpdateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from 'src/app/services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { MatSelectChange, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.css']\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL,\n    private usersGQL: AllUsersGQL,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private updateUserGQL: UpdateUserGQL,\n    @Inject(MAT_DIALOG_DATA) public user: User.Fragment,\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    if (!this.user) {\n      this.password = new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]);\n    }\n    if (this.user) {\n      this.email.setValue(this.user.email);\n      this.firstName.setValue(this.user.first_name);\n      this.lastName.setValue(this.user.last_name);\n      this.userRole = this.user.role;\n      this.userTeamList = this.user.teams.map(t => t.id);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_USER_ERROR'), error);\n    }\n  }\n\n  async updateUser() {\n    try {\n      await this.updateUserGQL.mutate(\n        {\n          user_id: this.user.id,\n          email: this.email.value.toLowerCase(),\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('UPDATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('UPDATE_USER_ERROR'), error);\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.ADD_USER' | translate}}\n  \n  \n  {{ 'BUTTON.UPDATE_USER' | translate}}\n\n  \n    {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n  \n\n    \n\n    \n                \n                    ./edit-user-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                    {{ \\'BUTTON.ADD_USER\\' | translate}}      {{ \\'BUTTON.UPDATE_USER\\' | translate}}      {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nshowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { CreatePitchDialogComponent } from '../create-pitch-dialog/create-pitch-dialog.component';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    private dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  showCreateNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                    {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  async onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      try {\n        await this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score);\n        this.notify.showSuccessNotification(this.translateService.instant('EDIT_RESULT_SUCCESS'));\n        this.dialogRef.close(true);\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('EDIT_RESULT_ERROR'), error);\n      }\n    } else {\n      this.notify.showErrorNotification(this.translateService.instant('ENTER_VALID_RESULT'));\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndSeasonGQL.html":{"url":"injectables/EndSeasonGQL.html","title":"injectable - EndSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1332\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1524\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/components/shared/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule } from 'apollo-angular';\nimport { HttpLinkModule } from 'apollo-angular-link-http';\nimport { GraphqlService } from './services/graphql.service';\nimport { GraphqlSubscriptionService } from './services/graphql-subscription.service';\n\n@NgModule({\n  exports: [\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [\n    GraphqlSubscriptionService,\n    GraphqlService\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApolloLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo, httpLink: HttpLink, authService: AuthenticationService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService, notify: NotificationService, translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpLink\n                                                  \n                                                        \n                                                                    HttpLink\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createApolloLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApolloLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AppsettingsService } from './appsettings.service';\nimport { ApolloLink, split } from 'apollo-link';\nimport { AuthenticationService } from './authentication.service';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { persistCache } from 'apollo-cache-persist';\nimport { GraphqlSubscriptionService } from './graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\nimport { NotificationService } from './notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlService {\n\n  constructor(\n    private apollo: Apollo,\n    private httpLink: HttpLink,\n    private authService: AuthenticationService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService,\n    private notify: NotificationService,\n    private translationService: TranslateService\n  ) {\n  }\n\n  createApolloLink() {\n    const http = this.httpLink.create({ uri: this.appsettingsService.appsettings.graphqlUrl });\n\n    const afterwareLink = new ApolloLink((operation, forward) => {\n      return forward(operation).map(response => {\n        const { response: { headers } } = operation.getContext();\n        if (headers) {\n          const token = headers.get('x-token');\n          if (token) {\n            this.authService.accessToken = token;\n          }\n        }\n        return response;\n      });\n    });\n\n    const errorHandler = onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}`,\n          ),\n        );\n      }\n      if (networkError) {\n        switch (networkError['status']) {\n          case 401:\n            this.authService.logout();\n            break;\n          default:\n            this.notify.showErrorNotification(this.translationService.instant('UNKNOWN_NETWORK_ERROR'), networkError['statusText']);\n        }\n      }\n    });\n\n    const auth = setContext((_, { headers }) => {\n      if (!headers) {\n        headers = new HttpHeaders();\n      }\n      const token = this.authService.accessToken;\n      if (token) {\n        return {\n          headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n        };\n      } else {\n        return {};\n      }\n    });\n\n    let link = errorHandler.concat(afterwareLink).concat(auth).concat(http);\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n\n      this.graphqlSubscriptionService.subscriptionClient = new SubscriptionClient(\n        this.appsettingsService.appsettings.graphqlWsUrl,\n        {\n          lazy: true,\n          reconnect: true,\n          reconnectionAttempts: 2\n        });\n      const wsClient = new WebSocketLink(this.graphqlSubscriptionService.subscriptionClient);\n\n      link = split(\n        // split based on operation type\n        ({ query }) => {\n          const { kind, operation } = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        },\n        wsClient,\n        link,\n      );\n    }\n    const cache = new InMemoryCache(\n      {\n        addTypename: true,\n        cacheRedirects: {\n          Query: {\n            allSeasons: (t, args, { getCacheKey }) => {\n              return getCacheKey({ __typename: 'Season' });\n            }\n          },\n        }\n      }\n    );\n    if (environment.persistCache) {\n      persistCache({\n        cache,\n        storage: window.localStorage,\n        key: 'graphql-cache'\n      });\n    }\n    this.apollo.create({\n      link: link,\n      cache: cache\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                            \n                                    Public\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:22\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                            \n                                storedLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storedLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(LANG_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\nimport { LocalStorage } from 'ngx-store';\n\nconst LANG_KEY = 'LANG';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  @LocalStorage(LANG_KEY) storedLang: string;\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    if (!this.storedLang) {\n      this.storedLang = this.translateService.getBrowserLang();\n    }\n    if (!this.storedLang) {\n      this.storedLang = 'de';\n    }\n    this.changeLang(this.storedLang);\n  }\n\n  changeLang(lang: string) {\n    this.translateService.use(lang);\n    this.storedLang = lang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1541\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1091\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    try {\n      this.error = false;\n      await this.authenticationService.loginAsync(this.loginForm.value);\n      this.dialogRef.close();\n    } catch (error) {\n      this.error = true;\n      this.loginForm.controls.password.setValue('');\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.setErrors({ required: true });\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n      }\n    } else {\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.disable();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n      \n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n  \n  \n    \n      {{ 'FORGOT_PASSWORD' | translate}}\n    \n    \n      {{ 'BUTTON.LOGIN' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-error {\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    USERNAME_REQUIRED                                                                              PASSWORD_REQUIRED                                remove_red_eye                                          {{ \\'FORGOT_PASSWORD\\' | translate}}              {{ \\'BUTTON.LOGIN\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagePenaltyComponent.html":{"url":"components/ManagePenaltyComponent.html","title":"component - ManagePenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagePenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-penalty\n            \n\n            \n                styleUrls\n                ./manage-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                penalties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPenalties\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removePenalty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeasonId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rankingGQL: RankingGQL, seasonPenaltiesGQL: SeasonPenaltiesGQL, removePenaltiesGQL: RemoveRankingPenaltyGQL, i18Service: I18Service, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removePenaltiesGQL\n                                                  \n                                                        \n                                                                        RemoveRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPenalties\n                        \n                        \n                    \n                \n            \n            \n                \nloadPenalties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    season\n                                    \n                                            SeasonPenalties.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePenalty(penalty: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penalties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { SeasonPenaltiesGQL, SeasonPenalties, Penalty, RemoveRankingPenaltyGQL, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditRankingPenaltyComponent } from './edit-ranking-penalty/edit-ranking-penalty.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manage-penalty',\n  templateUrl: './manage-penalty.component.html',\n  styleUrls: ['./manage-penalty.component.css']\n})\nexport class ManagePenaltyComponent implements OnInit, OnChanges {\n\n  @Input() manageSeasonId: string;\n\n  penalties: Observable;\n\n  constructor(\n    private rankingGQL: RankingGQL,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private removePenaltiesGQL: RemoveRankingPenaltyGQL,\n    public i18Service: I18Service,\n    private dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.loadPenalties();\n  }\n\n  ngOnChanges() {\n    this.loadPenalties();\n  }\n\n  loadPenalties() {\n    this.penalties = this.seasonPenaltiesGQL.watch({ id: this.manageSeasonId }).valueChanges.pipe(\n      map(({ data }) => data.season)\n    );\n  }\n\n  openEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(EditRankingPenaltyComponent, {\n      data: {\n        season: season,\n        penalty: penalty\n      }\n    });\n  }\n\n  async removePenalty(penalty: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE_PENALTY')\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.removePenaltiesGQL.mutate({\n              ranking_penalty_id: penalty.id,\n              season_id: this.manageSeasonId\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.seasonPenaltiesGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  },\n                  {\n                    query: this.rankingGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('REMOVE_PENALTY_SUCCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('REMOVE_PENALTY_ERROR'), error);\n          }\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'TEAM' | translate }}\n            \n            \n                {{ 'REASON' | translate }}\n            \n            \n                {{ 'DATE' | translate }}\n            \n            \n                {{ 'POINTS' | translate }}\n            \n            \n                \n                    \n                        add\n                    \n                \n            \n        \n        \n            \n                {{ penalty.team.name }}\n            \n            \n                {{ penalty.reason }}\n            \n            \n                {{ penalty.created_at | date:'medium':'':i18Service.currentLang }}\n            \n            \n                {{ penalty.points }}\n            \n            \n                \n                    \n                        edit\n                    \n                 -->\n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./manage-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'TEAM\\' | translate }}                                        {{ \\'REASON\\' | translate }}                                        {{ \\'DATE\\' | translate }}                                        {{ \\'POINTS\\' | translate }}                                                                                    add                                                                                            {{ penalty.team.name }}                                        {{ penalty.reason }}                                        {{ penalty.created_at | date:\\'medium\\':\\'\\':i18Service.currentLang }}                                        {{ penalty.points }}                                                                                    edit                                     -->                                                            delete                                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagePenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagepitchesComponent.html":{"url":"components/ManagepitchesComponent.html","title":"component - ManagepitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagepitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managepitches/managepitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managepitches\n            \n\n            \n                styleUrls\n                ./managepitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managepitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewPitch\n                            \n                            \n                                deletePitch\n                            \n                            \n                                editPitchContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, dialog: MatDialog, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managepitches/managepitches.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPitchContact\n                        \n                        \n                    \n                \n            \n            \n                \neditPitchContact(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialog } from '@angular/material';\nimport { EditPitchContactDialogComponent } from '../../shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from '../../shared/create-pitch-dialog/create-pitch-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-managepitches',\n  templateUrl: './managepitches.component.html',\n  styleUrls: ['./managepitches.component.css']\n})\nexport class ManagepitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService,\n    private dialog: MatDialog,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  deletePitch(pitch: Pitch.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: pitch.label })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.pitchService.deletePitch(pitch.id);\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_PITCH_SUCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_PITCH_ERROR'), error);\n          }\n        }\n      });\n  }\n\n  createNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n\n  editPitchContact(pitch: Pitch.Fragment) {\n    this.dialog.open(EditPitchContactDialogComponent,\n      {\n        data: pitch\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'PITCH' | translate }}\n      \n      \n        {{ 'CONTACT' | translate }}\n      \n      \n        \n          \n            add\n          \n        \n      \n    \n    \n      \n        location_on\n        \n          {{ pitch.label }}\n        \n      \n      \n        \n          \n        \n      \n      \n        \n          \n            perm_contact_calendar\n          \n        \n        \n          \n            delete\n          \n        \n      \n      \n    \n  \n  \n      \n    \n\n\n    \n\n    \n                \n                    ./managepitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PITCH\\' | translate }}                    {{ \\'CONTACT\\' | translate }}                                          add                                              location_on                  {{ pitch.label }}                                                                                        perm_contact_calendar                                                delete                                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagepitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageteamsComponent.html":{"url":"components/ManageteamsComponent.html","title":"component - ManageteamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageteamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/manageteams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageteams\n            \n\n            \n                styleUrls\n                ./manageteams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageteams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/manageteams.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manageteams',\n  templateUrl: './manageteams.component.html',\n  styleUrls: ['./manageteams.component.css']\n})\nexport class ManageteamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TEAM_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TEAM_ERROR'), error);\n    }\n  }\n\n  deleteTeam(team: Team.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: team.name })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        try {\n          await this.teamService.deleteTeam(team);\n          this.notify.showSuccessNotification(this.translateService.instant('DELETE_TEAM_SUCCESS'));\n        } catch (error) {\n          this.notify.showErrorNotification(this.translateService.instant('DELETE_TEAM_ERROR'), error);\n        }\n      });\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{team.name}}\n    \n    \n      \n        \n          edit\n        \n      \n      \n          \n            delete\n          \n        \n    \n  \n\n    \n\n    \n                \n                    ./manageteams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          add                                {{team.name}}                                edit                                          delete                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageteamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                deleteTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                            \n                                    Private\n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsGQL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL, translateService: TranslateService, deleteTournamentGQL: DeleteTournamentGQL, notify: NotificationService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsGQL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTournamentGQL\n                                                  \n                                                        \n                                                                        DeleteTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTournament\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTournament(tournamentId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournamentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound(round: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditDialog(round: number, teams?: RoundTeam[], dates?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teams\n                                    \n                                                RoundTeam[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dates\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(MANAGE_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL, DeleteTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable, empty } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LocalStorage } from 'ngx-store';\nimport { RoundTeam, EditTournamentRoundComponent } from './edit-tournament-round/edit-tournament-round.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nconst MANAGE_TOURNAMENT_KEY = 'MANAGE_TOURNAMENT_KEY';\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  @LocalStorage(MANAGE_TOURNAMENT_KEY)\n  manageTournamentId: string = null;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsGQL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL,\n    private translateService: TranslateService,\n    private deleteTournamentGQL: DeleteTournamentGQL,\n    private notify: NotificationService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n    if (this.manageTournamentId) {\n      this.onTournamentSelected();\n    }\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          { query: this.allTournamentsGQL.document }\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament && result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length + 1;\n            return result.data.tournament.rounds.sort((a, b) => a.number ();\n          }\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound(round: number) {\n    if (round  {\n          if (confirm) {\n            const teams: Observable = this.manageTournamentRounds.pipe(\n              map((data) => {\n                const r = data.find(x => x.number === round);\n                return {\n                  teams: r.matches.map(y => ({ homeTeam: y.home_team, guestTeam: y.guest_team })),\n                  dates: { from: new Date(r.start_date), to: new Date(r.end_date) }\n                };\n              })\n            );\n            teams.subscribe(\n              (t) => {\n                this.openEditDialog(round, t.teams, t.dates);\n              }\n            );\n          }\n        }\n      );\n    } else {\n      this.openEditDialog(round);\n    }\n  }\n\n  private openEditDialog(round: number, teams?: RoundTeam[], dates?: { from: Date, to: Date }) {\n    const dialogRef = this.dialog.open(EditTournamentRoundComponent, {\n      data: { round: round, tournamentId: this.manageTournamentId, teams: teams, dates: dates },\n      panelClass: 'my-full-screen-dialog'\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        // this.loadMatches(this.tournament.id);\n      }\n    });\n  }\n\n  deleteTournament(tournamentId: string) {\n    this.tournaments.subscribe(\n      (tournaments) => {\n        const tournament = tournaments.find(x => x.id === tournamentId);\n        if (!tournament) {\n          return;\n        }\n        const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n          data: {\n            message: this.translateService.instant('CONFIRM_DELETE', { thing: tournament.name })\n          }\n        });\n        confirmDialog.afterClosed().subscribe(\n          async (confirm) => {\n            if (confirm) {\n              try {\n                await this.deleteTournamentGQL.mutate({\n                  tournament_id: tournamentId\n                }, {\n                  refetchQueries: [\n                    { query: this.allTournamentsGQL.document}\n                  ]\n                }).toPromise();\n                this.notify.showSuccessNotification(this.translateService.instant('DELETE_TOURNAMENT_SUCCESS'));\n                delete this.manageTournamentRounds;\n              } catch (error) {\n                this.notify.showErrorNotification(this.translateService.instant('DELETE_TOURNAMENT_ERROR'), error);\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          {{ 'NEW_TOURNAMENT_ROUND' | translate }}\n        \n      \n      \n        \n          \n            delete\n          \n        \n      \n    \n    \n      \n        \n          {{ mt.number }}. {{ 'ROUND' | translate }} ({{ mt.start_date | date:'shortDate':'':i18Service.currentLang}} -\n          {{ mt.end_date | date:'shortDate':'':i18Service.currentLang}})\n          \n            \n              edit\n            \n          \n        \n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                    {{ \\'NEW_TOURNAMENT_ROUND\\' | translate }}                                                  delete                                                        {{ mt.number }}. {{ \\'ROUND\\' | translate }} ({{ mt.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}} -          {{ mt.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                                    edit                                                            {{ match.home_team.name }} - {{ match.guest_team.name }}                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitChanges\n                            \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCancelMatchDialog\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                seasonId\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, notify: NotificationService, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCancelMatchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenCancelMatchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { CancelMatchDialogComponent } from '../cancel-match-dialog/cancel-match-dialog.component';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() seasonId: string;\n  @Input() tournamentId: string;\n  @Input() match: Match.Fragment;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public notify: NotificationService,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  private emitChanges() {\n    this.matchUpdated.emit(this.match.id);\n    if (this.tournamentId) {\n      this.matchService.tournamentMatchUpdated.next({ tournamentId: this.tournamentId, matchId: this.match.id });\n    } else {\n      this.matchService.seasonMatchUpdated.next({ seasonId: this.seasonId, matchId: this.match.id });\n    }\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: {\n        teams: [\n          this.match.home_team,\n          this.match.guest_team\n        ],\n        pitch: this.match.pitch\n      },\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  openCancelMatchDialog() {\n    const dialogRef = this.dialog.open(CancelMatchDialogComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    \n                        access_time\n                    \n                    \n                        \n                            {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                            {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                        \n                        {{ 'NO_TIME_SET' | translate }}\n                    \n                    \n                        location_off\n                        location_on\n                    \n                    \n                        {{ 'NO_PTICH_SET' | translate }}\n                    \n                    \n                        \n                            {{ match.pitch.label }}\n                        \n                    \n                \n                \n                    \n                        {{ 'MATCH_CANCELED_AT' | translate }} {{ match.cancelled_at | date:'short':'':i18Service.currentLang }}\n                    \n                    \n                        {{ match.cancellation_reason }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n    \n        {{ 'BUTTON.CANCEL_MATCH' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                                                    access_time                                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                             {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                                {{ \\'NO_TIME_SET\\' | translate }}                                                                location_off                        location_on                                                                {{ \\'NO_PTICH_SET\\' | translate }}                                                                                            {{ match.pitch.label }}                                                                                                                        {{ \\'MATCH_CANCELED_AT\\' | translate }} {{ match.cancelled_at | date:\\'short\\':\\'\\':i18Service.currentLang }}                                                                {{ match.cancellation_reason }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}                {{ \\'BUTTON.CANCEL_MATCH\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1555\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1572\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'shortDate':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate':'':i18Service.currentLang}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                seasonMatchUpdated\n                            \n                            \n                                tournamentMatchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, Match, Pitch } from '../../api/graphql';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  seasonMatchUpdated = new Subject();\n  tournamentMatchUpdated = new Subject();\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.submitResultGQL.mutate(\n            {\n              match_id: matchId,\n              ...result\n            },\n            {\n              update: (store, { data }) => {\n                const match: any = store.readFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`,\n                    data: {\n                      __typename: 'Match',\n                      ...match,\n                      ...result\n                    }\n                  }\n                );\n              }\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                selectedMatchDayId\n                            \n                            \n                                selectedTeamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, matchService: MatchService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePlayed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(HIDE_PLAYED_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMatchDayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_MATCHDAY_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TEAM_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nconst HIDE_PLAYED_KEY = 'HIDE_PLAYED';\nconst SELECTED_MATCHDAY_KEY = 'SELECTED_MATCHDAY';\nconst SELECTED_TEAM_KEY = 'SELECTED_TEAM';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  @LocalStorage(HIDE_PLAYED_KEY) hidePlayed: boolean;\n\n  @LocalStorage(SELECTED_MATCHDAY_KEY) selectedMatchDayId = '0';\n\n  @LocalStorage(SELECTED_TEAM_KEY) selectedTeamId = '0';\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private matchService: MatchService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.rankingGQL.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatCardModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatCardModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.accessToken = params['token'];\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.logout();\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n      this.notify.showSuccessNotification(this.translateService.instant('PASSWORD_CHANGED_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PASSWORD_CHANGED_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorNotification\n                            \n                            \n                                    Private\n                                showNotification\n                            \n                            \n                                showSuccessNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showNotification(title: string, message: string, type: \"danger\" | \"success\", duration?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"danger\" | \"success\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../components/shared/snackbar/snackbar.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  defaultDuration = 6000;\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  showSuccessNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'success');\n  }\n\n  showErrorNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'danger');\n  }\n\n  private showNotification(title: string, message: string, type: 'danger' | 'success', duration?: number) {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        title: title,\n        message: message\n      },\n      duration: duration || this.defaultDuration,\n      panelClass: ['alert', `alert-${type}`]\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1130\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1117\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                    Async\n                                deletePitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesGQL: PitchesGQL, createPitchGQL: CreatePitchGQL, deletePitchGQL: DeletePitchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesGQL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createPitchGQL\n                                                  \n                                                        \n                                                                        CreatePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deletePitchGQL\n                                                  \n                                                        \n                                                                        DeletePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePitch(pitchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL, CreatePitchGQL, DeletePitchGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuidv4 from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private pitchesGQL: PitchesGQL,\n    private createPitchGQL: CreatePitchGQL,\n    private deletePitchGQL: DeletePitchGQL\n  ) {\n  }\n\n  async deletePitch(pitchId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deletePitchGQL.mutate({\n            pitch_id: pitchId\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  async createNewPitch(pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.createPitchGQL.mutate({\n            id: uuidv4(),\n            label: pitch.label,\n            longitude: pitch.location_longitude,\n            latitude: pitch.location_latitude\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1612\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1626\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveRankingPenaltyGQL.html":{"url":"injectables/RemoveRankingPenaltyGQL.html","title":"injectable - RemoveRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1168\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1274\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, notify: NotificationService, translateService: TranslateService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.notify.showSuccessNotification(this.translateService.instant('RENAME_TEAM_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('RENAME_TEAM_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1383\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RescheduleMatchDayGQL.html":{"url":"injectables/RescheduleMatchDayGQL.html","title":"injectable - RescheduleMatchDayGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RescheduleMatchDayGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1303\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1078\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonPenaltiesGQL.html":{"url":"injectables/SeasonPenaltiesGQL.html","title":"injectable - SeasonPenaltiesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonPenaltiesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1589\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentSeason\n                            \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, startSeasonGQL: StartSeasonGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason(seasonId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_SEASON_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL, StartSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\nimport { LocalStorage } from 'ngx-store';\n\nconst SELECTED_SEASON_KEY = 'SELECTED_SEASON';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  @LocalStorage(SELECTED_SEASON_KEY) _currentSeason: AllSeasonsList.AllSeasons;\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private startSeasonGQL: StartSeasonGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              { query: this.allSeasonsListGQL.document }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  async startSeason(seasonId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.startSeasonGQL.mutate(\n            {\n              id: seasonId\n            },\n            {\n              refetchQueries: [\n                {\n                  query: this.allSeasonsListGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                SeasonState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterStates\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [SeasonState.Progress, SeasonState.Ended]\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SeasonState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterStates: Array = [SeasonState.Progress, SeasonState.Ended];\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  SeasonState = SeasonState;\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          let p = data.allSeasons.filter(s => this.filterStates.some(x => x === s.state));\n          p = p.sort((a, b) => {\n\n            const aState = a.state.toLocaleLowerCase();\n            const bState = b.state.toLocaleLowerCase();\n            if (aState > bState) {\n              return -1;\n            }\n            if (aState  bName) {\n              return 1;\n            }\n            if (aName \n    \n\n    \n        \n  \n    \n      {{ season.name }} {{ season.state !== SeasonState.Progress ? ('(' + ('SeasonState.' + season.state | translate) + ')') : ''  }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }} {{ season.state !== SeasonState.Progress ? (\\'(\\' + (\\'SeasonState.\\' + season.state | translate) + \\')\\') : \\'\\'  }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './match/match.component';\nimport { MaterialModule } from '../../material.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ContactPersonComponent } from './contact-person/contact-person.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { EditPitchContactDialogComponent } from './edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from './create-pitch-dialog/create-pitch-dialog.component';\nimport { CancelMatchDialogComponent } from './cancel-match-dialog/cancel-match-dialog.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent,\n    EditContactComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    EditContactComponent,\n    OwlNativeDateTimeModule,\n    CancelMatchDialogComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.title }}\n\n\n    {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}    {{ data.message }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1319\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1057\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPenaltyForTeam\n                            \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPenaltyDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, ranking: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPenaltyForTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Penalty.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPenaltyDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenPenaltyDialog(penalties: Penalty.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL, Team, Penalty } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatchService } from 'src/app/services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private matchService: MatchService,\n    private ranking: RankingGQL\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.ranking.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  getRanking() {\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map((result) => result.data.season.ranking)\n    );\n  }\n\n  getPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment): Penalty.Fragment[] {\n    const p = penalties.filter(t => t.team.id === team.id);\n    return p.length === 0 ? null : p;\n  }\n\n  openPenaltyDialog(penalties: Penalty.Fragment[]) {\n    console.log(penalties);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              \n                \n                  {{ pos.points }}\n                \n              \n              \n                \n                  {{ pos.points }}\n                    \n                      warning\n                    \n                \n              \n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})                                                {{ pos.points }}                                                                              {{ pos.points }}                                          warning                                                                                                    {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guest_team_id\n                                \n                                \n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createTeamQL: CreateTeamGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL, deleteTeamGQL: DeleteTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createTeamQL\n                                                  \n                                                        \n                                                                        CreateTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTeamGQL\n                                                  \n                                                        \n                                                                        DeleteTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:35\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \nrenameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CreateTeamGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment, DeleteTeamGQL } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private createTeamQL: CreateTeamGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL,\n    private deleteTeamGQL: DeleteTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  addNewTeam(teamName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        try {\n          await this.createTeamQL.mutate(\n            {\n              id: uuid(),\n              name: teamName\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  renameTeam(teamId: string, newName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.renameTeamGQL.mutate(\n            {\n              team_id: teamId,\n              new_name: newName\n            },\n            {\n              update: (store, { data }) => {\n                const team: any = store.readFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`,\n                    data: {\n                      __typename: 'Team',\n                      ...team,\n                      name: newName\n                    }\n                  }\n                );\n              },\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  deleteTeam(team: Team.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deleteTeamGQL.mutate(\n            {\n              team_id: team.id\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userQGL: UserGQL, authService: AuthenticationService, teamService: TeamService, updateTeamContact: UpdateTeamContactGQL, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { UpdateTeamContactGQL, UserGQL, Contact } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  user = this.authService.user;\n\n  constructor(\n    private userQGL: UserGQL,\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, contact: Contact.Fragment) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          ...contact\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('TEAM_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n                \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nexport const SELECTED_TOURNAMENT_KEY = 'SELECTED_TOURNAMENT';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private matchService: MatchService\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n    this.matchService.tournamentMatchUpdated.subscribe(\n      (event) => {\n        if (event.tournamentId === this.tournamentId) {\n          this.matchUpdated(event.matchId);\n        }\n      }\n    );\n  }\n\n  matchUpdated(matchId: string) {\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament && data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1694\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdatePitchContactGQL.html":{"url":"injectables/UpdatePitchContactGQL.html","title":"injectable - UpdatePitchContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdatePitchContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1200\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1358\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserGQL.html":{"url":"injectables/UpdateUserGQL.html","title":"injectable - UpdateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1487\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1708\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL, deleteUserGQL: DeleteUserGQL, notify: NotificationService, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteUserGQL\n                                                  \n                                                        \n                                                                        DeleteUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User, DeleteUserGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL,\n    private deleteUserGQL: DeleteUserGQL,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n  createNewUser() {\n    this.dialog.open(EditUserDialogComponent);\n  }\n\n  editUser(user: User.Fragment) {\n\n    this.dialog.open(EditUserDialogComponent, {\n      data: user\n    });\n  }\n\n  deleteUser(user: User.Fragment) {\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: user.email })\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.deleteUserGQL.mutate({\n              user_id: user.id\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.allUsersGQL.document\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_USER_SUCCESS', { user: user.email }));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_USER_ERROR'), error);\n          }\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{ 'USERNAME' | translate }}\n    \n    \n      {{ 'FIRST_NAME' | translate }} {{ 'LAST_NAME' | translate }}\n    \n    \n      {{ 'USER_ROLE' | translate }}\n    \n    \n      {{ 'TEAMS' | translate }}\n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ user.email }}\n    \n    \n      {{ user.first_name }} {{ user.last_name }}\n    \n    \n      {{ user.role }}\n    \n    \n      \n        \n          {{ team.name }}\n        \n      \n    \n    \n      \n        \n          edit\n        \n      \n      \n        \n          delete\n        \n      \n    \n  \n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              add                                {{ \\'USERNAME\\' | translate }}              {{ \\'FIRST_NAME\\' | translate }} {{ \\'LAST_NAME\\' | translate }}              {{ \\'USER_ROLE\\' | translate }}              {{ \\'TEAMS\\' | translate }}                                 {{ user.email }}              {{ user.first_name }} {{ user.last_name }}              {{ user.role }}                                {{ team.name }}                                              edit                                      delete                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CancelMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreatePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeletePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EndSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RescheduleMatchDayGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SeasonPenaltiesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdatePitchContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PenaltyFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            loadAppsettingsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managepitches/managepitches.component.ts\n            \n            component\n            ManagepitchesComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            component\n            EditRankingPenaltyComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            interface\n            EditRankingPenaltyComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n            \n            component\n            ManagePenaltyComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            variable\n            MANAGE_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/manageteams.component.ts\n            \n            component\n            ManageteamsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            component\n            EditTournamentRoundComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            variable\n            MANAGE_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n            \n            component\n            EditUserDialogComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            HIDE_PLAYED_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_MATCHDAY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_TEAM_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n            \n            component\n            CancelMatchDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            interface\n            ConfirmDialogComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            interface\n            ContactComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n            \n            component\n            CreatePitchDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-contact/edit-contact.component.ts\n            \n            component\n            EditContactComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n            \n            component\n            EditPitchContactDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            variable\n            SELECTED_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            injectable\n            AppsettingsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            interface\n            AppsettingsModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql.service.ts\n            \n            injectable\n            GraphqlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            variable\n            LANG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            variable\n            SELECTED_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-error : ^1.1.10\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-store : ^2.1.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            loadAppsettingsFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettingsFactory\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettingsFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    53 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nFix loading template on error\nImplement RankingPenalty Display\nRedesign Dialogs\nCleanup Code\nTesting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            HIDE_PLAYED_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            LANG_KEY   (src/.../i18.service.ts)\n                        \n                        \n                            MANAGE_SEASON_KEY   (src/.../manageseason.component.ts)\n                        \n                        \n                            MANAGE_TOURNAMENT_KEY   (src/.../managetournament.component.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PenaltyFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            SELECTED_MATCHDAY_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_SEASON_KEY   (src/.../season.service.ts)\n                        \n                        \n                            SELECTED_TEAM_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_TOURNAMENT_KEY   (src/.../tournament.component.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCESS_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACCESS_TOKEN'\n                        \n                    \n\n\n            \n        \n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PenaltyFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/matchplan/matchplan.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_PLAYED_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HIDE_PLAYED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_MATCHDAY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_MATCHDAY'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TEAM_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TEAM'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/i18.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANG_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LANG'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/manageseason/manageseason.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_SEASON_ID_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/managetournament/managetournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_TOURNAMENT_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/season.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_SEASON'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tournament/tournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TOURNAMENT'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
