var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,1.364,1,2.798]],["body/interfaces/AddMatchData.html",[0,1.917,1,4.455,2,0.151,3,0.151,4,0.134,5,3.173,6,0.469,7,1.029,8,4.772,9,4.772,10,3.087,11,0.698,12,0.015,13,1.851,14,0.274,15,3.026,16,2.521,17,1.31,18,0.252,19,1.405,20,0.761,21,0.151,22,5.439,23,2.805,24,1.576,25,4.29,26,4.29,27,1.039,28,2.357,29,2.12,30,4.861,31,2.37,32,2.37,33,2.37,34,2.94,35,2.238,36,2.94,37,1.604,38,1.604,39,0.182,40,1.039,41,0.962,42,3.528,43,1.039,44,3.528,45,0.085,46,0.926,47,0.962,48,3.528,49,3.528,50,1.705,51,1.831,52,3.173,53,3.528,54,3.932,55,3.528,56,0.566,57,1.166,58,2.12,59,1.418,60,1.259,61,2.521,62,1.538,63,3.173,64,3.173,65,2.697,66,3.173,67,1.08,68,1.08,69,4.861,70,1.259,71,2.908,72,3.173,73,1.252,74,3.528,75,3.528,76,3.528,77,3.528,78,3.528,79,3.528,80,4.77,81,3.204,82,4.77,83,4.77,84,4.29,85,3.528,86,3.646,87,3.528,88,2.37,89,3.528,90,3.528,91,2.015,92,3.528,93,3.528,94,4.77,95,3.528,96,4.77,97,3.528,98,3.528,99,3.528,100,2.908,101,2.697,102,1.362,103,3.528,104,3.932,105,3.528,106,0.01,107,0.01]],["title/components/AddteamComponent.html",[18,0.179,108,0.926]],["body/components/AddteamComponent.html",[2,0.152,3,0.152,4,0.135,6,0.47,7,1.03,11,0.792,12,0.015,13,1.655,14,0.205,18,0.32,19,1.041,21,0.152,28,2.923,29,2.124,39,0.135,40,2.085,41,1.931,43,1.406,45,0.085,46,0.927,56,0.766,57,1.166,72,4.295,106,0.01,107,0.01,108,1.58,109,1.123,110,1.123,111,1.123,112,3.533,113,1.123,114,1.518,115,5.504,116,5.504,117,0.989,118,4.775,119,3.533,120,1.032,121,4.073,122,0.989,123,1.059,124,0.949,125,4.295,126,4.073,127,3.178,128,0.593,129,0.927,130,4.073,131,4.073,132,3.412,133,5.504,134,1.919,135,0.762,136,1.518,137,1.518,138,1.518,139,1.842,140,1.123,141,1.123,142,1.123,143,0.927,144,1.123,145,0.964,146,1.123,147,0.964,148,1.123,149,0.964,150,1.123,151,0.964,152,1.081,153,1.123,154,0.927,155,1.123,156,0.964,157,1.123,158,0.964,159,1.123,160,0.964,161,1.123,162,0.964,163,1.123,164,1.001,165,1.123,166,0.964,167,1.123,168,0.964,169,1.123,170,0.964,171,1.123,172,0.927,173,1.123,174,0.927,175,1.123,176,0.964,177,1.123,178,0.964,179,1.123,180,0.892,181,1.123,182,0.927,183,1.123,184,0.927,185,1.123,186,0.964,187,1.123,188,0.927,189,1.001,190,1.123]],["title/components/AddtournamentroundComponent.html",[18,0.179,46,0.891]],["body/components/AddtournamentroundComponent.html",[0,0.884,1,4.363,2,0.094,3,0.094,4,0.084,5,1.979,6,0.293,7,0.731,8,3.405,9,1.814,10,1.257,11,0.913,12,0.015,13,1.687,14,0.237,15,3.357,16,1.572,17,0.817,18,0.265,19,1.217,20,0.731,21,0.094,22,5.252,23,2.955,24,1.533,25,3.047,26,3.047,27,0.648,28,2.685,29,1.322,30,4.959,31,1.478,32,1.478,33,1.478,34,2.999,35,1.395,36,2.999,37,1,38,1,39,0.129,40,1.995,41,1.848,42,3.388,43,0.998,44,3.388,45,0.053,46,1.218,47,0.924,48,4.64,49,4.64,50,1.476,51,1.758,52,4.174,53,4.64,54,4.363,55,4.64,56,0.544,57,1.259,58,3.012,59,1.084,60,1.475,61,1.572,62,2.308,63,1.979,64,1.979,65,1.682,66,1.979,67,1.264,68,1.42,69,3.716,70,0.785,71,1.814,72,4.174,73,0.889,74,2.2,75,2.2,76,2.2,77,2.2,78,2.2,79,2.2,80,3.388,81,2.275,82,3.388,83,3.388,84,3.047,85,3.388,86,2.589,87,2.2,88,1.478,89,3.388,90,4.64,91,1.257,92,2.2,93,2.2,94,3.388,95,2.2,96,3.388,97,2.2,98,2.2,99,2.2,100,1.814,101,1.682,102,0.85,103,3.388,104,2.793,105,3.388,106,0.007,107,0.007,108,0.6,109,0.699,110,0.699,111,0.699,113,0.699,117,0.702,120,1.225,122,0.961,123,0.968,124,0.923,128,0.888,129,1.315,132,3.315,134,2.475,135,0.474,136,1.077,137,1.077,138,1.077,139,1.475,140,0.699,141,0.699,142,0.699,143,0.577,144,0.699,145,0.6,146,0.699,147,0.6,148,0.699,149,0.6,150,0.699,151,0.6,152,0.673,153,0.699,154,0.577,155,0.699,156,0.6,157,0.699,158,0.6,159,0.699,160,0.6,161,0.699,162,0.6,163,0.699,164,0.624,165,0.699,166,0.6,167,0.699,168,0.6,169,0.699,170,0.6,171,0.699,172,0.577,173,0.699,174,0.577,175,0.699,176,0.6,177,0.699,178,0.6,179,0.699,180,0.555,181,0.699,182,0.577,183,0.699,184,0.577,185,0.699,186,0.6,187,0.699,188,0.577,189,0.624,190,0.699,191,3.905,192,3.905,193,3.905,194,2.2,195,3.905,196,2.536,197,2.536,198,2.536,199,2.536,200,2.536,201,2.589,202,2.536,203,1.572,204,2.536,205,2.536,206,2.536,207,2.536,208,2.536,209,2.536,210,1.142,211,1,212,2.536,213,2.536,214,3.905,215,3.905,216,3.905,217,3.905,218,3.905,219,4.64,220,3.905,221,3.905]],["title/components/AdminComponent.html",[18,0.179,143,0.891]],["body/components/AdminComponent.html",[2,0.162,3,0.162,4,0.144,6,0.503,12,0.015,14,0.214,18,0.327,19,1.648,21,0.162,28,1.648,29,2.272,39,0.144,40,2.095,41,1.94,43,1.471,45,0.091,46,0.992,47,1.363,56,0.898,68,1.821,106,0.011,107,0.011,108,1.031,109,1.202,110,1.202,111,1.202,113,1.202,114,1.588,117,1.035,120,0.953,123,0.914,128,0.634,129,0.992,135,0.815,136,1.588,137,1.588,138,1.588,139,1.892,140,1.202,141,1.202,142,1.202,143,1.562,144,1.202,145,1.031,146,1.202,147,1.031,148,1.202,149,1.031,150,1.202,151,1.031,152,1.157,153,1.202,154,0.992,155,1.202,156,1.031,157,1.202,158,1.031,159,1.202,160,1.031,161,1.202,162,1.031,163,1.202,164,1.071,165,1.202,166,1.031,167,1.202,168,1.031,169,1.202,170,1.031,171,1.202,172,0.992,173,1.202,174,0.992,175,1.202,176,1.031,177,1.202,178,1.031,179,1.202,180,0.954,181,1.202,182,0.992,183,1.202,184,0.992,185,1.202,186,1.031,187,1.202,188,0.992,189,1.071,190,1.202,222,3.78,223,4.118,224,5.758,225,5.758,226,4.357,227,4.357]],["title/guards/AdminGuard.html",[228,2.595,229,3.053]],["body/guards/AdminGuard.html",[2,0.2,3,0.2,4,0.178,6,0.62,11,0.683,12,0.015,14,0.265,20,1.232,21,0.2,39,0.178,45,0.112,47,1.272,56,0.916,59,1.224,106,0.012,107,0.012,117,1.183,120,1.177,122,0.966,123,0.853,124,0.927,128,1.079,228,3.565,229,5.136,230,5.376,231,6.04,232,6.04,233,3.565,234,3.053,235,5.376,236,3.622,237,5.376,238,5.376,239,2.121,240,2.803,241,2.314,242,2.214,243,6.582]],["title/modules/AdminModule.html",[244,0.545,245,2.798]],["body/modules/AdminModule.html",[2,0.174,3,0.174,4,0.155,12,0.015,14,0.294,21,0.174,39,0.199,45,0.098,46,1.754,106,0.011,107,0.011,108,1.768,135,0.875,143,1.701,164,1.837,166,1.768,168,1.768,223,3.344,244,0.839,245,5.831,246,2.106,247,3.005,248,2.207,249,2.106,250,4.057,251,4.057,252,4.057,253,4.955,254,3.526,255,2.988,256,2.317,257,2.317,258,4.676,259,4.705,260,2.02,261,4.057,262,2.573,263,2.725,264,4.676,265,4.676,266,4.676,267,4.676,268,4.676]],["title/modules/AdminRoutingModule.html",[244,0.545,253,2.595]],["body/modules/AdminRoutingModule.html",[2,0.215,3,0.215,4,0.191,12,0.015,14,0.283,18,0.265,21,0.215,39,0.191,45,0.121,73,1.316,106,0.013,107,0.013,143,1.566,239,2.28,244,0.805,253,4.56,260,2.304,261,5.014,269,5.779,270,3.18,271,3.464,272,3.18,273,3.18,274,3.368]],["title/components/AppComponent.html",[18,0.179,145,0.926]],["body/components/AppComponent.html",[2,0.156,3,0.104,4,0.092,6,0.321,7,0.784,11,0.834,12,0.015,13,1.339,14,0.27,17,0.896,18,0.276,19,1.288,21,0.104,34,3.421,35,1.532,36,3.098,37,1.098,38,1.098,39,0.092,40,2.015,41,1.866,43,1.071,45,0.058,46,0.634,47,0.992,56,0.584,57,1.397,59,1.148,62,1.586,65,1.846,67,1.339,68,1.49,70,0.862,73,0.955,106,0.008,107,0.008,108,0.659,109,0.768,110,0.768,111,0.768,113,0.768,114,1.156,117,0.753,120,1.184,122,0.753,123,0.89,124,0.723,128,0.876,129,1.278,134,2.206,135,0.521,136,1.156,137,1.156,138,1.156,139,1.548,140,0.768,141,0.768,142,0.768,143,0.634,144,0.768,145,1.328,146,0.768,147,0.992,148,0.768,149,0.659,150,0.768,151,0.659,152,0.739,153,0.768,154,0.634,155,0.768,156,0.659,157,0.768,158,0.659,159,0.768,160,0.659,161,0.768,162,0.992,163,0.768,164,0.684,165,0.768,166,0.659,167,0.768,168,0.659,169,0.768,170,0.659,171,0.768,172,0.634,173,0.768,174,0.634,175,0.768,176,0.659,177,0.768,178,0.659,179,0.768,180,0.918,181,0.768,182,0.634,183,0.768,184,0.634,185,0.768,186,0.659,187,0.768,188,0.634,189,0.684,190,0.768,234,2.605,236,3.481,240,1.452,242,1.726,275,2.415,276,4.192,277,4.192,278,3.937,279,3.481,280,4.224,281,5.612,282,4.192,283,5.612,284,5.612,285,1.991,286,2.956,287,3.921,288,3.935,289,4.379,290,2.784,291,2.784,292,2.784,293,4.192,294,2.784,295,2.784,296,2.784,297,2.784,298,2.784,299,2.784,300,2.784,301,2.784,302,2.784,303,1.846,304,2.415,305,2.415,306,1.846,307,2.415,308,2.172,309,1.622,310,2.172,311,2.784,312,2.415,313,2.415,314,2.172,315,1.725,316,1.379,317,2.784,318,2.784,319,2.784,320,2.784,321,2.784,322,1.725,323,2.598,324,2.784,325,2.784,326,4.192,327,2.784,328,2.784,329,2.784,330,2.784,331,2.784,332,2.784,333,2.784,334,2.784,335,2.784,336,2.784,337,2.784,338,2.784,339,2.784,340,4.192,341,4.192,342,4.192,343,4.192,344,4.192,345,4.192,346,3.637,347,4.192,348,4.192,349,3.637,350,4.192,351,4.192,352,4.192,353,4.192,354,4.192]],["title/modules/AppCoreModule.html",[244,0.545,355,2.425]],["body/modules/AppCoreModule.html",[2,0.213,3,0.213,4,0.189,12,0.015,14,0.288,21,0.213,31,3.338,32,3.338,33,3.338,37,2.26,38,2.26,39,0.189,45,0.12,106,0.013,107,0.013,244,0.798,249,3.08,260,2.291,355,4.24,356,4.97,357,5.729,358,5.934,359,4.892,360,5.729,361,4.47,362,5.729,363,4.97]],["title/modules/AppModule.html",[244,0.545,364,2.798]],["body/modules/AppModule.html",[2,0.125,3,0.125,4,0.111,12,0.015,14,0.299,17,1.079,21,0.125,27,0.856,28,2.124,29,1.746,34,2.65,35,1.843,37,1.321,38,1.321,39,0.23,41,1.137,45,0.07,106,0.009,107,0.009,128,0.945,135,0.627,145,1.781,147,1.685,162,1.685,180,1.23,244,0.669,246,1.508,247,2.529,248,2.65,249,3.354,255,2.38,256,1.66,257,1.66,259,3.748,260,1.609,262,1.843,278,3.09,280,3.272,303,2.221,304,2.906,305,2.906,306,2.221,308,2.613,310,2.613,355,2.076,361,2.613,363,2.906,364,5.567,365,2.906,366,2.906,367,2.906,368,2.906,369,2.906,370,4.482,371,4.189,372,4.833,373,2.613,374,4.803,375,4.167,376,2.613,377,5.274,378,4.803,379,3.349,380,3.349,381,4.803,382,2.906,383,2.906,384,2.906,385,4.803,386,4.803,387,2.221,388,3.349,389,4.167,390,4.167,391,1.746,392,2.928,393,2.613,394,3.349,395,1.843,396,3.349,397,3.349,398,4.803,399,2.977,400,3.349,401,2.906,402,3.349,403,4.644,404,2.906,405,3.349,406,2.906,407,3.349,408,2.906,409,3.349,410,2.906,411,4.803,412,2.906,413,3.349,414,6.494,415,2.613,416,6.494,417,6.758,418,4.189,419,2.613,420,2.613,421,2.613,422,4.803,423,2.906,424,3.349,425,3.349,426,2.613]],["title/modules/AppRoutingModule.html",[244,0.545,370,2.595]],["body/modules/AppRoutingModule.html",[2,0.188,3,0.188,4,0.167,12,0.015,14,0.278,21,0.188,39,0.229,45,0.105,73,1.149,106,0.012,107,0.012,152,1.339,189,1.241,223,3.608,229,5.395,231,5.395,232,5.395,239,1.99,244,0.702,260,2.12,270,2.776,271,2.986,272,3.482,273,4.303,356,4.377,370,4.196,427,5.045,428,5.827,429,5.045,430,5.045,431,5.045,432,4.938,433,5.045,434,4.377,435,3.608,436,7.732,437,5.045,438,5.045,439,5.045,440,2.776,441,5.045,442,5.045,443,5.045,444,3.937,445,5.045,446,5.045]],["title/interceptors/AuthInterceptor.html",[372,2.798,447,3.394]],["body/interceptors/AuthInterceptor.html",[2,0.19,3,0.19,4,0.169,6,0.589,11,0.81,12,0.015,14,0.271,20,1.193,21,0.19,39,0.169,45,0.107,47,1.208,56,0.711,57,1.301,106,0.012,107,0.012,117,1.145,120,1.055,122,1.145,123,1.011,124,1.1,128,1.06,233,3.385,234,2.998,236,3.508,240,2.661,312,5.53,372,4.559,387,3.385,447,4.428,448,5.104,449,6.374,450,5.104,451,6.374,452,7.28,453,4.609,454,7.28,455,5.104,456,5.104,457,4.308,458,6.374,459,5.104,460,2.661,461,3.164,462,5.104,463,6.374,464,5.104,465,3.385,466,5.104,467,5.104]],["title/injectables/AuthenticationService.html",[20,0.732,234,1.611]],["body/injectables/AuthenticationService.html",[0,1.022,2,0.109,3,0.109,4,0.097,6,0.338,7,0.815,11,0.819,12,0.015,13,1.966,14,0.229,20,1.077,21,0.109,24,1.65,27,0.749,39,0.144,45,0.091,50,1.647,56,0.606,57,1.335,59,1.311,60,1.349,62,1.108,67,1.894,70,0.907,73,1.401,88,1.707,91,1.452,102,0.982,106,0.008,107,0.008,117,0.783,120,1.213,122,1.106,123,0.976,124,1.152,128,1.088,129,0.992,211,1.156,234,1.794,239,1.156,241,1.261,242,1.207,387,1.943,399,1.816,440,3.168,457,1.816,465,4.648,468,2.095,469,4.73,470,3.779,471,4.356,472,4.492,473,4.356,474,4.492,475,4.356,476,2.538,477,4.057,478,4.057,479,4.057,480,4.057,481,1.612,482,5.21,483,5.21,484,4.057,485,2.93,486,1.816,487,3.399,488,2.93,489,3.115,490,3.473,491,3.399,492,2.93,493,2.271,494,2.93,495,3.399,496,3.818,497,2.93,498,2.286,499,2.93,500,3.399,501,4.08,502,2.93,503,2.93,504,2.93,505,2.93,506,2.93,507,2.93,508,2.93,509,2.93,510,2.93,511,2.93,512,4.057,513,1.943,514,2.889,515,3.115,516,2.095,517,3.115,518,1.816,519,2.095,520,3.718,521,2.286,522,1.707,523,3.399,524,2.286,525,2.286,526,1.961,527,1.261,528,5.21,529,2.286,530,2.286,531,2.711,532,4.492,533,2.286,534,2.286,535,3.399,536,3.399,537,2.286,538,2.286,539,3.718,540,2.7,541,2.286,542,1.943,543,2.286,544,1.943,545,2.286,546,2.286,547,2.286,548,2.286,549,2.286,550,3.448,551,2.889,552,3.399,553,1.707,554,2.286,555,2.286,556,2.286,557,1.707,558,2.286,559,2.286,560,3.399,561,2.286,562,2.7,563,2.286,564,2.286,565,2.286,566,2.286,567,2.286,568,2.286,569,2.286,570,2.286,571,2.095,572,2.286,573,2.286]],["title/interfaces/CacheTeamsInSeason.html",[0,1.364,574,2.798]],["body/interfaces/CacheTeamsInSeason.html",[0,1.53,2,0.11,3,0.11,4,0.098,6,0.341,7,0.821,11,0.664,12,0.015,13,1.97,14,0.163,20,0.821,21,0.11,23,3.622,24,1.258,27,1.336,28,2.705,39,0.145,45,0.092,50,1.758,51,1.333,56,0.412,57,1.211,59,0.674,60,0.917,67,1.718,70,1.359,73,1.191,81,2.557,86,3.837,102,1.938,106,0.008,107,0.008,125,2.309,127,4.081,128,1.113,241,1.274,242,1.219,377,2.309,490,3.595,493,2.727,522,1.725,526,1.976,531,3.017,550,2.91,551,1.963,553,2.557,557,3.048,574,4.138,575,2.309,576,5.484,577,4.081,578,4.097,579,2.568,580,2.568,581,2.568,582,2.568,583,3.807,584,4.538,585,5.969,586,2.568,587,3.807,588,1.725,589,2.568,590,2.568,591,3.807,592,3.807,593,2.568,594,4.821,595,3.586,596,2.568,597,3.807,598,2.568,599,2.568,600,2.568,601,2.117,602,2.309,603,2.568,604,3.807,605,2.568,606,2.568,607,2.568,608,2.568,609,3.807,610,2.568,611,3.425,612,2.568,613,2.568,614,2.568,615,3.807,616,3.469,617,4.081,618,4.081,619,4.292,620,2.568,621,1.725,622,5.615,623,2.568,624,2.568,625,2.568,626,2.568,627,2.568,628,3.807,629,2.568,630,2.568,631,2.568,632,2.568,633,2.568,634,2.568,635,2.309,636,2.568]],["title/components/ChangepasswordComponent.html",[18,0.179,147,0.926]],["body/components/ChangepasswordComponent.html",[2,0.129,3,0.129,4,0.114,6,0.399,7,0.919,11,0.835,12,0.015,14,0.232,15,3.758,17,1.113,18,0.301,19,1.46,21,0.129,39,0.114,40,2.057,41,1.905,43,1.255,45,0.072,46,0.787,47,1.162,50,1.255,56,0.684,57,1.069,58,3.561,59,0.787,67,1.517,68,1.652,70,1.07,106,0.009,107,0.009,108,0.818,109,0.953,110,0.953,111,0.953,113,0.953,114,1.355,117,0.882,120,1.163,122,0.621,123,0.906,124,0.596,128,0.715,129,0.787,134,2.503,135,0.646,136,1.355,137,1.355,138,1.355,139,1.716,140,0.953,141,0.953,142,0.953,143,0.787,144,0.953,145,0.818,146,0.953,147,1.472,148,0.953,149,0.818,150,0.953,151,0.818,152,0.917,153,0.953,154,0.787,155,0.953,156,0.818,157,0.953,158,0.818,159,0.953,160,0.818,161,0.953,162,0.818,163,0.953,164,0.85,165,0.953,166,0.818,167,0.953,168,0.818,169,0.953,170,0.818,171,0.953,172,0.787,173,0.953,174,0.787,175,0.953,176,0.818,177,0.953,178,0.818,179,0.953,180,0.757,181,0.953,182,0.787,183,0.953,184,0.787,185,0.953,186,0.818,187,0.953,188,0.787,189,0.85,190,0.953,233,2.291,234,2.562,236,2.702,240,1.802,391,1.802,418,2.142,440,3.424,470,5.924,489,4.449,527,2.459,562,2.142,637,2.998,638,4.911,639,4.911,640,6.221,641,4.911,642,3.455,643,3.455,644,3.455,645,5.224,646,3.455,647,3.455,648,2.142,649,3.455,650,3.044,651,2.998,652,3.455,653,3.455,654,3.455,655,4.911,656,2.998,657,2.998,658,5.397,659,5.397,660,4.26,661,4.26]],["title/components/ContactComponent.html",[18,0.179,149,0.926]],["body/components/ContactComponent.html",[2,0.135,3,0.135,4,0.12,6,0.42,7,0.953,11,0.808,12,0.015,13,1.779,14,0.219,15,3.821,16,2.255,17,1.171,18,0.307,19,1.501,20,0.953,21,0.135,23,3.328,24,1.825,27,0.929,39,0.12,40,2.066,41,1.914,43,1.301,45,0.076,46,0.828,47,1.205,50,1.301,51,2.293,56,0.709,57,1.383,58,3.494,59,0.828,60,1.82,61,2.255,68,1.69,73,0.828,106,0.009,107,0.009,108,0.861,109,1.003,110,1.003,111,1.003,113,1.003,114,1.405,117,0.915,120,1.109,122,0.654,123,0.932,124,0.627,128,0.529,129,0.828,132,3.156,134,2.219,135,0.681,136,1.405,137,1.405,138,1.405,139,1.756,140,1.003,141,1.003,142,1.003,143,0.828,144,1.003,145,0.861,146,1.003,147,0.861,148,1.003,149,1.506,150,1.003,151,0.861,152,1.779,153,1.003,154,0.828,155,1.003,156,0.861,157,1.003,158,0.861,159,1.003,160,0.861,161,1.003,162,0.861,163,1.003,164,0.894,165,1.003,166,0.861,167,1.003,168,0.861,169,1.003,170,0.861,171,1.003,172,0.828,173,1.003,174,0.828,175,1.003,176,0.861,177,1.003,178,0.861,179,1.003,180,0.797,181,1.003,182,0.828,183,1.003,184,0.828,185,1.003,186,0.861,187,1.003,188,0.828,189,0.894,190,1.003,194,3.156,203,2.255,210,1.638,211,1.435,493,3.717,635,2.838,662,3.156,663,5.092,664,5.092,665,5.092,666,3.637,667,3.637,668,3.637,669,3.637,670,3.156,671,5.092]],["title/components/ContactPersonComponent.html",[18,0.179,151,0.926]],["body/components/ContactPersonComponent.html",[2,0.153,3,0.153,4,0.135,6,0.473,11,0.521,12,0.015,14,0.206,18,0.32,19,1.598,21,0.153,27,1.047,39,0.135,40,2.085,41,1.932,43,1.412,45,0.086,46,0.933,47,1.308,56,0.871,68,1.777,106,0.01,107,0.01,108,0.97,109,1.13,110,1.13,111,1.13,113,1.13,114,1.525,117,0.993,120,1.035,123,0.877,128,0.596,129,0.933,135,0.767,136,1.525,137,1.525,138,1.525,139,1.847,140,1.13,141,1.13,142,1.13,143,0.933,144,1.13,145,0.97,146,1.13,147,0.97,148,1.13,149,0.97,150,1.13,151,1.584,152,2.035,153,1.13,154,0.933,155,1.13,156,0.97,157,1.13,158,0.97,159,1.13,160,0.97,161,1.13,162,0.97,163,1.13,164,1.008,165,1.13,166,0.97,167,1.13,168,0.97,169,1.13,170,0.97,171,1.13,172,0.933,173,1.13,174,0.933,175,1.13,176,0.97,177,1.13,178,0.97,179,1.13,180,0.898,181,1.13,182,0.933,183,1.13,184,0.933,185,1.13,186,0.97,187,1.13,188,0.933,189,1.008,190,1.13,349,4.795,578,4.147,672,5.808,673,5.224,674,3.555,675,5.527,676,5.527,677,5.224,678,5.527,679,4.098,680,5.527,681,5.527,682,5.527,683,5.527,684,5.527,685,5.527]],["title/components/ContactlistComponent.html",[18,0.179,154,0.891]],["body/components/ContactlistComponent.html",[2,0.164,3,0.164,4,0.145,6,0.508,12,0.015,14,0.164,18,0.328,19,1.656,21,0.164,39,0.145,40,2.096,41,1.941,43,1.481,45,0.092,46,1.002,47,1.372,56,0.902,68,1.829,106,0.011,107,0.011,108,1.041,109,1.214,110,1.214,111,1.214,113,1.214,114,1.599,117,1.042,120,0.959,123,0.92,128,0.641,129,1.002,135,0.823,136,1.599,137,1.599,138,1.599,139,1.9,140,1.214,141,1.214,142,1.214,143,1.002,144,1.214,145,1.041,146,1.214,147,1.041,148,1.214,149,1.041,150,1.214,151,1.041,152,1.168,153,1.214,154,1.568,155,1.214,156,1.041,157,1.214,158,1.041,159,1.214,160,1.041,161,1.214,162,1.041,163,1.214,164,1.082,165,1.214,166,1.041,167,1.214,168,1.041,169,1.214,170,1.041,171,1.214,172,1.002,173,1.214,174,1.002,175,1.214,176,1.041,177,1.214,178,1.041,179,1.214,180,0.964,181,1.214,182,1.002,183,1.214,184,1.002,185,1.214,186,1.041,187,1.214,188,1.002,189,1.082,190,1.214,686,3.818,687,5.028,688,5.796,689,5.796,690,4.401,691,4.401]],["title/modules/ContactlistModule.html",[244,0.545,692,2.798]],["body/modules/ContactlistModule.html",[2,0.189,3,0.189,4,0.168,12,0.015,14,0.292,21,0.189,39,0.21,45,0.106,106,0.012,107,0.012,135,0.951,154,1.738,176,1.807,186,1.807,244,0.885,246,2.289,247,3.124,248,2.399,249,2.289,254,3.603,255,3.151,256,2.519,257,2.519,260,2.13,262,2.798,263,2.963,687,4.411,692,5.792,693,4.411,694,4.411,695,4.411,696,5.063,697,5.084,698,4.411,699,3.151,700,5.084]],["title/modules/ContactlistRoutingModule.html",[244,0.545,696,2.595]],["body/modules/ContactlistRoutingModule.html",[2,0.215,3,0.215,4,0.191,12,0.015,14,0.283,18,0.265,21,0.215,39,0.191,45,0.121,73,1.316,106,0.013,107,0.013,154,1.566,239,2.28,244,0.805,260,2.304,270,3.18,271,3.464,272,3.18,273,3.18,274,3.368,696,4.56,698,5.014,701,5.779]],["title/classes/Credentials.html",[45,0.082,501,2.595]],["body/classes/Credentials.html",[0,1.189,2,0.127,3,0.127,4,0.113,6,0.393,7,0.91,11,0.72,12,0.015,13,1.984,14,0.244,20,1.061,21,0.127,24,1.395,27,0.871,39,0.161,45,0.119,50,1.737,56,0.677,57,1.339,59,1.408,60,1.056,62,1.29,67,1.642,70,1.056,73,1.489,88,1.987,91,1.69,102,1.143,106,0.009,107,0.009,120,0.805,122,0.613,123,0.541,124,0.978,128,1.041,234,1.404,239,1.345,241,1.468,242,1.404,387,2.261,399,2.114,440,2.677,457,2.114,465,4.829,468,2.439,469,4.337,472,2.661,474,2.661,477,2.661,478,2.661,479,2.661,480,2.661,482,4.426,483,4.426,484,2.661,487,2.661,489,2.439,490,3.369,491,2.661,493,1.778,495,2.661,496,3.226,500,2.661,501,4.101,512,4.426,513,2.261,514,3.226,515,3.48,516,2.439,517,3.48,518,2.114,519,2.439,520,5.005,521,2.661,522,1.987,523,3.797,524,2.661,525,2.661,526,2.191,527,1.468,528,5.461,529,2.661,530,2.661,531,2.958,532,4.826,533,2.661,534,2.661,535,3.797,536,3.797,537,2.661,538,2.661,539,4.056,540,3.016,541,2.661,542,2.261,543,2.661,544,2.261,545,2.661,546,2.661,547,2.661,548,2.661,549,2.661,550,3.761,551,3.226,552,3.797,553,1.987,554,2.661,555,2.661,556,2.661,557,1.987,558,2.661,559,2.661,560,3.797,561,2.661,562,3.016,563,2.661,564,2.661,565,2.661,566,2.661,567,2.661,568,2.661,569,2.661,570,2.661,571,2.439,572,2.661,573,2.661,702,3.41,703,3.41,704,3.41]],["title/injectables/CustomOwlDateTimeIntl.html",[20,0.732,359,2.798]],["body/injectables/CustomOwlDateTimeIntl.html",[2,0.205,3,0.205,4,0.182,11,0.7,12,0.015,14,0.268,20,1.346,21,0.205,31,3.212,32,3.212,33,3.212,36,3.529,37,2.175,38,2.175,39,0.182,45,0.115,56,0.767,106,0.012,107,0.012,120,0.912,122,0.99,123,0.875,124,0.951,358,5.798,359,4.779,461,3.416,705,4.782,706,5.512,707,5.512,708,6.683,709,4.782,710,5.512,711,5.512,712,6.683,713,5.512,714,5.512,715,6.683,716,5.512]],["title/components/EditmatchPitchComponent.html",[18,0.179,156,0.926]],["body/components/EditmatchPitchComponent.html",[2,0.079,3,0.079,4,0.07,6,0.245,7,0.635,11,0.898,12,0.015,13,1.502,14,0.243,15,2.668,16,1.315,17,0.683,18,0.243,19,1.084,20,0.635,21,0.079,24,1.39,39,0.07,40,1.951,41,1.807,43,0.867,45,0.044,46,0.483,47,0.803,50,1.577,56,0.472,57,0.794,58,2.212,59,1.288,60,1.314,61,1.315,62,0.803,67,0.563,68,1.287,73,1.104,91,1.682,100,1.517,101,1.407,102,0.711,106,0.006,107,0.011,108,0.502,109,0.585,110,0.585,111,0.585,113,0.585,114,0.936,117,0.61,120,1.213,122,0.871,123,0.898,124,0.836,128,0.95,129,1.288,134,2.604,135,0.397,136,0.936,137,0.936,138,0.936,139,1.338,140,0.585,141,0.585,142,0.585,143,0.483,144,0.585,145,0.502,146,0.585,147,0.502,148,0.585,149,0.502,150,0.585,151,0.502,152,0.563,153,0.585,154,0.483,155,0.585,156,1.147,157,0.585,158,0.502,159,0.585,160,0.502,161,0.585,162,0.502,163,0.585,164,0.522,165,0.585,166,0.502,167,0.585,168,0.502,169,0.585,170,0.502,171,0.585,172,0.483,173,0.585,174,0.483,175,0.585,176,0.502,177,0.585,178,0.502,179,0.585,180,0.465,181,0.585,182,0.483,183,0.585,184,0.483,185,0.585,186,0.502,187,0.585,188,0.483,189,0.522,190,0.585,203,2.104,210,1.528,211,1.913,280,3.461,391,1.106,392,3.097,393,1.655,418,1.315,457,3.005,460,1.106,486,1.315,527,2.435,619,1.407,645,4.668,648,1.315,650,2.104,699,4.602,717,1.84,718,3.394,719,3.394,720,3.394,721,4.849,722,4.849,723,4.849,724,4.849,725,4.849,726,4.849,727,4.849,728,5.303,729,4.849,730,4.849,731,4.849,732,3.394,733,3.394,734,3.394,735,3.784,736,4.849,737,1.655,738,2.67,739,4.243,740,4.849,741,4.635,742,3.394,743,2.121,744,2.121,745,3.394,746,2.121,747,2.63,748,3.394,749,2.121,750,2.121,751,2.121,752,3.394,753,2.121,754,2.121,755,2.121,756,3.394,757,2.121,758,2.121,759,2.121,760,2.121,761,2.121,762,2.121,763,3.784,764,2.121,765,4.243,766,2.121,767,2.121,768,1.236,769,3.681,770,3.681,771,1.655,772,3.394,773,2.121,774,1.84,775,1.655,776,1.655,777,2.121,778,2.121,779,2.121,780,2.121,781,1.655,782,2.121,783,2.121,784,2.121,785,2.121,786,2.121,787,2.121,788,1.517,789,2.121,790,2.121,791,2.121,792,2.121,793,2.121,794,2.121,795,3.681,796,2.121,797,2.121,798,2.121,799,2.121,800,2.121,801,2.121,802,2.121,803,2.121,804,2.121,805,2.121,806,4.243,807,2.121,808,4.243,809,2.121,810,2.121,811,3.394,812,2.121,813,2.121,814,2.121,815,3.394,816,2.121,817,2.121,818,2.121,819,1.84,820,1.84,821,1.84,822,2.121,823,2.121,824,2.121,825,2.121,826,2.121,827,2.121,828,2.427,829,2.427,830,2.944,831,2.944,832,3.394,833,2.944,834,3.784,835,3.394,836,3.394,837,4.849,838,3.394,839,3.394,840,3.394,841,3.394,842,3.394,843,3.394,844,3.394,845,2.648,846,2.427]],["title/components/EditmatchResultComponent.html",[18,0.179,158,0.926]],["body/components/EditmatchResultComponent.html",[2,0.131,3,0.131,4,0.117,6,0.407,7,0.932,10,3.406,11,0.797,12,0.015,14,0.234,15,3.454,16,2.185,17,1.135,18,0.303,19,1.476,20,0.932,21,0.131,39,0.117,40,2.061,41,1.909,43,1.273,45,0.074,46,0.803,47,1.179,56,0.693,57,1.081,58,3.012,59,1.134,61,2.185,67,1.533,68,1.666,101,2.338,102,1.181,106,0.009,107,0.013,108,0.834,109,0.972,110,0.972,111,0.972,113,0.972,114,1.374,117,0.895,120,1.138,122,0.633,123,0.916,124,0.608,128,0.725,129,0.803,134,2.189,135,0.66,136,1.374,137,1.374,138,1.374,139,1.732,140,0.972,141,0.972,142,0.972,143,0.803,144,0.972,145,0.834,146,0.972,147,0.834,148,0.972,149,0.834,150,0.972,151,0.834,152,0.936,153,0.972,154,0.803,155,0.972,156,0.834,157,0.972,158,1.485,159,0.972,160,0.834,161,0.972,162,0.834,163,0.972,164,0.867,165,0.972,166,0.834,167,0.972,168,0.834,169,0.972,170,0.834,171,0.972,172,0.803,173,0.972,174,0.803,175,0.972,176,0.834,177,0.972,178,0.834,179,0.972,180,0.772,181,0.972,182,0.803,183,0.972,184,0.803,185,0.972,186,0.834,187,0.972,188,0.803,189,0.867,190,0.972,203,2.185,286,3.182,309,2.054,677,2.751,735,4.898,737,2.751,738,3.244,768,2.054,828,3.562,829,3.562,845,3.887,846,3.562,847,3.058,848,4.981,849,4.981,850,4.981,851,5.446,852,5.446,853,4.981,854,3.525,855,3.525,856,3.525,857,3.525,858,4.981,859,3.525,860,4.981,861,3.525,862,3.525,863,3.525,864,3.525,865,2.521,866,3.525]],["title/components/EditmatchTimeComponent.html",[18,0.179,160,0.926]],["body/components/EditmatchTimeComponent.html",[2,0.116,3,0.116,4,0.103,6,0.358,7,0.85,11,0.8,12,0.015,14,0.253,15,3.257,16,1.924,17,0.999,18,0.289,19,1.374,20,0.85,21,0.116,24,1.697,27,0.793,30,5.307,31,1.808,32,1.808,33,1.808,34,3.499,35,1.708,36,3.209,37,1.224,38,1.224,39,0.103,40,2.037,41,1.887,43,1.161,45,0.065,46,0.707,47,1.075,54,3.846,56,0.633,57,1.232,58,2.804,59,1.224,60,1.665,61,1.924,63,2.422,64,2.422,65,2.058,66,2.422,68,1.571,88,1.808,101,2.058,104,2.219,106,0.008,107,0.012,108,0.734,109,0.856,110,0.856,111,0.856,113,0.856,114,1.254,117,0.817,120,1.125,122,0.817,123,0.939,124,0.784,128,0.783,129,1.224,134,2.521,135,0.581,136,1.254,137,1.254,138,1.254,139,1.633,140,0.856,141,0.856,142,0.856,143,0.707,144,0.856,145,0.734,146,0.856,147,0.734,148,0.856,149,0.734,150,0.856,151,0.734,152,0.824,153,0.856,154,0.707,155,0.856,156,0.734,157,0.856,158,0.734,159,0.856,160,1.401,161,0.856,162,0.734,163,0.856,164,0.763,165,0.856,166,0.734,167,0.856,168,0.734,169,0.856,170,0.734,171,0.856,172,0.707,173,0.856,174,0.707,175,0.856,176,0.734,177,0.856,178,0.734,179,0.856,180,0.68,181,0.856,182,0.707,183,0.856,184,0.707,185,0.856,186,0.734,187,0.856,188,0.707,189,0.763,190,0.856,201,2.058,203,1.924,219,3.943,540,1.924,735,4.619,737,2.422,738,3.107,828,3.25,829,3.25,845,3.546,846,3.25,867,2.692,868,4.545,869,4.545,870,4.545,871,6.583,872,4.545,873,4.545,874,4.545,875,3.103,876,3.103,877,3.103,878,3.103,879,3.103,880,3.103,881,2.692,882,4.545,883,3.103,884,2.692,885,4.545,886,3.943,887,4.545,888,4.545,889,4.545]],["title/injectables/I18Service.html",[20,0.732,34,1.846]],["body/injectables/I18Service.html",[2,0.176,3,0.176,4,0.157,6,0.546,7,1.137,11,0.853,12,0.015,13,2.024,14,0.264,20,1.256,21,0.176,34,2.869,36,3.538,37,1.868,38,1.868,39,0.157,45,0.099,56,0.659,57,1.325,65,4.031,106,0.011,107,0.011,117,1.092,120,1.212,122,1.092,123,0.964,124,1.049,128,0.977,129,1.384,210,2.132,211,1.868,241,2.038,242,1.95,461,2.935,476,3.542,890,4.108,891,7.083,892,6.078,893,5.527,894,6.713,895,4.735,896,4.735,897,6.078,898,4.735,899,4.735,900,7.325,901,7.083,902,4.735,903,4.735,904,4.735,905,4.735,906,4.735,907,4.735,908,4.735,909,4.735,910,7.325,911,4.735,912,4.735,913,4.735,914,4.735,915,4.735]],["title/interfaces/ISnackBarData.html",[0,1.364,916,2.798]],["body/interfaces/ISnackBarData.html",[0,2.348,2,0.208,3,0.208,4,0.185,6,0.644,7,1.26,11,0.709,12,0.015,13,1.92,14,0.251,17,1.798,18,0.309,19,1.721,20,1.044,21,0.208,39,0.223,40,1.426,41,1.321,43,1.426,45,0.117,47,1.321,56,0.777,57,1.044,62,2.112,68,1.482,106,0.012,107,0.012,114,1.54,180,1.223,279,3.072,316,3.721,916,5.172,917,4.356,918,4.843,919,4.843,920,4.843,921,4.843]],["title/components/LoginComponent.html",[18,0.179,162,0.926]],["body/components/LoginComponent.html",[2,0.112,3,0.112,4,0.099,6,0.347,7,0.831,11,0.827,12,0.015,13,1.402,14,0.251,15,3.582,17,0.968,18,0.285,19,1.349,21,0.112,24,1.671,27,0.768,36,3.178,37,1.186,38,1.186,39,0.099,40,2.031,41,1.881,43,1.135,45,0.063,46,0.685,47,1.051,50,0.768,56,0.618,57,0.988,58,3.394,59,1.574,60,1.635,62,1.68,67,1.402,68,1.548,70,0.931,73,0.685,91,1.49,102,1.953,106,0.008,107,0.008,108,0.712,109,0.83,110,0.83,111,0.83,113,0.83,114,1.225,117,0.798,120,1.168,122,0.798,123,0.925,124,0.766,128,0.849,129,1.202,134,1.548,135,0.563,136,1.225,137,1.225,138,1.225,139,1.608,140,0.83,141,0.83,142,0.83,143,0.685,144,0.83,145,0.712,146,0.83,147,0.712,148,0.83,149,0.712,150,0.83,151,0.712,152,0.798,153,0.83,154,0.685,155,0.83,156,0.712,157,0.83,158,0.712,159,0.83,160,0.712,161,0.83,162,1.38,163,0.83,164,0.739,165,0.83,166,0.712,167,0.83,168,0.712,169,0.83,170,0.712,171,0.83,172,0.685,173,0.83,174,0.685,175,0.83,176,0.712,177,0.83,178,0.712,179,0.83,180,0.973,181,0.83,182,0.685,183,0.83,184,0.685,185,0.83,186,0.712,187,0.83,188,0.685,189,0.739,190,0.83,234,2.773,240,1.568,279,2.905,287,3.614,315,2.753,316,2.2,322,2.753,323,3.614,346,3.853,391,1.568,418,3.273,440,1.655,517,2.151,518,1.864,527,2.801,562,2.753,601,3.776,648,1.864,650,2.753,657,2.609,659,3.853,660,3.853,741,5.079,763,4.55,781,2.347,922,2.609,923,6.509,924,4.441,925,4.441,926,5.83,927,5.058,928,5.83,929,4.441,930,3.007,931,4.441,932,3.007,933,3.007,934,3.007,935,4.441,936,3.007,937,3.007,938,3.007,939,3.007,940,3.853,941,2.151,942,3.007,943,2.609,944,5.28,945,3.007,946,3.007,947,3.007,948,2.347,949,3.007,950,3.007,951,3.007,952,1.994,953,3.007,954,2.151,955,3.007,956,4.441,957,3.853,958,4.441]],["title/interfaces/LoginContext.html",[0,1.364,496,2.595]],["body/interfaces/LoginContext.html",[0,1.711,2,0.129,3,0.129,4,0.114,6,0.398,7,0.918,11,0.725,12,0.015,13,1.989,14,0.245,20,1.068,21,0.129,24,1.406,27,0.882,39,0.162,45,0.103,50,1.744,56,0.48,57,1.277,59,1.416,60,1.069,62,1.305,67,1.651,70,1.069,73,1.496,88,2.011,91,1.71,102,1.156,106,0.009,107,0.009,124,0.846,128,1.045,234,1.421,239,1.361,241,1.485,242,1.421,387,2.288,399,2.139,440,2.7,457,2.139,465,4.842,468,2.468,469,4.356,472,2.693,474,2.693,477,2.693,478,2.693,479,2.693,480,2.693,482,4.455,483,4.455,484,2.693,487,2.693,489,2.468,490,3.382,491,2.693,493,1.799,495,2.693,496,3.786,500,2.693,501,3.786,512,4.455,513,2.288,514,3.254,515,3.509,516,2.468,517,4.698,518,3.854,519,2.468,520,4.083,521,2.693,522,2.011,523,3.828,524,2.693,525,2.693,526,2.209,527,1.485,528,5.48,529,2.693,530,2.693,531,2.977,532,4.852,533,2.693,534,2.693,535,3.828,536,3.828,537,2.693,538,2.693,539,4.083,540,3.041,541,2.693,542,2.288,543,2.693,544,2.288,545,2.693,546,2.693,547,2.693,548,2.693,549,2.693,550,3.786,551,3.254,552,3.828,553,2.011,554,2.693,555,2.693,556,2.693,557,2.011,558,2.693,559,2.693,560,3.828,561,2.693,562,3.041,563,2.693,564,2.693,565,2.693,566,2.693,567,2.693,568,2.693,569,2.693,570,2.693,571,2.468,572,2.693,573,2.693]],["title/components/ManagetournamentComponent.html",[18,0.179,166,0.926]],["body/components/ManagetournamentComponent.html",[2,0.107,3,0.107,4,0.095,6,0.592,7,0.802,8,4.075,10,3.378,11,0.885,12,0.015,13,1.363,14,0.227,17,0.924,18,0.279,19,1.312,21,0.107,24,1.633,27,0.733,39,0.095,40,2.022,41,1.872,43,1.096,45,0.06,46,0.976,47,1.015,50,0.733,51,1.292,56,0.597,57,0.961,59,1.389,60,1.328,67,1.363,68,1.512,70,0.889,73,0.653,106,0.009,107,0.01,108,0.679,109,0.791,110,0.791,111,0.791,113,0.791,114,1.183,117,0.771,120,1.232,122,0.771,123,1.052,124,0.74,128,0.931,129,1.389,134,2.231,135,0.537,136,1.183,137,1.183,138,1.183,139,1.572,140,0.791,141,0.791,142,0.791,143,0.653,144,0.791,145,0.679,146,0.791,147,0.679,148,0.791,149,0.679,150,0.791,151,0.679,152,0.762,153,0.791,154,0.653,155,0.791,156,0.679,157,0.791,158,0.679,159,0.791,160,0.679,161,0.791,162,0.679,163,0.791,164,0.705,165,0.791,166,1.348,167,0.791,168,0.679,169,0.791,170,0.679,171,0.791,172,0.653,173,0.791,174,0.653,175,0.791,176,0.679,177,0.791,178,0.679,179,0.791,180,0.628,181,0.791,182,0.653,183,0.791,184,0.653,185,0.791,186,0.679,187,0.791,188,0.653,189,1.814,190,0.791,210,1.292,211,1.132,286,2.986,288,4.993,289,4.993,309,1.672,481,1.579,540,1.778,595,1.778,619,3.405,959,2.489,960,6.398,961,4.288,962,4.288,963,5.697,964,5.697,965,5.697,966,4.288,967,5.697,968,5.697,969,5.697,970,5.697,971,4.288,972,4.288,973,2.869,974,2.869,975,2.869,976,2.869,977,2.869,978,2.869,979,2.869,980,2.869,981,2.869,982,3.531,983,2.869,984,4.288,985,2.869,986,2.869,987,2.489,988,2.869,989,4.288,990,2.869,991,2.489,992,2.869,993,2.869,994,2.869,995,4.288,996,2.869,997,4.288,998,2.869,999,4.455,1000,2.869,1001,6.398,1002,2.869,1003,2.869,1004,2.489,1005,1.672,1006,2.489,1007,2.869,1008,3.72,1009,4.288,1010,4.288,1011,4.288]],["title/components/ManageusersComponent.html",[18,0.179,168,0.926]],["body/components/ManageusersComponent.html",[2,0.106,3,0.106,4,0.094,6,0.327,7,0.796,11,0.883,12,0.015,13,1.354,14,0.246,17,0.914,18,0.278,19,1.303,21,0.106,23,2.552,24,1.624,27,0.725,28,2.5,29,1.48,36,3.118,37,1.12,38,1.12,39,0.094,40,2.019,41,1.87,43,1.087,45,0.059,46,0.646,47,1.007,50,1.688,51,1.915,52,4.422,56,0.592,59,1.29,60,1.317,62,1.609,67,1.354,68,1.504,69,2.214,70,0.879,71,2.03,73,0.646,91,1.406,102,0.951,104,2.03,106,0.008,107,0.008,108,0.672,109,0.783,110,0.783,111,0.783,113,0.783,114,1.173,117,0.764,120,1.205,122,0.764,123,0.899,124,0.734,128,0.742,129,0.968,132,2.636,134,1.976,135,0.531,136,1.173,137,1.173,138,1.173,139,1.563,140,0.783,141,0.783,142,0.783,143,0.646,144,0.783,145,0.672,146,0.783,147,0.672,148,0.783,149,0.672,150,0.783,151,0.672,152,0.753,153,0.783,154,0.646,155,0.783,156,0.672,157,0.783,158,0.672,159,0.783,160,0.672,161,0.783,162,0.672,163,0.783,164,0.698,165,0.783,166,0.672,167,0.783,168,1.341,169,0.783,170,0.672,171,0.783,172,0.646,173,0.783,174,0.646,175,0.783,176,0.672,177,0.783,178,0.672,179,0.783,180,0.932,181,0.783,182,0.646,183,0.783,184,0.646,185,0.783,186,0.672,187,0.783,188,0.646,189,0.698,190,0.783,201,1.882,210,1.915,211,1.678,279,2.807,287,3.512,315,2.636,316,2.108,322,2.636,323,3.512,391,1.48,481,1.562,513,3.758,518,3.512,542,3.758,544,3.758,601,4.053,645,5.433,648,1.759,650,3.512,651,2.462,658,3.69,941,2.03,948,2.214,952,1.882,954,2.03,1012,2.462,1013,4.253,1014,4.253,1015,4.253,1016,6.14,1017,5.666,1018,5.666,1019,4.253,1020,4.253,1021,2.838,1022,2.838,1023,4.253,1024,4.916,1025,2.838,1026,2.838,1027,2.838,1028,2.838,1029,2.838,1030,2.838,1031,2.838,1032,2.838,1033,3.69,1034,2.838,1035,2.462,1036,2.838,1037,2.838,1038,2.838,1039,4.253,1040,2.838,1041,2.838,1042,2.838,1043,2.838,1044,2.462,1045,2.838,1046,2.462,1047,2.838,1048,2.838,1049,5.101,1050,2.838,1051,2.838,1052,2.838,1053,2.838,1054,4.253,1055,4.253,1056,4.253,1057,4.253,1058,4.253,1059,4.253]],["title/components/MatchComponent.html",[18,0.179,170,0.926]],["body/components/MatchComponent.html",[2,0.08,3,0.08,4,0.071,6,0.248,7,0.642,10,1.066,11,0.901,12,0.015,14,0.261,17,0.693,18,0.245,19,1.094,21,0.08,34,3.215,35,1.184,36,3.215,37,0.849,38,0.849,39,0.071,40,1.955,41,1.811,43,0.877,45,0.045,46,0.49,47,0.812,50,0.877,51,0.969,56,0.478,57,1.364,58,2.233,59,0.49,62,2.347,67,1.297,68,1.297,70,1.514,73,1.113,106,0.011,107,0.013,108,0.509,109,0.593,110,0.593,111,0.593,113,0.593,114,0.947,117,0.617,120,1.207,122,0.96,123,0.948,124,0.921,128,0.903,129,1.296,134,2.286,135,0.402,136,0.947,137,0.947,138,0.947,139,1.348,140,0.593,141,0.593,142,0.593,143,0.49,144,0.593,145,0.509,146,0.593,147,0.509,148,0.593,149,0.812,150,0.593,151,0.509,152,1.137,153,0.593,154,0.49,155,0.593,156,0.812,157,0.593,158,0.812,159,0.593,160,0.812,161,0.593,162,0.509,163,0.593,164,0.529,165,0.593,166,0.509,167,0.593,168,0.509,169,0.593,170,1.156,171,0.593,172,0.49,173,0.593,174,0.49,175,0.593,176,0.509,177,0.593,178,0.509,179,0.593,180,0.752,181,0.593,182,0.49,183,0.593,184,0.49,185,0.593,186,0.509,187,0.593,188,0.49,189,1.202,190,0.593,201,1.426,234,2.344,236,3.132,240,1.122,279,3.132,280,3.481,286,3.068,287,3.528,288,4.989,289,4.441,308,1.678,309,1.253,314,1.678,315,2.654,316,2.122,322,3.702,323,3.528,434,4.24,526,0.969,527,2.298,677,4.441,738,3.215,768,1.253,775,1.678,776,1.678,788,1.538,820,1.866,828,2.454,829,2.454,830,2.977,831,2.977,833,2.977,834,2.678,886,4.24,952,2.84,1004,2.977,1060,1.866,1061,3.432,1062,3.432,1063,3.432,1064,4.887,1065,3.432,1066,3.432,1067,3.432,1068,4.887,1069,4.282,1070,4.24,1071,4.282,1072,2.151,1073,3.432,1074,2.151,1075,2.151,1076,2.151,1077,4.24,1078,3.432,1079,2.151,1080,2.151,1081,2.151,1082,3.432,1083,2.151,1084,3.432,1085,2.151,1086,3.432,1087,2.151,1088,2.151,1089,2.151,1090,2.151,1091,2.151,1092,2.151,1093,2.151,1094,2.151,1095,2.151,1096,1.426,1097,2.151,1098,2.151,1099,2.151,1100,2.151,1101,1.866,1102,3.432,1103,2.151,1104,4.167,1105,2.151,1106,2.151,1107,4.887,1108,4.282,1109,4.282,1110,2.151,1111,4.282,1112,2.151,1113,2.151,1114,2.151,1115,2.151,1116,2.151,1117,1.866,1118,1.538,1119,1.678,1120,2.151,1121,1.678,1122,2.151,1123,2.151,1124,2.151,1125,2.151,1126,4.24,1127,2.977,1128,3.432,1129,3.432,1130,2.151,1131,2.151,1132,3.432,1133,3.432,1134,3.432,1135,3.432,1136,3.432,1137,3.432,1138,2.151,1139,2.151]],["title/injectables/MatchService.html",[20,0.732,286,1.762]],["body/injectables/MatchService.html",[0,0.891,2,0.095,3,0.095,4,0.084,6,0.295,7,0.735,9,3.422,10,3.413,11,0.903,12,0.015,13,2.105,14,0.228,20,0.895,21,0.095,24,1.539,27,0.653,28,2.411,39,0.13,45,0.053,50,1.79,51,1.151,56,0.547,57,1.43,59,1.089,60,1.217,67,1.888,73,1.089,102,1.942,106,0.007,107,0.014,117,0.706,120,1.177,122,1.259,123,1.112,124,1.209,128,1.107,210,1.151,211,1.008,241,1.1,242,1.052,286,1.769,392,3.323,453,2.605,460,1.333,481,1.406,486,3.329,490,3.725,493,3.708,527,2.311,531,3.323,553,3.378,557,3.378,576,3.065,616,1.695,738,2.735,747,3.593,768,1.489,788,1.828,982,1.584,1005,1.489,1096,1.695,1118,3.422,1119,1.994,1121,1.994,1140,1.994,1141,4.659,1142,3.928,1143,3.928,1144,3.928,1145,3.928,1146,3.928,1147,3.928,1148,3.928,1149,3.928,1150,3.928,1151,3.928,1152,3.928,1153,3.408,1154,2.556,1155,3.408,1156,5.375,1157,2.556,1158,3.408,1159,2.556,1160,3.408,1161,2.556,1162,3.408,1163,2.556,1164,3.408,1165,2.556,1166,4.151,1167,3.408,1168,2.556,1169,3.408,1170,2.556,1171,3.408,1172,4.659,1173,4.659,1174,2.556,1175,3.408,1176,2.556,1177,3.793,1178,3.065,1179,2.217,1180,1.994,1181,3.065,1182,3.065,1183,2.809,1184,3.065,1185,2.217,1186,3.408,1187,3.408,1188,2.217,1189,3.065,1190,3.408,1191,2.217,1192,2.217,1193,3.408,1194,2.217,1195,2.217,1196,2.217,1197,2.217,1198,2.217,1199,2.217,1200,2.217,1201,2.217,1202,2.217,1203,2.217,1204,3.408,1205,2.217,1206,2.217,1207,2.217,1208,2.217,1209,2.217,1210,2.217,1211,2.217,1212,2.217,1213,2.217,1214,2.217,1215,2.217]],["title/interfaces/MatchUpdateMessage.html",[0,1.364,1096,2.595]],["body/interfaces/MatchUpdateMessage.html",[0,1.647,2,0.122,3,0.122,4,0.108,6,0.378,7,0.884,9,2.341,10,3.008,11,0.704,12,0.015,13,2.079,14,0.25,20,0.884,21,0.122,24,1.354,27,0.836,28,2.097,39,0.156,45,0.068,50,1.87,51,1.474,56,0.456,57,1.294,59,1.262,60,1.014,67,1.611,73,1.262,102,2.156,106,0.009,107,0.013,128,1.065,241,1.409,242,1.348,286,1.474,392,2.891,453,3.133,460,1.707,490,3.712,493,3.691,527,2.033,531,3.605,553,3.751,557,3.751,616,2.171,738,2.616,747,3.99,768,1.908,788,2.341,982,2.029,1005,1.908,1096,3.133,1118,4.341,1119,4.737,1121,4.737,1140,2.555,1141,2.84,1153,2.84,1155,2.84,1156,5.233,1158,2.84,1160,2.84,1162,2.84,1164,2.84,1166,4.099,1167,2.84,1169,2.84,1171,2.84,1172,4.099,1173,4.099,1175,2.84,1177,3.436,1178,3.687,1179,2.84,1180,2.555,1181,3.687,1182,3.687,1183,3.379,1184,3.687,1185,2.84,1186,4.099,1187,4.099,1188,2.84,1189,3.687,1190,4.099,1191,2.84,1192,2.84,1193,4.099,1194,2.84,1195,2.84,1196,2.84,1197,2.84,1198,2.84,1199,2.84,1200,2.84,1201,2.84,1202,2.84,1203,2.84,1204,4.099,1205,2.84,1206,2.84,1207,2.84,1208,2.84,1209,2.84,1210,2.84,1211,2.84,1212,2.84,1213,2.84,1214,2.84,1215,2.84]],["title/classes/MatchViewModel.html",[45,0.082,738,1.846]],["body/classes/MatchViewModel.html",[2,0.143,3,0.143,4,0.127,6,0.444,7,0.991,10,3.232,11,0.998,12,0.015,13,2.011,14,0.143,23,3.261,27,0.984,39,0.127,45,0.111,54,4.665,57,1.401,62,2.291,106,0.01,107,0.015,117,0.952,120,1.3,122,1.088,123,0.961,124,1.384,128,0.881,129,0.877,486,3.284,595,3.754,699,4.572,709,4.596,738,2.5,747,4.93,851,5.254,852,5.254,884,5.254,893,4.134,1216,3.341,1217,6.523,1218,6.523,1219,6.056,1220,6.056,1221,6.056,1222,6.056,1223,6.056,1224,5.298,1225,5.298,1226,5.298,1227,3.851,1228,3.851,1229,3.851,1230,7.712,1231,3.851,1232,3.851,1233,3.851,1234,3.851,1235,3.851,1236,3.851,1237,3.851,1238,3.851,1239,3.851,1240,3.851,1241,3.851,1242,3.851,1243,3.851,1244,3.851,1245,3.851]],["title/components/MatchplanComponent.html",[18,0.179,172,0.891]],["body/components/MatchplanComponent.html",[2,0.089,3,0.089,4,0.079,6,0.649,7,0.699,10,2.275,11,0.889,12,0.015,13,1.582,14,0.232,18,0.258,19,1.173,21,0.089,23,2.336,24,1.487,27,0.612,28,2.355,29,1.249,34,3.304,35,1.318,39,0.079,40,1.981,41,1.835,43,0.954,45,0.05,46,0.545,47,0.884,50,0.612,56,0.52,57,1.409,59,1.357,60,1.422,67,1.377,68,1.377,70,1.422,73,0.545,81,1.395,102,0.802,106,0.007,107,0.013,108,0.567,109,0.661,110,0.661,111,0.661,113,0.661,114,1.03,117,0.671,120,1.23,122,1.071,123,1.022,124,1.028,128,1.019,129,1.046,132,2.315,134,2.078,135,0.448,136,1.03,137,1.03,138,1.03,139,1.431,140,0.661,141,0.661,142,0.661,143,0.545,144,0.661,145,0.567,146,0.661,147,0.567,148,0.661,149,0.567,150,0.661,151,0.567,152,0.636,153,0.661,154,0.545,155,0.661,156,0.567,157,0.661,158,0.567,159,0.661,160,0.567,161,0.661,162,0.567,163,0.661,164,0.589,165,0.661,166,0.567,167,0.661,168,0.567,169,0.661,170,0.567,171,0.661,172,1.181,173,0.661,174,0.545,175,0.661,176,0.567,177,0.661,178,0.567,179,0.661,180,0.525,181,0.661,182,0.545,183,0.661,184,0.545,185,0.661,186,0.567,187,0.661,188,0.545,189,0.589,190,0.661,211,1.812,278,3.279,285,1.712,286,3.153,303,1.588,309,1.395,432,2.915,476,2.177,522,1.395,526,1.078,527,2.679,588,2.177,595,2.315,621,4.016,738,2.448,747,1.484,768,1.395,865,1.712,982,4.497,1005,2.177,1104,2.915,1189,4.65,1246,2.077,1247,3.735,1248,3.735,1249,5.187,1250,5.187,1251,3.735,1252,5.187,1253,3.735,1254,3.735,1255,4.592,1256,5.624,1257,4.592,1258,3.735,1259,3.735,1260,2.394,1261,2.394,1262,3.735,1263,2.394,1264,3.735,1265,5.187,1266,2.394,1267,3.735,1268,2.394,1269,2.394,1270,2.394,1271,2.394,1272,2.394,1273,2.394,1274,2.394,1275,2.394,1276,2.394,1277,2.394,1278,2.394,1279,2.394,1280,2.394,1281,2.394,1282,2.394,1283,2.394,1284,2.394,1285,2.394,1286,2.394,1287,2.394,1288,2.394,1289,2.394,1290,2.394,1291,2.394,1292,1.868,1293,3.24,1294,2.394,1295,2.394,1296,2.394,1297,2.394,1298,2.394,1299,3.735,1300,1.868,1301,2.394,1302,2.394,1303,2.077,1304,2.394,1305,2.394,1306,2.394,1307,3.735,1308,5.187,1309,3.735,1310,4.5,1311,4.5,1312,3.735,1313,3.735,1314,5.187,1315,3.735,1316,3.735,1317,3.735,1318,3.735,1319,3.735,1320,4.5]],["title/modules/MatchplanModule.html",[244,0.545,1321,2.798]],["body/modules/MatchplanModule.html",[2,0.194,3,0.194,4,0.172,12,0.015,14,0.29,21,0.194,39,0.213,41,1.232,45,0.109,106,0.012,107,0.012,135,0.974,172,1.749,244,0.898,246,2.344,247,3.158,248,2.456,249,2.344,254,3.624,255,3.197,256,2.579,257,2.579,260,2.162,262,2.864,263,3.033,355,4.76,401,4.516,432,4.062,1321,5.766,1322,4.516,1323,4.516,1324,4.516,1325,5.092,1326,5.205,1327,4.516]],["title/modules/MatchplanRoutingModule.html",[244,0.545,1325,2.595]],["body/modules/MatchplanRoutingModule.html",[2,0.215,3,0.215,4,0.191,12,0.015,14,0.283,18,0.265,21,0.215,39,0.191,45,0.121,73,1.316,106,0.013,107,0.013,172,1.566,239,2.28,244,0.805,260,2.304,270,3.18,271,3.464,272,3.18,273,3.18,274,3.368,1325,4.56,1327,5.014,1328,5.779]],["title/modules/MaterialModule.html",[244,0.545,371,2.425]],["body/modules/MaterialModule.html",[2,0.185,3,0.185,4,0.164,12,0.015,14,0.293,17,1.597,21,0.185,39,0.207,45,0.104,106,0.011,107,0.011,244,0.69,260,2.097,371,3.88,453,3.289,1181,3.87,1182,3.87,1183,3.547,1184,3.87,1329,4.959,1330,6.86,1331,4.959,1332,6.86,1333,4.959,1334,6.86,1335,4.959,1336,6.86,1337,4.959,1338,6.86,1339,4.959,1340,6.86,1341,4.959,1342,6.86,1343,6.86,1344,6.86,1345,7.429,1346,6.86,1347,6.86,1348,6.86,1349,6.86,1350,6.86,1351,6.86,1352,6.86,1353,6.86,1354,4.959,1355,6.86,1356,6.86]],["title/components/NewpasswordComponent.html",[18,0.179,174,0.891]],["body/components/NewpasswordComponent.html",[2,0.116,3,0.116,4,0.103,6,0.36,7,0.854,11,0.754,12,0.015,13,1.432,14,0.26,17,1.005,18,0.289,19,1.379,21,0.116,24,1.702,36,3.215,37,1.232,38,1.232,39,0.103,40,2.038,41,1.888,43,1.166,45,0.065,46,0.711,47,1.08,50,0.798,56,0.635,57,1.01,59,1.438,60,1.671,62,1.727,67,0.829,68,1.576,70,0.967,73,1.039,91,1.547,106,0.008,107,0.008,108,0.739,109,0.861,110,0.861,111,0.861,113,0.861,114,1.259,117,0.82,120,1.092,122,0.561,123,0.856,124,0.539,128,0.664,129,1.039,134,1.591,135,0.584,136,1.259,137,1.259,138,1.259,139,1.637,140,0.861,141,0.861,142,0.861,143,0.711,144,0.861,145,0.739,146,0.861,147,0.739,148,0.861,149,0.739,150,0.861,151,0.739,152,0.829,153,0.861,154,0.711,155,0.861,156,0.739,157,0.861,158,0.739,159,0.861,160,0.739,161,0.861,162,0.739,163,0.861,164,0.768,165,0.861,166,0.739,167,0.861,168,0.739,169,0.861,170,0.739,171,0.861,172,0.711,173,0.861,174,1.352,175,0.861,176,0.739,177,0.861,178,0.739,179,0.861,180,1,181,0.861,182,0.711,183,0.861,184,0.711,185,0.861,186,0.739,187,0.861,188,0.711,189,0.768,190,0.861,234,2.717,236,3.63,239,1.232,240,1.628,279,2.969,287,3.679,313,2.708,315,2.829,316,2.262,322,2.829,323,3.679,391,1.628,423,3.96,440,2.512,469,3.578,514,3.027,518,1.935,520,4.718,526,1.406,571,2.233,594,2.436,648,1.935,650,1.935,656,2.708,661,3.96,741,5.317,763,4.632,771,2.436,781,2.436,927,5.15,941,2.233,943,2.708,952,2.07,954,2.233,957,3.96,1357,2.708,1358,4.564,1359,4.564,1360,5.936,1361,3.122,1362,6.597,1363,4.564,1364,3.122,1365,3.122,1366,3.122,1367,3.122,1368,3.122,1369,5.396,1370,4.564,1371,3.122,1372,3.122,1373,3.122,1374,3.122,1375,4.564,1376,3.122,1377,4.564,1378,4.564,1379,4.564,1380,4.564]],["title/modules/NewpasswordModule.html",[244,0.545,1381,2.798]],["body/modules/NewpasswordModule.html",[2,0.197,3,0.197,4,0.175,12,0.015,14,0.291,21,0.197,39,0.215,45,0.111,106,0.012,107,0.012,135,0.99,174,1.755,244,0.907,246,2.382,247,3.181,248,2.496,249,2.382,254,3.638,255,3.229,256,2.621,257,2.621,260,2.183,262,2.911,263,3.082,395,2.911,440,2.911,1381,5.723,1382,4.589,1383,4.589,1384,4.589,1385,5.112,1386,5.289,1387,4.039,1388,4.589]],["title/modules/NewpasswordRoutingModule.html",[244,0.545,1385,2.595]],["body/modules/NewpasswordRoutingModule.html",[2,0.215,3,0.215,4,0.191,12,0.015,14,0.283,18,0.265,21,0.215,39,0.191,45,0.121,73,1.316,106,0.013,107,0.013,174,1.566,239,2.28,244,0.805,260,2.304,270,3.18,271,3.464,272,3.18,273,3.18,274,3.368,1385,4.56,1388,5.014,1389,5.779]],["title/injectables/PitchService.html",[20,0.732,392,2.04]],["body/injectables/PitchService.html",[2,0.158,3,0.158,4,0.14,6,0.489,7,1.058,11,0.862,12,0.015,13,1.688,14,0.237,20,1.19,21,0.158,24,1.945,27,1.083,39,0.14,45,0.089,50,1.734,56,0.59,57,1.323,60,1.751,67,1.93,70,1.312,81,2.469,102,1.42,106,0.01,107,0.01,117,1.016,120,1.228,122,1.143,123,1.009,124,1.097,128,1.097,129,0.965,210,1.908,211,2.23,241,1.824,242,1.745,392,2.947,460,2.21,461,2.626,476,3.294,481,2.332,490,3.152,522,2.469,526,1.908,531,2.21,588,2.469,595,3.504,611,5.295,699,4.781,1177,4.507,1390,3.676,1391,6.785,1392,5.652,1393,6.785,1394,5.652,1395,5.652,1396,4.237,1397,4.237,1398,4.237,1399,4.237,1400,4.237,1401,4.237,1402,4.237,1403,4.237,1404,4.237,1405,4.237,1406,4.237,1407,4.237,1408,4.904,1409,4.237,1410,4.237,1411,4.237,1412,4.237,1413,4.237]],["title/components/PitchesComponent.html",[18,0.179,176,0.926]],["body/components/PitchesComponent.html",[2,0.144,3,0.144,4,0.128,6,0.445,7,0.992,11,0.674,12,0.015,14,0.226,18,0.313,19,1.549,21,0.144,27,0.985,39,0.128,40,2.076,41,1.923,43,1.355,45,0.081,46,0.878,47,1.255,56,0.738,57,1.134,59,0.878,67,1.609,68,1.733,70,1.195,106,0.01,107,0.01,108,0.913,109,1.064,110,1.064,111,1.064,113,1.064,114,1.463,117,0.953,120,1.003,122,0.693,123,0.962,124,0.665,128,0.561,134,2.466,135,0.722,136,1.463,137,1.463,138,1.463,139,1.801,140,1.064,141,1.064,142,1.064,143,0.878,144,1.064,145,0.913,146,1.064,147,0.913,148,1.064,149,0.913,150,1.064,151,0.913,152,1.024,153,1.064,154,0.878,155,1.064,156,0.913,157,1.064,158,0.913,159,1.064,160,0.913,161,1.064,162,0.913,163,1.064,164,0.948,165,1.064,166,0.913,167,1.064,168,0.913,169,1.064,170,0.913,171,1.064,172,0.878,173,1.064,174,0.878,175,1.064,176,1.545,177,1.064,178,0.913,179,1.064,180,0.845,181,1.064,182,0.878,183,1.064,184,0.878,185,1.064,186,0.913,187,1.064,188,0.878,189,0.948,190,1.064,392,3.687,393,3.01,699,4.696,795,5.663,834,4.138,1408,3.346,1414,3.346,1415,5.303,1416,5.303,1417,3.857,1418,5.303,1419,3.857,1420,3.857,1421,5.303,1422,5.303,1423,4.601]],["title/injectables/SeasonService.html",[20,0.732,278,2.153]],["body/injectables/SeasonService.html",[2,0.142,3,0.142,4,0.126,6,0.441,7,0.986,11,0.896,12,0.015,14,0.225,20,1.129,21,0.142,24,1.864,27,0.977,39,0.126,45,0.08,50,1.743,56,0.532,57,1.32,59,1.2,60,1.633,67,1.872,70,1.184,102,1.281,106,0.01,107,0.01,117,0.947,120,1.237,122,1.169,123,1.032,124,1.122,128,1.052,129,0.871,210,2.374,211,2.08,241,1.645,242,1.574,278,2.901,460,1.994,461,2.37,476,3.072,481,2.104,486,2.37,490,2.99,526,2.928,527,1.645,531,1.994,588,2.228,621,4.631,1177,4.371,1424,3.317,1425,6.503,1426,6.503,1427,6.503,1428,6.503,1429,5.271,1430,5.271,1431,6.033,1432,5.271,1433,3.823,1434,5.271,1435,5.642,1436,3.823,1437,4.573,1438,5.271,1439,5.642,1440,3.823,1441,4.573,1442,6.503,1443,5.271,1444,3.823,1445,3.823,1446,3.823,1447,3.823,1448,3.823,1449,3.823,1450,3.823,1451,2.37,1452,3.823,1453,3.823,1454,3.823,1455,3.823,1456,3.823,1457,3.823,1458,3.823,1459,3.823,1460,3.823,1461,3.823,1462,3.823,1463,3.823,1464,3.823,1465,3.823,1466,3.317,1467,3.317]],["title/components/SeasonchooserComponent.html",[18,0.179,178,0.926]],["body/components/SeasonchooserComponent.html",[2,0.139,3,0.139,4,0.123,6,0.429,7,0.968,11,0.858,12,0.015,14,0.239,17,1.198,18,0.309,19,1.519,21,0.139,27,0.95,39,0.123,40,2.07,41,1.917,43,1.322,45,0.078,46,0.847,47,1.224,50,0.95,56,0.518,57,0.968,68,1.706,106,0.009,107,0.009,108,0.88,109,1.026,110,1.026,111,1.026,113,1.026,114,1.427,117,0.93,120,1.157,122,0.93,123,1.02,124,0.892,128,0.753,129,1.178,135,0.696,136,1.427,137,1.427,138,1.427,139,1.773,140,1.026,141,1.026,142,1.026,143,0.847,144,1.026,145,0.88,146,1.026,147,0.88,148,1.026,149,0.88,150,1.026,151,0.88,152,0.988,153,1.026,154,0.847,155,1.026,156,0.88,157,1.026,158,0.88,159,1.026,160,0.88,161,1.026,162,0.88,163,1.026,164,0.915,165,1.026,166,0.88,167,1.026,168,0.88,169,1.026,170,0.88,171,1.026,172,0.847,173,1.026,174,0.847,175,1.026,176,0.88,177,1.026,178,1.521,179,1.026,180,0.815,181,1.026,182,0.847,183,1.026,184,0.847,185,1.026,186,0.88,187,1.026,188,0.847,189,0.915,190,1.026,201,3.43,278,4.183,285,2.66,303,2.467,519,2.66,621,4.384,1024,5.576,1070,5.576,1077,5.576,1292,2.903,1293,4.488,1468,3.227,1469,5.173,1470,5.173,1471,5.173,1472,5.173,1473,5.946,1474,5.173,1475,5.173,1476,3.72,1477,3.72,1478,3.72,1479,3.72,1480,3.72,1481,3.72,1482,3.72,1483,3.72,1484,5.173]],["title/modules/SharedModule.html",[244,0.545,254,1.846]],["body/modules/SharedModule.html",[2,0.148,3,0.148,4,0.132,12,0.015,14,0.295,20,0.746,21,0.148,31,2.323,32,2.323,33,2.323,37,1.573,38,1.573,39,0.219,45,0.083,106,0.01,107,0.01,135,0.746,149,1.76,151,1.835,156,1.76,158,1.76,160,1.76,170,1.835,178,1.835,180,1.629,244,0.755,246,1.795,247,2.776,248,1.881,249,1.795,254,3.838,255,2.688,256,1.975,257,1.975,259,4.233,260,1.817,310,3.11,361,4.811,371,4.808,384,3.458,389,5.349,390,5.349,391,2.079,395,2.193,673,3.11,1387,3.822,1485,3.458,1486,3.458,1487,3.986,1488,3.458,1489,3.986,1490,3.986,1491,3.986,1492,3.986,1493,3.986,1494,3.986,1495,3.986,1496,6.166,1497,6.166,1498,3.986,1499,3.986]],["title/components/SnackbarComponent.html",[18,0.179,180,0.857]],["body/components/SnackbarComponent.html",[0,1.422,2,0.152,3,0.152,4,0.135,6,0.471,7,1.031,11,0.7,12,0.015,13,1.083,14,0.205,17,1.314,18,0.32,19,1.594,20,1.031,21,0.152,39,0.182,40,2.085,41,1.931,43,1.408,45,0.085,46,0.929,47,1.304,56,0.767,57,1.167,62,2.64,68,1.774,106,0.01,107,0.01,108,0.965,109,1.125,110,1.125,111,1.125,113,1.125,114,1.52,117,0.99,120,1.033,122,0.733,123,0.99,124,0.704,128,0.594,129,0.929,135,0.763,136,1.52,137,1.52,138,1.52,139,1.843,140,1.125,141,1.125,142,1.125,143,0.929,144,1.125,145,0.965,146,1.125,147,0.965,148,1.125,149,0.965,150,1.125,151,0.965,152,1.083,153,1.125,154,0.929,155,1.125,156,0.965,157,1.125,158,0.965,159,1.125,160,0.965,161,1.125,162,0.965,163,1.125,164,1.003,165,1.125,166,0.965,167,1.125,168,0.965,169,1.125,170,0.965,171,1.125,172,0.929,173,1.125,174,0.929,175,1.125,176,0.965,177,1.125,178,0.965,179,1.125,180,1.464,181,1.125,182,0.929,183,1.125,184,0.929,185,1.125,186,0.965,187,1.125,188,0.929,189,1.003,190,1.125,203,2.528,279,3.032,316,2.021,916,5.143,917,3.183,918,3.539,919,4.78,920,4.78,921,3.539,1500,4.079,1501,4.079,1502,4.079,1503,4.079,1504,5.51]],["title/components/TableComponent.html",[18,0.179,182,0.891]],["body/components/TableComponent.html",[2,0.122,3,0.122,4,0.108,6,0.377,7,0.882,11,0.77,12,0.015,14,0.239,18,0.295,19,1.414,21,0.122,24,1.738,27,1.549,28,2.833,29,1.703,39,0.108,40,2.047,41,1.896,43,1.205,45,0.068,46,0.744,47,1.116,56,0.657,57,1.254,59,1.261,68,1.61,84,2.548,102,1.094,106,0.009,107,0.009,108,0.773,109,0.901,110,0.901,111,0.901,113,0.901,114,1.301,117,0.848,120,1.064,122,0.848,123,0.962,124,0.814,128,0.686,129,1.074,135,0.611,136,1.301,137,1.301,138,1.301,139,1.672,140,0.901,141,0.901,142,0.901,143,0.744,144,0.901,145,0.773,146,0.901,147,0.773,148,0.901,149,0.773,150,0.901,151,0.773,152,0.867,153,0.901,154,0.744,155,0.901,156,0.773,157,0.901,158,0.773,159,0.901,160,0.773,161,0.901,162,0.773,163,0.901,164,0.803,165,0.901,166,0.773,167,0.901,168,0.773,169,0.901,170,0.773,171,0.901,172,0.744,173,0.901,174,0.744,175,0.901,176,0.773,177,0.901,178,0.773,179,0.901,180,0.715,181,0.901,182,1.381,183,0.901,184,0.744,185,0.901,186,0.773,187,0.901,188,0.744,189,0.803,190,0.901,278,3.687,285,2.336,286,3.111,303,2.166,309,1.903,314,2.548,435,3.373,526,1.471,621,4.026,1118,2.336,1292,2.548,1505,2.833,1506,4.716,1507,4.716,1508,6.347,1509,4.716,1510,4.716,1511,4.716,1512,3.266,1513,3.266,1514,3.266,1515,3.266,1516,3.266,1517,5.536,1518,3.266,1519,4.716,1520,4.716,1521,4.716,1522,4.716,1523,4.716,1524,4.716,1525,4.716,1526,4.716,1527,4.716,1528,4.716,1529,4.716,1530,4.716,1531,6.063,1532,6.063,1533,4.716]],["title/modules/TableModule.html",[244,0.545,1534,2.798]],["body/modules/TableModule.html",[2,0.197,3,0.197,4,0.175,12,0.015,14,0.291,21,0.197,39,0.215,45,0.111,106,0.012,107,0.012,135,0.99,182,1.755,244,0.907,246,2.382,247,3.181,248,2.496,249,2.382,254,3.638,255,3.229,256,2.621,257,2.621,260,2.183,262,2.911,263,3.082,395,2.911,435,3.783,1387,4.039,1534,5.723,1535,4.589,1536,4.589,1537,4.589,1538,5.112,1539,5.289,1540,4.589]],["title/modules/TableRoutingModule.html",[244,0.545,1538,2.595]],["body/modules/TableRoutingModule.html",[2,0.215,3,0.215,4,0.191,12,0.015,14,0.283,18,0.265,21,0.215,39,0.191,45,0.121,73,1.316,106,0.013,107,0.013,182,1.566,239,2.28,244,0.805,260,2.304,270,3.18,271,3.464,272,3.18,273,3.18,274,3.368,1538,4.56,1540,5.014,1541,5.779]],["title/injectables/TeamService.html",[20,0.732,28,1.48]],["body/injectables/TeamService.html",[0,0.854,2,0.091,3,0.091,4,0.081,6,0.282,11,0.824,12,0.015,13,2.016,14,0.142,20,0.871,21,0.091,23,3.614,24,1.505,27,1.452,28,2.623,39,0.126,45,0.079,50,1.702,51,1.102,56,0.529,57,1.35,59,0.557,60,1.177,67,1.952,70,1.177,73,1.06,81,2.214,86,3.481,102,1.759,106,0.007,107,0.007,117,0.683,118,3.297,120,1.127,122,1.128,123,0.996,124,1.082,125,2.965,127,4.096,128,1.141,129,0.557,211,0.966,241,1.054,242,1.008,377,2.965,476,2.214,481,1.347,490,3.611,493,3.136,522,1.427,526,1.711,531,2.737,550,2.52,551,1.623,553,2.214,557,2.714,574,3.754,575,1.91,576,4.897,577,3.634,578,4.301,579,3.297,580,3.297,581,3.297,582,3.297,583,4.554,584,5.217,585,5.627,586,2.124,587,4.554,588,1.427,589,2.124,590,2.124,591,4.554,592,4.554,593,3.297,594,4.434,595,3.728,596,3.297,597,3.297,598,2.124,599,2.124,600,2.124,601,1.751,602,1.91,603,3.297,604,4.554,605,3.297,606,2.124,607,2.124,608,2.124,609,3.297,610,3.297,611,4.096,612,4.554,613,4.554,614,2.124,615,3.297,616,3.088,617,3.634,618,3.634,619,3.988,620,2.124,621,2.214,622,5.444,623,3.297,624,3.297,625,2.124,626,2.124,627,2.124,628,3.297,629,2.124,630,2.124,631,2.124,632,2.124,633,2.124,634,3.297,635,1.91,636,2.124,1542,2.448,1543,2.448,1544,3.8,1545,3.8,1546,3.8,1547,3.8,1548,2.448,1549,2.448,1550,2.448,1551,2.448,1552,2.448,1553,2.448,1554,2.448,1555,2.448,1556,2.448,1557,2.448,1558,2.448,1559,2.448]],["title/components/TeamadminComponent.html",[18,0.179,184,0.891]],["body/components/TeamadminComponent.html",[2,0.106,3,0.106,4,0.094,6,0.328,7,0.797,11,0.883,12,0.015,13,2.029,14,0.253,17,0.916,18,0.278,19,1.305,21,0.106,23,3.131,24,1.626,27,0.727,28,2.755,29,1.483,36,3.437,37,1.122,38,1.122,39,0.094,40,2.02,41,1.871,43,1.088,45,0.059,46,0.648,47,1.008,50,1.552,51,1.918,56,0.593,57,1.363,59,0.648,60,1.582,62,1.612,67,0.755,68,1.506,70,0.881,73,0.97,91,1.409,100,2.034,102,1.427,106,0.008,107,0.008,108,0.673,109,0.785,110,0.785,111,0.785,113,0.785,114,1.175,117,0.766,120,1.172,122,0.918,123,0.964,124,0.881,128,0.826,129,0.97,134,1.485,135,0.532,136,1.175,137,1.175,138,1.175,139,1.565,140,0.785,141,0.785,142,0.785,143,0.648,144,0.785,145,0.673,146,0.785,147,0.673,148,0.785,149,0.673,150,0.785,151,0.673,152,0.755,153,0.785,154,0.648,155,0.785,156,0.673,157,0.785,158,0.673,159,0.785,160,0.673,161,0.785,162,0.673,163,0.785,164,0.699,165,0.785,166,0.673,167,0.785,168,0.673,169,0.785,170,0.673,171,0.785,172,0.648,173,0.785,174,0.648,175,0.785,176,0.673,177,0.785,178,0.673,179,0.785,180,0.933,181,0.785,182,0.648,183,0.785,184,1.292,185,0.785,186,0.673,187,0.785,188,0.648,189,0.699,190,0.785,210,1.918,211,1.681,233,1.886,234,2.626,236,3.343,240,1.483,279,3.509,287,3.953,315,2.641,316,2.111,322,2.641,323,3.516,391,1.483,418,1.763,444,3.324,493,2.222,542,3.762,544,3.762,578,2.825,602,4.426,645,4.561,648,1.763,650,2.641,670,2.467,846,3.047,865,2.034,941,2.034,948,2.219,952,1.886,954,2.034,1035,3.696,1044,2.467,1046,2.467,1300,2.219,1303,3.696,1560,2.467,1561,4.26,1562,4.26,1563,5.673,1564,4.26,1565,4.26,1566,4.26,1567,4.26,1568,2.844,1569,6.377,1570,2.844,1571,4.26,1572,2.844,1573,2.844,1574,2.844,1575,2.844,1576,2.844,1577,2.844,1578,2.844,1579,2.844,1580,2.844,1581,2.844,1582,2.844,1583,2.844,1584,2.844,1585,2.844,1586,2.844,1587,4.26]],["title/guards/TeamadminGuard.html",[228,2.595,428,3.053]],["body/guards/TeamadminGuard.html",[2,0.188,3,0.188,4,0.167,6,0.583,11,0.805,12,0.015,14,0.27,20,1.185,21,0.188,39,0.167,45,0.106,47,1.196,56,0.704,106,0.012,107,0.012,117,1.138,120,1.145,122,1.138,123,1.005,124,1.093,128,1.056,228,3.352,231,5.83,232,5.949,233,3.352,234,2.988,236,3.486,239,1.994,240,2.636,241,2.175,242,2.082,428,4.944,453,4.201,457,4.289,460,2.636,461,3.133,490,3.139,527,2.727,1437,6.004,1588,5.055,1589,5.055,1590,5.055,1591,7.255,1592,7.255,1593,5.055,1594,5.055,1595,6.335]],["title/modules/TeamadminModule.html",[244,0.545,1596,2.798]],["body/modules/TeamadminModule.html",[2,0.198,3,0.198,4,0.176,12,0.015,14,0.291,21,0.198,39,0.216,45,0.111,106,0.012,107,0.012,135,0.994,184,1.757,244,0.909,246,2.391,247,3.186,248,2.506,249,2.391,254,3.642,255,3.237,256,2.631,257,2.631,260,2.189,262,2.922,263,3.095,395,2.922,444,4.144,1387,4.049,1596,5.727,1597,4.607,1598,4.607,1599,4.607,1600,5.117,1601,5.311,1602,4.607]],["title/modules/TeamadminRoutingModule.html",[244,0.545,1600,2.595]],["body/modules/TeamadminRoutingModule.html",[2,0.212,3,0.212,4,0.188,12,0.015,14,0.288,18,0.261,21,0.212,39,0.188,45,0.119,73,1.296,106,0.012,107,0.012,184,1.551,239,2.245,244,0.792,247,2.563,260,2.283,270,3.132,271,3.441,272,3.132,273,3.132,274,3.317,395,3.132,1387,3.528,1600,4.518,1602,4.938,1603,5.691]],["title/components/TeamsComponent.html",[18,0.179,186,0.926]],["body/components/TeamsComponent.html",[2,0.148,3,0.148,4,0.132,6,0.459,7,1.014,11,0.688,12,0.015,14,0.229,18,0.317,19,1.574,21,0.148,23,3.433,28,2.701,39,0.132,40,2.081,41,1.927,43,1.384,45,0.083,46,0.906,47,1.282,56,0.754,59,0.906,67,1.636,68,1.756,70,1.233,71,2.846,86,2.639,106,0.01,107,0.01,108,0.942,109,1.098,110,1.098,111,1.098,113,1.098,114,1.495,117,0.974,119,3.453,120,1.02,122,0.715,123,0.978,124,0.687,128,0.579,132,3.359,134,2.306,135,0.745,136,1.495,137,1.495,138,1.495,139,1.824,140,1.098,141,1.098,142,1.098,143,0.906,144,1.098,145,0.942,146,1.098,147,0.942,148,1.098,149,0.942,150,1.098,151,0.942,152,1.057,153,1.098,154,0.906,155,1.098,156,0.942,157,1.098,158,0.942,159,1.098,160,0.942,161,1.098,162,0.942,163,1.098,164,0.979,165,1.098,166,0.942,167,1.098,168,0.942,169,1.098,170,0.942,171,1.098,172,0.906,173,1.098,174,0.906,175,1.098,176,0.942,177,1.098,178,0.942,179,1.098,180,0.872,181,1.098,182,0.906,183,1.098,184,0.906,185,1.098,186,1.565,187,1.098,188,0.906,189,0.979,190,1.098,771,3.106,1423,4.701,1604,3.453,1605,5.418,1606,5.418,1607,5.418,1608,3.98,1609,3.98,1610,5.418]],["title/components/TournamentComponent.html",[18,0.179,188,0.891]],["body/components/TournamentComponent.html",[2,0.09,3,0.09,4,0.08,6,0.28,7,0.705,8,4.045,11,0.843,12,0.015,13,1.228,14,0.211,18,0.259,19,1.182,21,0.09,23,2.351,24,1.496,27,0.619,34,3.314,35,1.333,39,0.08,40,1.984,41,1.838,43,0.963,45,0.051,46,0.552,47,0.892,50,0.963,51,1.698,56,0.525,57,0.866,59,0.858,60,1.168,67,1.228,68,1.386,70,1.168,73,0.552,81,2.696,88,1.412,106,0.007,107,0.012,108,0.573,109,0.668,110,0.668,111,0.668,113,0.668,114,1.04,117,0.677,120,1.191,122,1.016,123,0.992,124,0.976,128,0.988,129,1.189,134,2.448,135,0.453,136,1.04,137,1.04,138,1.04,139,1.44,140,0.668,141,0.668,142,0.668,143,0.552,144,0.668,145,0.573,146,0.668,147,0.573,148,0.668,149,0.573,150,0.668,151,0.573,152,0.643,153,0.668,154,0.552,155,0.668,156,0.573,157,0.668,158,0.573,159,0.668,160,0.573,161,0.668,162,0.573,163,0.668,164,0.596,165,0.668,166,0.573,167,0.668,168,0.573,169,0.668,170,0.573,171,0.668,172,0.552,173,0.668,174,0.552,175,0.668,176,0.573,177,0.668,178,0.573,179,0.668,180,0.531,181,0.668,182,0.552,183,0.668,184,0.552,185,0.668,186,0.573,187,0.668,188,1.189,189,1.89,190,0.668,286,2.815,309,1.412,476,2.197,481,1.333,526,2.547,527,1.043,588,1.412,616,2.5,617,2.942,618,2.942,619,3.751,738,2.95,768,1.412,982,3.712,991,3.271,1005,3.296,1008,3.271,1104,3.611,1126,5.196,1127,4.907,1156,2.942,1310,3.271,1311,3.271,1320,3.271,1439,4.529,1441,3.271,1466,2.102,1467,2.102,1611,2.102,1612,3.77,1613,3.77,1614,5.221,1615,5.221,1616,3.77,1617,5.221,1618,3.77,1619,5.221,1620,3.77,1621,3.77,1622,3.77,1623,2.423,1624,2.423,1625,3.77,1626,2.423,1627,2.423,1628,2.423,1629,3.77,1630,2.423,1631,2.423,1632,2.423,1633,2.423,1634,2.423,1635,2.423,1636,2.423,1637,2.423,1638,2.423,1639,2.423,1640,2.423,1641,2.423,1642,2.423,1643,2.423,1644,2.423,1645,2.423,1646,2.423,1647,2.423,1648,2.423,1649,2.423,1650,2.423,1651,2.423,1652,5.656,1653,2.423,1654,2.423,1655,2.423,1656,2.423,1657,2.423,1658,3.77,1659,3.77,1660,2.423,1661,2.423,1662,2.423,1663,2.423,1664,3.77,1665,3.77,1666,3.77,1667,3.77,1668,3.77,1669,3.77,1670,3.77,1671,3.77,1672,3.77]],["title/modules/TournamentModule.html",[244,0.545,1673,2.798]],["body/modules/TournamentModule.html",[2,0.198,3,0.198,4,0.176,12,0.015,14,0.291,21,0.198,39,0.216,45,0.111,106,0.012,107,0.012,135,0.994,188,1.757,189,1.306,244,0.909,246,2.391,247,3.186,248,2.506,249,2.391,254,3.642,255,3.237,256,2.631,257,2.631,260,2.189,262,2.922,263,3.095,395,2.922,1387,4.049,1673,5.727,1674,4.607,1675,4.607,1676,4.607,1677,5.117,1678,5.311,1679,4.607]],["title/modules/TournamentRoutingModule.html",[244,0.545,1677,2.595]],["body/modules/TournamentRoutingModule.html",[2,0.214,3,0.214,4,0.19,12,0.015,14,0.282,18,0.264,21,0.214,39,0.19,45,0.12,73,1.31,106,0.013,107,0.013,188,1.561,239,2.27,244,0.801,247,2.591,260,2.297,270,3.166,271,3.457,272,3.166,273,3.166,274,3.353,1677,4.548,1679,4.992,1680,5.754]],["title/injectables/WebsocketService.html",[20,0.732,280,2.28]],["body/injectables/WebsocketService.html",[2,0.151,3,0.151,4,0.134,6,0.468,7,1.027,10,2.719,11,0.884,12,0.015,14,0.278,20,1.164,21,0.151,39,0.134,45,0.085,50,1.402,56,0.764,57,1.343,59,1.586,62,1.534,73,1.249,102,1.838,106,0.01,107,0.01,117,0.986,120,1.188,122,0.986,123,0.871,124,0.946,128,0.799,129,1.249,210,2.471,211,2.165,241,1.745,242,1.669,280,3.197,286,3.232,306,2.688,307,3.517,316,2.719,392,3.827,460,2.114,540,2.513,774,3.517,775,3.163,776,3.163,819,3.517,821,3.517,865,2.899,893,5.2,1005,3.197,1006,4.76,1101,3.517,1117,3.517,1177,2.513,1180,3.163,1300,3.163,1681,3.517,1682,7.466,1683,6.664,1684,7.178,1685,5.487,1686,4.054,1687,5.487,1688,4.054,1689,5.487,1690,6.963,1691,4.054,1692,4.054,1693,7.178,1694,4.054,1695,3.517,1696,4.054,1697,5.487,1698,3.517,1699,4.054,1700,4.054,1701,5.487,1702,4.054,1703,4.054,1704,4.054,1705,5.487,1706,4.054,1707,4.054,1708,4.054,1709,4.054,1710,4.054,1711,4.054,1712,4.054,1713,5.487,1714,4.054,1715,4.054,1716,4.054,1717,4.054,1718,4.054,1719,4.054,1720,4.054]],["title/coverage.html",[1721,4.179]],["body/coverage.html",[0,2.712,1,1.588,4,0.073,5,2.746,11,0.282,12,0.015,18,0.349,20,1.209,22,1.732,23,1,24,0.636,25,1.732,26,1.732,28,0.84,34,1.048,45,0.161,46,0.505,50,0.567,106,0.006,107,0.008,108,0.525,112,1.926,143,0.505,145,0.525,147,0.525,149,0.525,151,0.525,154,0.505,156,0.525,158,0.525,160,0.525,162,0.525,164,0.546,166,0.525,168,0.525,170,0.525,172,0.505,174,0.505,176,0.525,178,0.525,180,0.486,182,0.505,184,0.505,186,0.525,188,0.505,189,0.546,222,1.926,234,0.914,275,1.926,278,1.222,280,1.294,286,1,306,3.299,359,1.588,373,4.233,392,1.158,399,1.376,403,4.486,415,1.732,419,1.732,420,1.732,421,1.732,426,1.732,435,1.588,468,3.127,469,1.472,496,1.472,498,1.732,501,1.472,514,1.472,574,1.588,575,2.746,577,1.732,578,1.472,621,1.294,637,1.926,662,1.926,672,1.926,673,1.732,674,1.926,686,1.926,699,1.376,705,1.926,717,1.926,738,1.048,769,1.926,770,1.926,847,1.926,867,1.926,881,1.926,890,1.926,916,1.588,917,2.746,922,1.926,940,1.926,959,1.926,982,1.376,987,1.926,1005,4.816,1012,1.926,1033,1.926,1060,1.926,1096,1.472,1140,2.746,1178,1.732,1216,1.926,1246,1.926,1357,1.926,1390,1.926,1414,1.926,1424,1.926,1451,5.012,1468,1.926,1505,1.926,1508,1.926,1560,1.926,1604,1.926,1611,1.926,1681,1.926,1721,1.732,1722,2.22,1723,3.519,1724,2.22,1725,5.783,1726,5.783,1727,6.87,1728,5.771,1729,2.22,1730,5.424,1731,2.22,1732,4.372,1733,6.87,1734,3.519,1735,4.372,1736,2.22,1737,3.519,1738,2.22,1739,2.22,1740,2.22,1741,2.22,1742,6.618,1743,2.22,1744,2.22,1745,2.22,1746,2.22,1747,5.424,1748,2.22,1749,2.22,1750,6.273,1751,2.22,1752,2.22,1753,2.22,1754,2.22,1755,2.22,1756,6.87,1757,2.22,1758,2.22,1759,2.22,1760,2.22,1761,2.22,1762,2.22,1763,2.22,1764,3.519,1765,2.22,1766,2.22,1767,2.22,1768,2.22,1769,2.22,1770,2.22,1771,2.22,1772,2.22,1773,2.22,1774,1.926,1775,7.142,1776,1.926,1777,1.926,1778,4.719,1779,2.22,1780,2.22,1781,2.22,1782,2.22,1783,4.372,1784,2.22,1785,2.22,1786,2.22,1787,2.22,1788,1.926,1789,1.926,1790,1.926,1791,1.926,1792,3.053,1793,1.926,1794,2.22]],["title/dependencies.html",[246,2.121,1795,3.259]],["body/dependencies.html",[12,0.015,17,1.57,21,0.182,31,2.841,32,2.841,33,2.841,37,2.443,38,1.924,106,0.011,107,0.011,239,1.924,246,2.196,248,2.301,375,5.373,376,4.833,382,4.23,383,4.23,391,2.543,395,2.683,460,3.23,515,3.487,516,4.429,588,2.841,1177,3.022,1183,3.487,1695,4.23,1698,4.23,1721,3.805,1796,4.876,1797,7.993,1798,4.876,1799,4.876,1800,4.876,1801,4.876,1802,4.876,1803,4.876,1804,4.876,1805,4.876,1806,6.193,1807,4.876,1808,4.876,1809,4.876,1810,4.876,1811,4.876,1812,4.876,1813,4.876,1814,4.876,1815,4.876,1816,4.876,1817,4.876,1818,4.876,1819,4.876,1820,4.876,1821,4.876,1822,4.876,1823,4.876,1824,4.876,1825,4.876,1826,4.876,1827,4.876,1828,4.876,1829,4.876,1830,4.876,1831,4.876,1832,4.876,1833,4.876,1834,4.876,1835,4.876,1836,4.876,1837,4.876,1838,4.876,1839,4.876,1840,4.876,1841,4.876,1842,4.876,1843,4.876,1844,4.876,1845,4.876,1846,4.876,1847,4.876,1848,4.876]],["title/miscellaneous/enumerations.html",[1849,2.02,1850,4.086]],["body/miscellaneous/enumerations.html",[6,0.694,12,0.013,106,0.013,107,0.013,223,5.036,513,4.67,1016,6.109,1435,6.109,1451,4.771,1725,4.304,1726,5.505,1849,3.73,1850,5.221,1851,5.825,1852,7.042,1853,6.018,1854,6.018,1855,6.018]],["title/miscellaneous/functions.html",[403,3.368,1849,2.02]],["body/miscellaneous/functions.html",[6,0.589,11,0.81,12,0.015,106,0.013,107,0.012,122,1.408,123,1.243,124,1.352,249,3.374,316,2.529,373,3.983,403,3.65,404,4.428,406,4.428,408,4.428,410,4.428,412,4.428,415,4.974,419,4.974,420,4.974,421,4.974,426,4.974,465,4.227,486,3.164,539,4.559,747,4.933,1451,4.512,1725,3.65,1726,5.206,1774,5.53,1776,5.53,1777,5.53,1849,3.164,1851,5.424,1856,7.493,1857,5.104,1858,5.104,1859,5.104,1860,5.104,1861,5.104,1862,6.374]],["title/index.html",[6,0.376,1863,3.259,1864,3.259]],["body/index.html",[12,0.013,106,0.013,107,0.013,1451,3.957,1865,6.384,1866,6.384]],["title/modules.html",[244,0.746]],["body/modules.html",[12,0.012,106,0.012,107,0.012,244,0.739,245,3.798,253,3.522,254,2.506,355,3.292,364,3.798,370,3.522,371,3.292,376,6.209,692,3.798,696,3.522,1321,3.798,1325,3.522,1381,3.798,1385,3.522,1534,3.798,1538,3.522,1596,3.798,1600,3.522,1673,3.798,1677,3.522,1867,7.957,1868,7.957,1869,8.227,1870,8.007,1871,8.007]],["title/overview.html",[1872,4.646]],["body/overview.html",[0,1.205,12,0.015,18,0.158,20,0.646,39,0.114,45,0.072,46,1.301,106,0.009,107,0.009,108,1.352,135,0.646,143,1.301,145,1.662,147,1.352,149,1.352,151,1.662,154,1.301,156,1.352,158,1.352,160,1.352,162,1.352,164,1.405,166,1.352,168,1.352,170,1.662,172,1.301,174,1.301,176,1.352,178,1.662,180,1.252,182,1.301,184,1.301,186,1.352,188,1.301,228,2.291,244,0.684,245,5.615,246,1.556,247,1.556,248,1.631,249,1.556,250,2.998,251,2.998,252,2.998,253,3.789,254,3.825,255,2.433,256,1.712,257,1.712,271,1.631,355,3.541,364,5.532,365,2.998,366,2.998,367,2.998,368,2.998,369,2.998,370,3.789,371,4.45,372,4.086,692,5.412,693,2.998,694,2.998,695,2.998,696,3.789,999,2.998,1321,5.298,1322,2.998,1323,2.998,1324,2.998,1325,3.789,1381,5.134,1382,2.998,1383,2.998,1384,2.998,1385,3.789,1485,2.998,1486,2.998,1488,2.998,1534,5.134,1535,2.998,1536,2.998,1537,2.998,1538,3.789,1596,5.134,1597,2.998,1598,2.998,1599,2.998,1600,3.789,1673,5.134,1674,2.998,1675,2.998,1676,2.998,1677,3.789,1872,2.998,1873,3.455,1874,3.455,1875,3.455,1876,3.455,1877,3.455,1878,3.455]],["title/routes.html",[271,2.527]],["body/routes.html",[12,0.013,106,0.013,107,0.013,271,3.028]],["title/miscellaneous/variables.html",[1778,3.675,1849,2.02]],["body/miscellaneous/variables.html",[6,0.571,11,0.943,12,0.015,27,1.597,50,1.265,106,0.011,107,0.011,210,3.415,211,2.992,306,5.311,399,4.248,418,4.463,498,5.348,562,3.068,1451,3.875,1725,3.54,1726,4.472,1778,3.862,1788,4.294,1789,4.294,1790,4.294,1791,4.294,1792,4.294,1793,5.946,1849,3.068,1851,3.862,1879,6.252,1880,4.95,1881,4.95,1882,4.95,1883,4.95,1884,4.95,1885,4.95,1886,4.95,1887,7.79,1888,7.2,1889,7.2,1890,7.2,1891,7.2,1892,4.95,1893,7.2,1894,6.252,1895,4.95,1896,4.95,1897,4.95]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1005,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["0.12.0",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":619,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["1.1.0",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1873,"title":{},"body":{"overview.html":{}}}],["2",{"_index":999,"title":{},"body":{"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["2.4.8",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1878,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1874,"title":{},"body":{"overview.html":{}}}],["2500",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["28",{"_index":1876,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["3.30.15",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1375,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["31",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["36/37",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["36/77",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":984,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.1.2",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["6.0.16",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["9",{"_index":1875,"title":{},"body":{"overview.html":{}}}],["97",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["_currentseason",{"_index":1431,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1453,"title":{},"body":{"injectables/SeasonService.html":{}}}],["a.name.tolowercas",{"_index":617,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["access_tim",{"_index":1129,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessor",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["achtelfinal",{"_index":1666,"title":{},"body":{"components/TournamentComponent.html":{}}}],["activatedrout",{"_index":1362,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1591,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["add",{"_index":838,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["addmatch",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addmatch'},{'nam",{"_index":142,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["addnewteam",{"_index":118,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamnam",{"_index":125,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{}}}],["addteam'},{'nam",{"_index":141,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addteam.component.css",{"_index":115,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":116,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.compon",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcompon",{"_index":108,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtournamentround.component.html",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addtournamentround/addtournamentround.compon",{"_index":988,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcompon",{"_index":46,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":144,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["admin.compon",{"_index":261,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":143,"title":{"components/AdminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":229,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["adminmodul",{"_index":245,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodul",{"_index":253,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplet",{"_index":721,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["all_matchday",{"_index":1307,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_team",{"_index":1313,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["angular/anim",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/d",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1335,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divid",{"_index":1339,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1337,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1341,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1333,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1331,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["api.t",{"_index":1726,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api/liga",{"_index":1450,"title":{},"body":{"injectables/SeasonService.html":{}}}],["api_base_url",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicli",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["app.compon",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["app_rout",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodul",{"_index":355,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["application/json",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["appmodul",{"_index":364,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":370,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["array",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1003,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["async",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["auth.interceptor",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationservic",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":372,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authservic",{"_index":236,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_nam",{"_index":1378,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["avail",{"_index":1871,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":891,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["b",{"_index":616,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.name.tolowercas",{"_index":618,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["base64",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercas",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercas",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["baseurl",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["basic",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":1442,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1443,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.19",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["blob",{"_index":1858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":1857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bodi",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["body).subscrib",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.date_period",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.from",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.to",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.email",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.first_nam",{"_index":1044,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.label",{"_index":810,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.last_nam",{"_index":1046,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.location_latitud",{"_index":812,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitud",{"_index":813,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.new_password",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["body.password",{"_index":1041,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.phon",{"_index":1582,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["body.pitch_id",{"_index":797,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.rol",{"_index":1048,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.target_path",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["body.team",{"_index":1043,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.team_pair",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["boolean",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["boolean(this.accesstoken",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":248,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":1006,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["brows",{"_index":1869,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["button.add",{"_index":1059,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["button.back",{"_index":844,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":845,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.change_password",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["button.clos",{"_index":671,"title":{},"body":{"components/ContactComponent.html":{}}}],["button.create_pitch",{"_index":837,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_team",{"_index":133,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tourna",{"_index":1009,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1136,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1135,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1010,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_tim",{"_index":1137,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":842,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":661,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.sav",{"_index":846,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.set_tim",{"_index":219,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.start_round",{"_index":221,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["c1",{"_index":1441,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c1.id",{"_index":1466,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2",{"_index":1439,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2.id",{"_index":1467,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["cach",{"_index":622,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.filter(t",{"_index":627,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.find(t",{"_index":632,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.push",{"_index":629,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cacheteamsinseason",{"_index":574,"title":{"interfaces/CacheTeamsInSeason.html":{}},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["call",{"_index":604,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["canactiv",{"_index":231,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":1590,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":715,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["cancelled_at",{"_index":1219,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["canload",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["case",{"_index":1713,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["catch",{"_index":865,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["cdref",{"_index":739,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":740,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":892,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":897,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'nam",{"_index":148,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["changepassword(oldpassword",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":638,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":639,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordbodi",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["changepasswordcompon",{"_index":147,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charset=utf",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["checknewpitchnam",{"_index":730,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":45,"title":{"classes/Credentials.html":{},"classes/MatchViewModel.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["cluster_adminmodul",{"_index":250,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":251,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":252,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodul",{"_index":693,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declar",{"_index":694,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_import",{"_index":695,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_matchplanmodul",{"_index":1322,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declar",{"_index":1323,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_import",{"_index":1324,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodul",{"_index":1382,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declar",{"_index":1383,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_import",{"_index":1384,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1485,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1486,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1488,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1487,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodul",{"_index":1535,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declar",{"_index":1536,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_import",{"_index":1537,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodul",{"_index":1597,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declar",{"_index":1598,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_import",{"_index":1599,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodul",{"_index":1674,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declar",{"_index":1675,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_import",{"_index":1676,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codaci",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["command",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":1387,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["compon",{"_index":18,"title":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":140,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["components/admin#adminmodul",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.compon",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodul",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.compon",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodul",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodul",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1498,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.compon",{"_index":1491,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.compon",{"_index":1495,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.compon",{"_index":1493,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.compon",{"_index":1494,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.compon",{"_index":1490,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.compon",{"_index":1492,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.compon",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodul",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodul",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodul",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["connect",{"_index":1682,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('error",{"_index":1715,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error(error",{"_index":1303,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{}}}],["console.log(error",{"_index":866,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["const",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["constructor(activatedrout",{"_index":1361,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["constructor(apicli",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["constructor(authservic",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1500,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1072,"title":{},"body":{"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":194,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{}}}],["constructor(formbuild",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(match",{"_index":737,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(matchservic",{"_index":1686,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["constructor(pitchservic",{"_index":1417,"title":{},"body":{"components/PitchesComponent.html":{}}}],["constructor(priv",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(publ",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/SeasonchooserComponent.html":{}}}],["constructor(seasonservic",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(teamservic",{"_index":119,"title":{},"body":{"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(token",{"_index":702,"title":{},"body":{"classes/Credentials.html":{}}}],["constructor(translateservic",{"_index":895,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservic",{"_index":706,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":152,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact'},{'nam",{"_index":150,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact.component.css",{"_index":663,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":664,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":685,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_nam",{"_index":680,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.last_nam",{"_index":681,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phon",{"_index":683,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.compon",{"_index":1095,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":684,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_person",{"_index":578,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactPersonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"coverage.html":{}}}],["contact_phon",{"_index":682,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcompon",{"_index":149,"title":{"components/ContactComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlist",{"_index":687,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'nam",{"_index":155,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contactlist.compon",{"_index":698,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":688,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":689,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcompon",{"_index":154,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodul",{"_index":692,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodul",{"_index":696,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncompon",{"_index":151,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts.push(this.match.guest_team.id",{"_index":1124,"title":{},"body":{"components/MatchComponent.html":{}}}],["contacts.push(this.match.home_team.id",{"_index":1123,"title":{},"body":{"components/MatchComponent.html":{}}}],["context",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.t",{"_index":357,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverag",{"_index":1721,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["creat",{"_index":605,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createform",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematch",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["creatematchdaysbodi",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["createnewpitch",{"_index":731,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtourna",{"_index":966,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(nam",{"_index":972,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbodi",{"_index":770,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["createroundnr",{"_index":963,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseasonbodi",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["createteambodi",{"_index":577,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["createteamparam",{"_index":606,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createteamparams.nam",{"_index":607,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createtournamentbodi",{"_index":987,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["createus",{"_index":1018,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodi",{"_index":1033,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["createuserbodyrol",{"_index":1016,"title":{},"body":{"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createuserbodyrole.admin",{"_index":1058,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodyrole.team_manag",{"_index":1049,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["cred",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credenti",{"_index":501,"title":{"classes/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["credentials(data.token",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["currentlang",{"_index":894,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1425,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchang",{"_index":1472,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(ev",{"_index":1475,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":359,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["danger",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["data.guestteamnam",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["data.hometeamnam",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["data.messag",{"_index":1504,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":215,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["date",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1130,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":887,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1310,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1131,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1138,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":889,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1320,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1139,"title":{},"body":{"components/MatchComponent.html":{}}}],["date_period",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["datetim",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["datetimeadapt",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["de",{"_index":900,"title":{},"body":{"injectables/I18Service.html":{}}}],["declar",{"_index":247,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":203,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":210,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":910,"title":{},"body":{"injectables/I18Service.html":{}}}],["defin",{"_index":120,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["delay",{"_index":1700,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["delet",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/TableComponent.html":{}}}],["dep",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":246,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":1542,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1108,"title":{},"body":{"components/MatchComponent.html":{}}}],["direct",{"_index":138,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["displaypitch",{"_index":732,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["displaypitch(pitch",{"_index":745,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["document",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["document.body.appendchild(tag",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":110,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["durat",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{}}}],["dynam",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":1134,"title":{},"body":{"components/MatchComponent.html":{}}}],["edit_round",{"_index":214,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":1587,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":718,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'nam",{"_index":157,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":719,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":720,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":849,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":850,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.tim",{"_index":868,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'nam",{"_index":161,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.time.component.css",{"_index":869,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":870,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.compon",{"_index":1099,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.compon",{"_index":1097,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.compon",{"_index":1098,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcompon",{"_index":156,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":848,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'nam",{"_index":159,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatchresultcompon",{"_index":158,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecompon",{"_index":160,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":967,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":137,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["email",{"_index":601,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"injectables/TeamService.html":{}}}],["emailformcontrol",{"_index":1563,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["empti",{"_index":592,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["en",{"_index":901,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["englisch",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycompon",{"_index":259,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":1850,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.serverurl",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.wsserverurl",{"_index":1703,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["environments/environ",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["errors.enter_valid_email",{"_index":1055,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["errors.enter_valid_password",{"_index":658,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["errors.password_token_invalid",{"_index":1380,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pipe(delay(60000",{"_index":1709,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["errors.pitch_exist",{"_index":840,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":660,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":201,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["event.valu",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageusersComponent.html":{}}}],["eventemitt",{"_index":1077,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["everyth",{"_index":581,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["exampl",{"_index":1543,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["extend",{"_index":709,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"classes/MatchViewModel.html":{}}}],["fals",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filter_list",{"_index":1314,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteract",{"_index":1257,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitch",{"_index":722,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["filterpitch",{"_index":733,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["filterpitches(searchterm",{"_index":748,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["final",{"_index":1669,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["first_nam",{"_index":599,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["first_name_requir",{"_index":1056,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["firstnam",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["flexlayoutmodul",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["forgot_password",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["formatd",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdate(d",{"_index":1859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formbuild",{"_index":741,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":645,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":763,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodul",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":593,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["fromj",{"_index":1225,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["fromjs(data",{"_index":1240,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["full",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":403,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["game",{"_index":1011,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1001,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["genround",{"_index":968,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get",{"_index":1863,"title":{"index.html":{}},"body":{}}],["get_currentseason",{"_index":1446,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentlang",{"_index":903,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteract",{"_index":1283,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthent",{"_index":506,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmatchday",{"_index":1251,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(id",{"_index":1259,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).end_d",{"_index":1319,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).numb",{"_index":1317,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).start_d",{"_index":1318,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getmatchdaysinseason",{"_index":1142,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchdaysinseason(seasonid",{"_index":1153,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesinseason",{"_index":1143,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesinseason(seasonid",{"_index":1155,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesintourna",{"_index":1144,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesintournament(tournamentid",{"_index":1158,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getpitch",{"_index":1399,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid",{"_index":1392,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid(id",{"_index":1395,"title":{},"body":{"injectables/PitchService.html":{}}}],["getround",{"_index":1616,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(matchdayid",{"_index":1622,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).end_d",{"_index":1672,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).numb",{"_index":1670,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_d",{"_index":1671,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getroundsintourna",{"_index":1145,"title":{},"body":{"injectables/MatchService.html":{}}}],["getroundsintournament(tournamentid",{"_index":1160,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getselectedmatchday",{"_index":1275,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1279,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsingleteam",{"_index":1544,"title":{},"body":{"injectables/TeamService.html":{}}}],["getsingleteam(teamid",{"_index":634,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteam",{"_index":1556,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid",{"_index":1545,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(id",{"_index":603,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteamcontactbyid",{"_index":1546,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamcontactbyid(id",{"_index":596,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["gettourna",{"_index":1635,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinn",{"_index":1617,"title":{},"body":{"components/TournamentComponent.html":{}}}],["given",{"_index":591,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["googelmapsscript",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplet",{"_index":765,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeel",{"_index":803,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsj",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1870,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":228,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_scor",{"_index":851,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["guest_team",{"_index":1217,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guest_team_id",{"_index":1220,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guestscor",{"_index":1173,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["guestteam",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["guestteamid",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["guestteamnam",{"_index":1121,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["halbfinal",{"_index":1668,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerj",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatch",{"_index":1252,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["header",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["headers.append('author",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('cont",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["hi",{"_index":1377,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_match",{"_index":1315,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplay",{"_index":1069,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplay",{"_index":1249,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home_scor",{"_index":852,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["home_team",{"_index":1218,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["home_team_id",{"_index":1221,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["homescor",{"_index":1172,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hometeam",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["hometeamid",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["hometeamnam",{"_index":1119,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hostlisten",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":136,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["http://192.168.178.23/api",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpclientmodul",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheader",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":452,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["i18n/d",{"_index":905,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":906,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18servic",{"_index":34,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactori",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provid",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["ichangepasswordbodi",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["iclient",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["icon",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["icontact_person",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["icreatematchdaysbodi",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["icreatepitchbodi",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["icreateseasonbodi",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["icreateteambodi",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["icreatetournamentbodi",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["icreateuserbodi",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["id",{"_index":595,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ManagetournamentComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["idate_period",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["identifi",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["iidentifi",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["ilocatematchbodi",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["imatch",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["imatch_day",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["inherit",{"_index":1230,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["init",{"_index":893,"title":{},"body":{"injectables/I18Service.html":{},"classes/MatchViewModel.html":{},"injectables/WebsocketService.html":{}}}],["init(data",{"_index":1242,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["initi",{"_index":610,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["initloadteam",{"_index":612,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["inject",{"_index":20,"title":{"injectables/AuthenticationService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"injectables/WebsocketService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(api_base_url",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["inject(mat_dialog_data",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":921,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectiontoken('api_base_url",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":677,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["inputstream",{"_index":1683,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["intercept",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":451,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":447,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchUpdateMessage.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{},"overview.html":{}}}],["ipitch",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["irank",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["iranking_posit",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["isadmin",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthent",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["ischedulematchbodi",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["iseason",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["isemailvalidorempti",{"_index":1564,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1567,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isendpasswordresetmailbodi",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["isetroundbodi",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["isload",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplay",{"_index":1146,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1162,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["isnackbardata",{"_index":916,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnewmatchday",{"_index":1253,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnewmatchday(match",{"_index":1262,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnumb",{"_index":1063,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(v",{"_index":1078,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isubmitmatchresultbodi",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["isvalidresult",{"_index":1147,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(scor",{"_index":1164,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["iteam",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["iteam_pair",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["itourna",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["iuser",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["jqueri",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('cache_teams_in_season",{"_index":625,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(localstorage.getitem('pitch",{"_index":1403,"title":{},"body":{"injectables/PitchService.html":{}}}],["json.parse(localstorage.getitem('selected_matchday",{"_index":1287,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1452,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.parse(localstorage.getitem('selected_tourna",{"_index":1639,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.parse(localstorage.getitem('team",{"_index":586,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(messag",{"_index":1710,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(bodi",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(cach",{"_index":631,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.stringify(data",{"_index":1719,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(season",{"_index":1455,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(t",{"_index":1642,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.stringify(valu",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["karma",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["kickoff",{"_index":884,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["kickoffset",{"_index":872,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(ev",{"_index":874,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["lang",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{}}}],["languag",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["last_nam",{"_index":600,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["last_name_requir",{"_index":1057,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["lastnam",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["launcher",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":135,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["length",{"_index":1184,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["libraries=plac",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":1865,"title":{},"body":{"index.html":{}}}],["line",{"_index":1183,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1182,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["list",{"_index":583,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["load",{"_index":611,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["load/sav",{"_index":580,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadallteam",{"_index":613,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadalltourna",{"_index":969,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpitch",{"_index":1393,"title":{},"body":{"injectables/PitchService.html":{}}}],["loadrank",{"_index":1509,"title":{},"body":{"components/TableComponent.html":{}}}],["loadranking(season",{"_index":1511,"title":{},"body":{"components/TableComponent.html":{}}}],["loadseason",{"_index":1429,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasoninprogress",{"_index":1428,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasons(st",{"_index":1434,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadteamsinseason",{"_index":1547,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadteamsinseason(seasonid",{"_index":624,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadus",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localed",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorag",{"_index":584,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.getitem('lang",{"_index":911,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_team",{"_index":1288,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('cache_teams_in_season",{"_index":630,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.setitem('lang",{"_index":914,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('pitch",{"_index":1405,"title":{},"body":{"injectables/PitchService.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1286,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1454,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1290,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tourna",{"_index":1641,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('team",{"_index":590,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["locat",{"_index":1421,"title":{},"body":{"components/PitchesComponent.html":{}}}],["locatematchbodi",{"_index":769,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["location_off",{"_index":830,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":834,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":163,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["login.component.css",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincompon",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":496,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["mail",{"_index":1569,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manag",{"_index":1451,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["manageseason'},{'nam",{"_index":165,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageseason/manageseason.compon",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncompon",{"_index":164,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetourna",{"_index":960,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'nam",{"_index":167,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["managetournament.component.css",{"_index":961,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":962,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.compon",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.compon",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcompon",{"_index":166,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentround",{"_index":964,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageus",{"_index":1013,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'nam",{"_index":169,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageusers.component.css",{"_index":1014,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1015,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/manageusers.compon",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscompon",{"_index":168,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":773,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["map((pitch",{"_index":790,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["map(valu",{"_index":787,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["mat_dialog_data",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["mat_snack_bar_data",{"_index":918,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_opt",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodul",{"_index":1345,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":1334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["match'},{'nam",{"_index":171,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["match.component.css",{"_index":1061,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1062,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.guest_scor",{"_index":1126,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":1657,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.nam",{"_index":829,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.guest_team_id",{"_index":1660,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_scor",{"_index":1127,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":1656,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.nam",{"_index":828,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.home_team_id",{"_index":1662,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":886,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch.label",{"_index":833,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.servic",{"_index":1696,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["match:2404",{"_index":1231,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2405",{"_index":1232,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2406",{"_index":1233,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2407",{"_index":1234,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2408",{"_index":1235,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2409",{"_index":1236,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2410",{"_index":1237,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2411",{"_index":1238,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2412",{"_index":1239,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2423",{"_index":1243,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2437",{"_index":1241,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2444",{"_index":1245,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match_day",{"_index":982,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["match_day_id",{"_index":1222,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["matchcompon",{"_index":170,"title":{"components/MatchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchconvert",{"_index":1148,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverter(match",{"_index":1167,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchconverterarray",{"_index":1149,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray(match",{"_index":1169,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchday",{"_index":1189,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{}}}],["matchday.end_d",{"_index":1312,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.numb",{"_index":1308,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.start_d",{"_index":1309,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompar",{"_index":1254,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompare(md1",{"_index":1264,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdayid",{"_index":1156,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TournamentComponent.html":{}}}],["matchdayid).subscrib",{"_index":1186,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matches.foreach((match",{"_index":1205,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchid",{"_index":1118,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TableComponent.html":{}}}],["matchkickoff",{"_index":871,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["matchplan",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{}}}],["matchplan'},{'nam",{"_index":173,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["matchplan.compon",{"_index":1327,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1247,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1248,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplancompon",{"_index":172,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplanmodul",{"_index":1321,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodul",{"_index":1325,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":1209,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult).subscrib",{"_index":1213,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.guest_scor",{"_index":1210,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.home_scor",{"_index":1211,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchservic",{"_index":286,"title":{"injectables/MatchService.html":{}},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["matchupd",{"_index":1141,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchupdatemessag",{"_index":1096,"title":{"interfaces/MatchUpdateMessage.html":{}},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["matchviewmodel",{"_index":738,"title":{"classes/MatchViewModel.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matchviewmodel(match",{"_index":1194,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matdatepickermodul",{"_index":1349,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodul",{"_index":1342,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{}}}],["matdividermodul",{"_index":1338,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materi",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["material.modul",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodul",{"_index":371,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":998,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["maticonmodul",{"_index":1336,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1344,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1348,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1347,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":1350,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":1353,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1356,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchang",{"_index":1024,"title":{},"body":{"components/ManageusersComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodul",{"_index":1340,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":1332,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":1354,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1355,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodul",{"_index":1352,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":1343,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":1346,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1330,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1351,"title":{},"body":{"modules/MaterialModule.html":{}}}],["md1",{"_index":1267,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md1.id",{"_index":1304,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2",{"_index":1265,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2.id",{"_index":1305,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["mechan",{"_index":623,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["memberof",{"_index":585,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["menu.admin",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contact",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.t",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tourna",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":113,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["method",{"_index":117,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["miscellan",{"_index":1849,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/match.viewmodel",{"_index":768,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["modul",{"_index":244,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":1101,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["msg.matchid",{"_index":1103,"title":{},"body":{"components/MatchComponent.html":{}}}],["msg.type",{"_index":1712,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["multi",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["mv",{"_index":1193,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.guest_team",{"_index":1197,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.home_team",{"_index":1195,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.kickoff",{"_index":1201,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.kickoff.gettimezoneoffset",{"_index":1203,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.kickoff.setminutes(mv.kickoff.getminut",{"_index":1202,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mv.pitch",{"_index":1199,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mvwa",{"_index":1204,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mvwa.push(this.matchconverter(match",{"_index":1206,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["name",{"_index":123,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["nbsp",{"_index":1311,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1128,"title":{},"body":{"components/MatchComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_kickoff_tim",{"_index":888,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_pitch",{"_index":835,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":843,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":839,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newmatchpitch",{"_index":723,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newmatchpitch.label",{"_index":836,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpassword",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'nam",{"_index":175,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["newpassword.compon",{"_index":1388,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1358,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1359,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcompon",{"_index":174,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodul",{"_index":1381,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodul",{"_index":1385,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":724,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":725,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":726,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplac",{"_index":782,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":727,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newroundplandateto",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newwinn",{"_index":1618,"title":{},"body":{"components/TournamentComponent.html":{}}}],["newwinner(match",{"_index":1625,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clon",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":260,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngoninit",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["no_contact_set",{"_index":1423,"title":{},"body":{"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":831,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1132,"title":{},"body":{"components/MatchComponent.html":{}}}],["nswag",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/WebsocketService.html":{}}}],["numberconnect",{"_index":1684,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["object",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/LoginContext.html":{},"guards/TeamadminGuard.html":{}}}],["old_kickoff_tim",{"_index":885,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":832,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":640,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchangeteamselect",{"_index":1019,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["onchangeteamselect(ev",{"_index":1023,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["onlangselect",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":734,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":752,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclick",{"_index":735,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":736,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselect",{"_index":970,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmod",{"_index":1064,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1065,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog(match",{"_index":1082,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1066,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog(match",{"_index":1084,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1067,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog(match",{"_index":1086,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":124,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":257,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1070,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":1872,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":358,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodul",{"_index":1496,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodul",{"_index":1497,"title":{},"body":{"modules/SharedModule.html":{}}}],["p.label",{"_index":823,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["p.label.tolowercase().indexof(searchterm.tolowercas",{"_index":794,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["packag",{"_index":1795,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":594,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/NewpasswordComponent.html":{},"injectables/TeamService.html":{}}}],["paramet",{"_index":122,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params['token",{"_index":1369,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["pars",{"_index":1716,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["passbase64",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["password",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{}}}],["password_forgot_text",{"_index":1379,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_requir",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordforgot",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":273,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perm_contact_calendar",{"_index":1133,"title":{},"body":{"components/MatchComponent.html":{}}}],["person",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'nam",{"_index":153,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["person.compon",{"_index":1499,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":675,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":676,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.t",{"_index":674,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":678,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":679,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":673,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":602,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["pick",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":786,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitch",{"_index":699,"title":{},"body":{"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"classes/MatchViewModel.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["pitch.label",{"_index":795,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch.servic",{"_index":1180,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/WebsocketService.html":{}}}],["pitch_contact",{"_index":1422,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":1223,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["pitch_requir",{"_index":841,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchad",{"_index":1391,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches'},{'nam",{"_index":177,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["pitches(valu",{"_index":1404,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches.component.css",{"_index":1415,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1416,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescompon",{"_index":176,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchexist",{"_index":825,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid",{"_index":815,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":817,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservic",{"_index":392,"title":{"injectables/PitchService.html":{}},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["pitchservicefactori",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pitchservicefactory(provid",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["place",{"_index":728,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":807,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":809,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":218,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":220,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["popper.j",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_go",{"_index":1532,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draw",{"_index":1529,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.loss",{"_index":1530,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.match",{"_index":1527,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.numb",{"_index":1525,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.point",{"_index":1533,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_go",{"_index":1531,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.win",{"_index":1528,"title":{},"body":{"components/TableComponent.html":{}}}],["prepar",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["privat",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["product",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promis",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["provid",{"_index":249,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["providedin",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["provider.init",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.initloadteam",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.load",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.loadseasoninprogress",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["queue",{"_index":1695,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["queueingsubject",{"_index":1693,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rank",{"_index":1508,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["ranking_posit",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["re",{"_index":1051,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["reactiveformsmodul",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["redirectto",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registerlocaledata",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localed",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["relat",{"_index":582,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["remove_red_ey",{"_index":659,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removeteam",{"_index":191,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["req",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('author",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":1793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":256,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resolv",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(fals",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(matchday",{"_index":1190,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(nul",{"_index":1465,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(pitch",{"_index":1412,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(seasons.filter(",{"_index":1463,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(team",{"_index":636,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.sort((a",{"_index":615,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.teams.sort((a",{"_index":633,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(this.matchconverter(match",{"_index":1215,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.matchconverterarray(match",{"_index":1187,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.pitch",{"_index":1413,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(this.team",{"_index":620,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(tru",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(us",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["respons",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["response.body['email",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['first_nam",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['last_nam",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.headers.get('x",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultupd",{"_index":1071,"title":{},"body":{"components/MatchComponent.html":{}}}],["retrywhen",{"_index":1699,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["retrywhen(error",{"_index":1708,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["return",{"_index":128,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["root",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["round",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["rout",{"_index":271,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodul",{"_index":272,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":274,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1592,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routing.modul",{"_index":262,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.t",{"_index":270,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxj",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":774,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["s.state",{"_index":1464,"title":{},"body":{"injectables/SeasonService.html":{}}}],["save",{"_index":712,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["savecontact",{"_index":1565,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":1571,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["schedulematchbodi",{"_index":881,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["score",{"_index":1166,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["screen",{"_index":1107,"title":{},"body":{"components/MatchComponent.html":{}}}],["searchterm",{"_index":750,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["season",{"_index":621,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["season.nam",{"_index":1484,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchang",{"_index":1473,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoos",{"_index":1469,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'nam",{"_index":179,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["seasonchooser.component.css",{"_index":1470,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1471,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercompon",{"_index":178,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompar",{"_index":1430,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1438,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncr",{"_index":1426,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonid",{"_index":576,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["seasoninprogress",{"_index":1427,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonservic",{"_index":278,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonservicefactori",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["seasonservicefactory(provid",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["seasonst",{"_index":1435,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/enumerations.html":{}}}],["selectedmatchday",{"_index":1255,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchday(valu",{"_index":1285,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1256,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(valu",{"_index":1289,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["send",{"_index":1685,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["send(data",{"_index":1689,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmatchupdatedmsg",{"_index":1068,"title":{},"body":{"components/MatchComponent.html":{}}}],["sendpasswordresetmailbodi",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["serverurl",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":579,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["services/authentication.servic",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.servic",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.servic",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/pitch.servic",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.servic",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.servic",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["services/websocket.servic",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchComponent.html":{}}}],["set",{"_index":588,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set_currentseason(season",{"_index":1448,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(valu",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setpitches(valu",{"_index":1401,"title":{},"body":{"injectables/PitchService.html":{}}}],["setplandatefrom",{"_index":192,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(ev",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setplandateto",{"_index":193,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(ev",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setroundbodi",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["setselectedmatchday(valu",{"_index":1277,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(valu",{"_index":1281,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setteams(valu",{"_index":1558,"title":{},"body":{"injectables/TeamService.html":{}}}],["settournament(t",{"_index":1637,"title":{},"body":{"components/TournamentComponent.html":{}}}],["share",{"_index":1701,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["shared.modul",{"_index":263,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/models/websocket.model",{"_index":776,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["shared/snackbar/snackbar.compon",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodul",{"_index":254,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":729,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["snackbar",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'nam",{"_index":181,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["snackbar.component.css",{"_index":920,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":919,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.compon",{"_index":1100,"title":{},"body":{"components/MatchComponent.html":{}}}],["snackbarcompon",{"_index":180,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["spec\\.t",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":1856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.t",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.t",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../liga",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api",{"_index":771,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamsComponent.html":{}}}],["src/api/liga",{"_index":1725,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":356,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.t",{"_index":448,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":450,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.t",{"_index":112,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":130,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":126,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:9",{"_index":121,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/admin",{"_index":269,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.t",{"_index":230,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.t",{"_index":258,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.t",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.t",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21",{"_index":207,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22",{"_index":206,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24",{"_index":212,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":209,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":208,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":195,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":205,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":213,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":204,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45",{"_index":198,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49",{"_index":196,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60",{"_index":199,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64",{"_index":197,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78",{"_index":200,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82",{"_index":202,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.t",{"_index":959,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:14",{"_index":986,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:15",{"_index":981,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":985,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":979,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":983,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":971,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":980,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":977,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":976,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:37",{"_index":973,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:45",{"_index":978,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:50",{"_index":975,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:61",{"_index":974,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.t",{"_index":1012,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:16",{"_index":1030,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:17",{"_index":1032,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:19",{"_index":1031,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:21",{"_index":1026,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:23",{"_index":1027,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:24",{"_index":1028,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:25",{"_index":1029,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:26",{"_index":1020,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:43",{"_index":1022,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:47",{"_index":1025,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:51",{"_index":1021,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.t",{"_index":637,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":646,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":647,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":641,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":644,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":643,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":642,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":701,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.t",{"_index":686,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":691,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":690,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.t",{"_index":697,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.t",{"_index":1414,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1418,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:18",{"_index":1419,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.t",{"_index":1604,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":1607,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:18",{"_index":1608,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:41",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1328,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.t",{"_index":1246,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:16",{"_index":1272,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1271,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:18",{"_index":1269,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1278,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1276,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1274,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1280,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1282,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:37",{"_index":1284,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1258,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1273,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:48",{"_index":1270,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:51",{"_index":1268,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:64",{"_index":1261,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:76",{"_index":1266,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:80",{"_index":1260,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:84",{"_index":1263,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.t",{"_index":1326,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1389,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.t",{"_index":1357,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1367,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:18",{"_index":1363,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:23",{"_index":1366,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:33",{"_index":1364,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:49",{"_index":1365,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.t",{"_index":1386,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":672,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.t",{"_index":662,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":665,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":667,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":668,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":666,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.t",{"_index":717,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:113",{"_index":743,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":759,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:20",{"_index":757,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":767,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":760,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":761,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:25",{"_index":764,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":762,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:28",{"_index":766,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:29",{"_index":742,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:32",{"_index":758,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":751,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:57",{"_index":749,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:61",{"_index":746,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:65",{"_index":753,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:69",{"_index":754,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":755,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:92",{"_index":744,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.t",{"_index":847,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:13",{"_index":856,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:14",{"_index":853,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:17",{"_index":857,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:24",{"_index":854,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:28",{"_index":855,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.t",{"_index":867,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":873,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":879,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":878,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":876,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":875,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":877,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.t",{"_index":1060,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:111",{"_index":1088,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:124",{"_index":1081,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:134",{"_index":1079,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1075,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1076,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1074,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1073,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1090,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1092,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1089,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1091,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1093,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1094,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:46",{"_index":1080,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:49",{"_index":1085,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:71",{"_index":1083,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:91",{"_index":1087,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.t",{"_index":1468,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:13",{"_index":1478,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1474,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1479,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:18",{"_index":1477,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:29",{"_index":1476,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.t",{"_index":917,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1501,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1503,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1502,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/t",{"_index":1541,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.t",{"_index":1505,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:14",{"_index":1510,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1514,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1513,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:35",{"_index":1512,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.t",{"_index":1539,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":1603,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.t",{"_index":1560,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":1574,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":1566,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:21",{"_index":1573,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":1576,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":1575,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":1577,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:27",{"_index":1570,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:42",{"_index":1572,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:69",{"_index":1568,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.t",{"_index":1588,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":1594,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":1593,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":1589,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.t",{"_index":1601,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tourna",{"_index":1680,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.t",{"_index":1611,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":1633,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":1634,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:16",{"_index":1632,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":1636,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":1638,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":1621,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":1631,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:33",{"_index":1627,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:44",{"_index":1630,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:48",{"_index":1628,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:60",{"_index":1623,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:64",{"_index":1624,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:77",{"_index":1626,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.t",{"_index":1678,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/material.module.t",{"_index":1329,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/match.viewmodel",{"_index":880,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/models/match.viewmodel.t",{"_index":1216,"title":{},"body":{"classes/MatchViewModel.html":{},"coverage.html":{}}}],["src/app/models/match.viewmodel.ts:4",{"_index":1228,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:5",{"_index":1227,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:6",{"_index":1229,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/services/authentication.service.t",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:103",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:107",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:13",{"_index":703,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":704,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:29",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:46",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:72",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:89",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:95",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:99",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/i18.service.t",{"_index":890,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":902,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":904,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":896,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":899,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":898,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":360,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.t",{"_index":705,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":707,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service.t",{"_index":1140,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:100",{"_index":1168,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:111",{"_index":1170,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:119",{"_index":1163,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:123",{"_index":1165,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:127",{"_index":1174,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:145",{"_index":1176,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1152,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1157,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:48",{"_index":1154,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:64",{"_index":1159,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:85",{"_index":1161,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.t",{"_index":1390,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:10",{"_index":1400,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1402,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:17",{"_index":1394,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:27",{"_index":1396,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:35",{"_index":1397,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:39",{"_index":1398,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.t",{"_index":1424,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:10",{"_index":1445,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1447,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:15",{"_index":1449,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:21",{"_index":1444,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:22",{"_index":1432,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:37",{"_index":1433,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:41",{"_index":1436,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:58",{"_index":1440,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.servic",{"_index":1609,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/services/team.service.t",{"_index":575,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:101",{"_index":1553,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:105",{"_index":1554,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:127",{"_index":1555,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:168",{"_index":1550,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:23",{"_index":1557,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:31",{"_index":1559,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:33",{"_index":1548,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:45",{"_index":1552,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":1551,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:75",{"_index":1549,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/websocket.servic",{"_index":777,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/services/websocket.service.t",{"_index":1681,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts:16",{"_index":1694,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:17",{"_index":1692,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:18",{"_index":1687,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":1688,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:62",{"_index":1691,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/shared.module.t",{"_index":1489,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environ",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebsocketService.html":{}}}],["src/environments/environment.app.local.t",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.t",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1864,"title":{"index.html":{}},"body":{}}],["startgamecount",{"_index":997,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startteamcount",{"_index":965,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":772,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["state",{"_index":1437,"title":{},"body":{"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["statement",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1224,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["statu",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":587,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["str",{"_index":1718,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["styleurl",{"_index":114,"title":{},"body":{"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["subject",{"_index":1177,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["submit",{"_index":1360,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":1150,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitmatchresult(matchid",{"_index":1171,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["submitmatchresultbodi",{"_index":1178,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["subscrib",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["success",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":710,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":1867,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1868,"title":{},"body":{"modules.html":{}}}],["swaggerexcept",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["switch",{"_index":1711,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["t",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.id",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["t.seasonid",{"_index":628,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["tab.add_us",{"_index":1054,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["tabl",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":183,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["table.compon",{"_index":1540,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1507,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1506,"title":{},"body":{"components/TableComponent.html":{}}}],["table.gam",{"_index":1521,"title":{},"body":{"components/TableComponent.html":{}}}],["table.plac",{"_index":1519,"title":{},"body":{"components/TableComponent.html":{}}}],["table.point",{"_index":1524,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":1520,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tor",{"_index":1523,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":1522,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecompon",{"_index":182,"title":{"components/TableComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodul",{"_index":1534,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodul",{"_index":1538,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.id",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.typ",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["team",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["team.contact",{"_index":598,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["team.nam",{"_index":132,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamsComponent.html":{}}}],["team.servic",{"_index":1179,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["team_contact",{"_index":1610,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_manag",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["team_pair",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["teamadmin",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'nam",{"_index":185,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teamadmin.compon",{"_index":1602,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":1561,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":1562,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincompon",{"_index":184,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":428,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["teamadminmodul",{"_index":1596,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodul",{"_index":1600,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamid",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamlist",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["teamnam",{"_index":127,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teampair",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.guest_team_id",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.home_team_id",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teams'},{'nam",{"_index":187,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teams(valu",{"_index":589,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teams.component.css",{"_index":1605,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":1606,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.compon",{"_index":700,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscompon",{"_index":186,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservic",{"_index":28,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamservice.getteambyid(pos.team_id).nam",{"_index":1526,"title":{},"body":{"components/TableComponent.html":{}}}],["teamservice.getteambyid(tupel.guest_team_id).nam",{"_index":217,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservice.getteambyid(tupel.home_team_id).nam",{"_index":216,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservicefactori",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["teamservicefactory(provid",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["teamsinseason",{"_index":1250,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["templat",{"_index":109,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["text/javascript",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1457,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.activatedroute.queryparams.subscrib",{"_index":1368,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.api.getranking(season.id).subscrib",{"_index":1518,"title":{},"body":{"components/TableComponent.html":{}}}],["this.apiclient.changepassword(body).subscrib",{"_index":1373,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.apiclient.createpitch(body).subscrib",{"_index":814,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.createteam(createteamparams).subscrib",{"_index":608,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.createtourna",{"_index":992,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.createuser(body).subscrib",{"_index":1050,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.apiclient.getallpitches().subscrib",{"_index":1411,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.apiclient.getallseasons().subscrib",{"_index":1462,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.apiclient.getallteams().subscrib",{"_index":614,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getalltournaments().subscrib",{"_index":1643,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.apiclient.getalltournaments().subscribe((tourna",{"_index":990,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.getauthenticateduser().subscrib",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.apiclient.getmatch(matchid).subscrib",{"_index":1214,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatchdaysinseason(season.id).topromis",{"_index":1295,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.apiclient.getmatchdaysinseason(seasonid).subscrib",{"_index":1188,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(seasonid",{"_index":1185,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(undefin",{"_index":1191,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getroundsintournament(tournamentid).subscrib",{"_index":1192,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getteam(teamid).subscrib",{"_index":635,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getteamsinseason(seasonid).subscrib",{"_index":626,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.locatematch(this.match.id",{"_index":799,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.schedulematch(this.match.id",{"_index":883,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.apiclient.sendpasswordresetmail(body).subscrib",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiclient.setround(this.data.tournamentid",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.apiclient.submitmatchresult(matchid",{"_index":1212,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.updateteamcontact(teamid",{"_index":1583,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.valu",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.oldpassword.valu",{"_index":653,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":1595,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loadus",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":656,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1370,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.us",{"_index":1578,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.team",{"_index":1579,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.teams.foreach",{"_index":1580,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":716,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchang",{"_index":801,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":913,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.connect",{"_index":1702,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.connectionstatus.subscrib",{"_index":1706,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.messages.pip",{"_index":1705,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.createform",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundnr",{"_index":995,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.currentseason.subscrib",{"_index":1456,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.dialog.open(changepasswordcompon",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcompon",{"_index":1125,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcompon",{"_index":1113,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcompon",{"_index":1106,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecompon",{"_index":1115,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincompon",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialogref.clos",{"_index":657,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.dialogref.close(fals",{"_index":800,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.dialogref.close(tru",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.email",{"_index":1034,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.email.value.tolowercas",{"_index":1040,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1586,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredpitch",{"_index":784,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.filterpitches(pitch",{"_index":791,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.firstnam",{"_index":1036,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.firstname.valu",{"_index":1045,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.formbuilder.group",{"_index":781,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getround(m.match_day_id).numb",{"_index":1648,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinn",{"_index":1650,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.guest_scor",{"_index":860,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteamid",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.guestteamid.tostr",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.handlegetmatch",{"_index":1296,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplay",{"_index":1291,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_scor",{"_index":858,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeamid",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.hometeamid.tostr",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.httpclient.put('/api/users/me/password",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.i18service.changelang(lang",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["this.inputstream",{"_index":1704,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.inputstream.next(str",{"_index":1720,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.isload",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_scor",{"_index":1208,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.isvalidresult(match.home_scor",{"_index":1207,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.lastnam",{"_index":1037,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.lastname.valu",{"_index":1047,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.load",{"_index":1407,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadallteam",{"_index":609,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.loadalltourna",{"_index":989,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1007,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpitch",{"_index":1410,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadranking(season",{"_index":1515,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadranking(this.seasonservice.currentseason.getvalu",{"_index":1516,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadseasoninprogress",{"_index":1459,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadseasons(seasonstate.progress",{"_index":1461,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadus",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.loginform",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors({requir",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1372,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.logout",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.managetournamentround",{"_index":993,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.length",{"_index":996,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1104,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["this.match.guest_scor",{"_index":861,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team.nam",{"_index":1122,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_scor",{"_index":859,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team.nam",{"_index":1120,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":1102,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":796,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchday",{"_index":1294,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdays.find(t",{"_index":1306,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matches.revers",{"_index":1649,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":1653,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":1654,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchkickoff",{"_index":882,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.getmatchesinseason(this.season.id",{"_index":1301,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchservice.getmatchesintournament(this.tournament.id",{"_index":1645,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.managetournament.id",{"_index":994,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.tournament.id",{"_index":1647,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.isvalidresult(this.guest_scor",{"_index":863,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_scor",{"_index":862,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.matchupdated.next(msg.data",{"_index":1714,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.matchservice.matchupdated.subscrib",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":864,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.updatesinglematch(match.id",{"_index":1109,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.updatesinglematch(msg.matchid",{"_index":1105,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":818,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.value.id",{"_index":798,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valuechang",{"_index":785,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpassword",{"_index":649,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpassword.valu",{"_index":654,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":816,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":811,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitud",{"_index":806,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitud",{"_index":808,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":779,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterror",{"_index":824,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(nul",{"_index":826,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalid",{"_index":827,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":780,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.newroundplandateto",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.numberconnect",{"_index":1707,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.oldpassword",{"_index":652,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":655,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":1038,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.password.valu",{"_index":1042,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.pitch",{"_index":1408,"title":{},"body":{"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["this.pitchadded.subscrib",{"_index":1406,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitches.find(t",{"_index":1409,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.getpitchbyid(mv.pitch_id",{"_index":1200,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.pitchservice.loadpitch",{"_index":1420,"title":{},"body":{"components/PitchesComponent.html":{}}}],["this.pitchservice.pitch",{"_index":783,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitchadded.next(nul",{"_index":819,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["this.pitchservice.pitches.filter(p",{"_index":793,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":822,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.slic",{"_index":792,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.plac",{"_index":802,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_chang",{"_index":804,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplac",{"_index":805,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.rank",{"_index":1517,"title":{},"body":{"components/TableComponent.html":{}}}],["this.resultupdated.emit(this.match",{"_index":1110,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.round",{"_index":1000,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1002,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.router.navigatebyurl",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.season",{"_index":1293,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.valu",{"_index":1483,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasoncreated.subscrib",{"_index":1458,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasoninprogress",{"_index":1460,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasonservice.currentseason.next(event.valu",{"_index":1482,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.next(this.seasonservice.seasoninprogress[0",{"_index":1481,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscrib",{"_index":1292,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.seasoninprogress",{"_index":1480,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchday.id",{"_index":1302,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1299,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.sendmatchupdatedmsg",{"_index":1111,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.setaccesstoken(new",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setaccesstoken(nul",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":713,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.snackbar.openfromcomponent(snackbarcompon",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.team",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["this.teamid",{"_index":669,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.teamlist",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["this.teamlist.filter(t",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.filter(t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.find(t",{"_index":597,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.teams.push(team",{"_index":670,"title":{},"body":{"components/ContactComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.teams.push(teampair",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teamservice.addnewteam(teamnam",{"_index":131,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.getsingleteam(teamid",{"_index":1581,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.teamservice.getteambyid(mv.guest_team_id",{"_index":1198,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.teamservice.getteambyid(mv.home_team_id",{"_index":1196,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.teamservice.loadallteam",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamsComponent.html":{}}}],["this.teamservice.loadteamsinseason(season.id",{"_index":1298,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason",{"_index":1297,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.token",{"_index":1371,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tourna",{"_index":991,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentchang",{"_index":1644,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentround",{"_index":1646,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentrounds.find(t",{"_index":1651,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":907,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":912,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":1053,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":1052,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1376,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1374,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1114,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1112,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_upd",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":1585,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":1584,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1116,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscrib",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.translateservice.settranslation('d",{"_index":908,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":909,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":915,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscrib",{"_index":714,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscrib",{"_index":711,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.us",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.rol",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userteamlist",{"_index":1039,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.websocketservice.send",{"_index":820,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.winnerlastround",{"_index":1652,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":1659,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":1663,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_scor",{"_index":1655,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":1661,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":1658,"title":{},"body":{"components/TournamentComponent.html":{}}}],["throwexcept",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(messag",{"_index":1861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tojson",{"_index":1226,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["tojson(data",{"_index":1244,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["token",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["tournament",{"_index":189,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{}}}],["tournament(t",{"_index":1640,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.compon",{"_index":1679,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":1613,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":1612,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.nam",{"_index":1008,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournamentchang",{"_index":1619,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompar",{"_index":1620,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare(c1",{"_index":1629,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompon",{"_index":188,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentid",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["tournamentmodul",{"_index":1673,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentround",{"_index":1614,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentroutingmodul",{"_index":1677,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["translat",{"_index":134,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/cor",{"_index":38,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1316,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodul",{"_index":361,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":362,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservic",{"_index":708,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["tree",{"_index":111,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["tri",{"_index":1300,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["true",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1181,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["tupel",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":788,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["types/googlemap",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1866,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":747,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"miscellaneous/functions.html":{}}}],["updatesinglematch",{"_index":1151,"title":{},"body":{"injectables/MatchService.html":{}}}],["updatesinglematch(matchid",{"_index":1175,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["useclass",{"_index":363,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["usefactori",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["usernam",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["username_requir",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["userrol",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.team_manag",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["users/m",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":1017,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["usevalu",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["val",{"_index":1004,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["valid",{"_index":648,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":1035,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":651,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["validators.requir",{"_index":650,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["valu",{"_index":211,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":789,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["var",{"_index":139,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["variabl",{"_index":1778,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["viertelfinal",{"_index":1667,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":756,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplet",{"_index":778,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocket",{"_index":1698,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["websocketconnect",{"_index":1697,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessag",{"_index":1690,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessagetyp",{"_index":775,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.match_upd",{"_index":1117,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.pitch_ad",{"_index":821,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketservic",{"_index":280,"title":{"injectables/WebsocketService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["websocketservicefactori",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["websocketservicefactory(provid",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["winner.nam",{"_index":1665,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":1664,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerlastround",{"_index":1615,"title":{},"body":{"components/TournamentComponent.html":{}}}],["ws",{"_index":1717,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws://192.168.178.23:3001/w",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://${window.location.hostname}/w",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://manager.wildeligabremen.de/w",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsserverurl",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"injectables/SeasonService.html":{},"miscellaneous/functions.html":{}}}],["zip",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":255,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  addNewTeam(teamName: string) {\n    this.teamService.addNewTeam(teamName);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeamId\n                            \n                            \n                                homeTeamId\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                teamList\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                createMatch\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, apiClient: Client, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTeam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMatch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTeam(tupel: Team_pairs)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tupel\n                                                        \n                                                                    Team_pairs\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateFrom(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateTo(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     AddMatchData\n\n                    \n                \n                    \n                        \n                            Type :     AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guestTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        homeTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateFrom:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateTo:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team_pairs[]\n\n                    \n                \n                    \n                        \n                            Type :     Team_pairs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{teamService.getTeamById(tupel.home_team_id).name}}\n      \n      \n        -\n      \n      \n        {{teamService.getTeamById(tupel.guest_team_id).name}}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n          \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n          {{ 'PLAN_DATE_TO'| translate}}:\n          \n          {{ 'BUTTON.SET_TIME' | translate}}\n          \n        \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{teamService.getTeamById(tupel.home_team_id).name}}                    -                    {{teamService.getTeamById(tupel.guest_team_id).name}}                              -                                                                        {{team.name}}                                                                          {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                  {{ \\'BUTTON.SET_TIME\\' | translate}}                              {{ \\'PLAN_DATE_TO\\'| translate}}:                    {{ \\'BUTTON.SET_TIME\\' | translate}}                                    {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddteamComponent\n                            \n                            \n                                AddtournamentroundComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                ManageseasonComponent\n                            \n                            \n                                ManagetournamentComponent\n                            \n                            \n                                ManageusersComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddtournamentroundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                websocketService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, authService: AuthenticationService, i18Service: I18Service, websocketService: WebsocketService, matchService: MatchService, snackBar: MatSnackBar, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadGoogleMapsScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadGoogleMapsScript()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLangSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLangSelect(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePasswordDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePasswordDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openLoginDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenLoginDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { SeasonService } from './services/season.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { MatchService } from './services/match.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public seasonService: SeasonService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public websocketService: WebsocketService,\n    private matchService: MatchService,\n    public snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private dialog: MatDialog) {\n  }\n\n  async ngOnInit() {\n    this.loadGoogleMapsScript();\n    if (this.authService.accessToken) {\n      await this.authService.loadUser();\n    }\n    this.matchService.matchUpdated.subscribe(\n      (data) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('RESULT_UPDATED', { homeTeam: data.homeTeamName, guestTeam: data.guestTeamName })\n          },\n          panelClass: ['alert', 'alert-info']\n        });\n      });\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n      \n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                                        {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  AppCoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TeamService } from './services/team.service';\nimport { SeasonService } from './services/season.service';\nimport { PitchService } from './services/pitch.service';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { API_BASE_URL } from '../api';\nimport { environment } from '../environments/environment';\nimport { WebsocketService } from './services/websocket.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { AppCoreModule } from './app-core.module';\nregisterLocaleData(localeDe);\n\nexport function teamServiceFactory(provider: TeamService) {\n  return () => provider.initLoadTeams();\n}\n\nexport function seasonServiceFactory(provider: SeasonService) {\n  return () => provider.loadSeasonInProgress();\n}\n\nexport function pitchServiceFactory(provider: PitchService) {\n  return () => provider.load();\n}\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function websocketServiceFactory(provider: WebsocketService) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: teamServiceFactory,\n      deps: [TeamService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: seasonServiceFactory,\n      deps: [SeasonService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pitchServiceFactory,\n      deps: [PitchService], multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    },\n    {\n      provide: API_BASE_URL,\n      useValue: environment.serverUrl\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: websocketServiceFactory,\n      deps: [WebsocketService], multi: true\n    },\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', redirectTo: 'matchplan', pathMatch: 'full' },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth.interceptor.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, httpClient: HttpClient, router: Router, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword(oldPassword: string, newPassword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oldPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTeamAdminForTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTeamAdminForTeam(teamId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loginAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginAsync(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(value: Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Credentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheTeamsInSeason.html":{"url":"interfaces/CacheTeamsInSeason.html","title":"interface - CacheTeamsInSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheTeamsInSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seasonId\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seasonId\n                                    \n                                \n                                \n                                    \n                                        seasonId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPasswordWrong:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      if (await this.authService.changePassword(this.oldPassword.value, this.newPassword.value)) {\n          this.oldPasswordWrong = false;\n          this.authService.logout();\n          this.dialogRef.close();\n      } else {\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teamIds\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, apiClient: Client, teamIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Client } from '../../../../api';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public teams: Team[] = new Array();\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    @Inject(MAT_DIALOG_DATA) public teamIds: string[]) { }\n\n  ngOnInit() {\n    for (const teamId of this.teamIds) {\n      this.apiClient.getTeam(teamId).subscribe(\n        (team) => {\n          this.teams.push(team);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                    \n                            \n                            Type :    Contact_person\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact_person } from '../../../../api';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact_person;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactlistComponent\n                            \n                            \n                                PitchesComponent\n                            \n                            \n                                TeamsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ContactlistRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Credentials.html":{"url":"classes/Credentials.html","title":"class - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, pitchService: PitchService, apiClient: Client, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNewPitchName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckNewPitchName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPitchSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPitchSelect(pitch: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onShowCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nonShowCreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adressAutoComplete:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                    \n                        \n                            Default value : new Pitch()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchLabelExist:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchPlaceFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        places:     google.maps.places.Autocomplete\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showCreateNewPitch:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Pitch, LocateMatchBody, Client, CreatePitchBody } from 'src/api';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch = new Pitch();\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private pitchService: PitchService,\n    private apiClient: Client,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private websocketService: WebsocketService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch) {\n    this.match.pitch = pitch;\n  }\n\n  onSaveClicked() {\n    const body: LocateMatchBody = new LocateMatchBody();\n    body.pitch_id = this.newMatchPitch.value.id;\n    this.apiClient.locateMatch(this.match.id, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.dialogRef.close(false);\n      }\n    );\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n      const body: CreatePitchBody = new CreatePitchBody();\n      body.label = this.newPitch.label;\n      body.location_latitude = this.newPitch.location_latitude;\n      body.location_longitude = this.newPitch.location_longitude;\n      this.apiClient.createPitch(body).subscribe(\n        async (pitchId) => {\n          this.newPitch.id = pitchId.id;\n          this.newMatchPitch.setValue(this.newPitch);\n          this.pitchService.pitchAdded.next(null);\n          this.websocketService.send(\n            {\n              type: WebSocketMessageTypes.PITCH_ADDED,\n              data: pitchId\n            }\n          );\n        }\n      );\n    }\n  }\n  checkNewPitchName() {\n    const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    if (pitch) {\n      this.newPitchFormControl.setErrors({ pitchexist: true });\n    } else {\n      this.newPitchFormControl.setErrors(null);\n      this.newPitchFormControl.updateValueAndValidity();\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                                        {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, matchService: MatchService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  async onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          console.log(error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, apiCLient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiCLient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kickoffSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nkickoffSet(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchKickoff:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { Client, ScheduleMatchBody } from '../../../../api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private apiCLient: Client\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.apiCLient.scheduleMatch(this.match.id, { kickoff: this.matchKickoff }).subscribe(\n      (t) => {\n        this.dialogRef.close(true);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLang:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForgot\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordForgot(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { Client, SendPasswordResetMailBody } from '../../../api';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  passwordForgot(email: string) {\n    if (email) {\n      const body = new SendPasswordResetMailBody();\n      body.email = email;\n      body.target_path = 'newpassword';\n      this.apiClient.sendPasswordResetMail(body).subscribe(\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        },\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger']\n          });\n        }\n      );\n    } else {\n      this.loginForm.controls['username'].setErrors({required: true});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournament\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewTournament(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRound\n                            \n                            \n                        \n                    \n                \n                \n                    \neditRound()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenRounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadAllTournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTournaments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            onTournamentSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTournamentSelected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createRoundNr:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournament:     Tournament\n\n                    \n                \n                    \n                        \n                            Type :     Tournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rounds:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTeamCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tournament, Client, CreateTournamentBody, Match_day } from '../../../../api';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  manageTournament: Tournament;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRounds: Match_day[];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.apiClient.getAllTournaments().subscribe((tournaments) => {\n      this.tournaments = tournaments;\n    });\n  }\n\n  createNewTournament(name: string) {\n    this.apiClient.createTournament({ name: name }).subscribe(\n      (id) => {\n        this.loadAllTournaments();\n      }\n    );\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = await this.matchService.getRoundsInTournament(this.manageTournament.id);\n    this.createRoundNr = this.manageTournamentRounds.length;\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT' | translate}}\n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\' | translate}}                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                                        {{ \\'MATCH\\' | translate }} {{ game }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUserBodyRole\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                teamList\n                            \n                            \n                                userRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeTeamSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeTeamSelect(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserBodyRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CreateUserBodyRole:     \n\n                    \n                \n                    \n                        \n                            Default value : CreateUserBodyRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     CreateUserBodyRole\n\n                    \n                \n                    \n                        \n                            Type :     CreateUserBodyRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userTeamList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team, CreateUserBodyRole, CreateUserBody, Client } from '../../../../api';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSelectChange, MatSnackBar } from '@angular/material';\nimport { TeamService } from '../../../services/team.service';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  teamList: Team[];\n  userTeamList: string[] = new Array();\n\n  userRole: CreateUserBodyRole;\n\n  CreateUserBodyRole = CreateUserBodyRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar) {\n\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  createUser() {\n    const body = new CreateUserBody();\n\n    body.email = this.email.value.toLowerCase();\n    body.password = this.password.value;\n    body.teams = this.userTeamList;\n    body.first_name = this.firstName.value;\n    body.last_name = this.lastName.value;\n    body.role = CreateUserBodyRole.Team_manager;\n    this.apiClient.createUser(body).subscribe(\n      (res) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'TAB.ADD_USER' | translate }}\n      \n      \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_EMAIL\n            \n          \n        \n        \n          \n            \n              \n              FIRST_NAME_REQUIRED\n            \n            \n              \n              LAST_NAME_REQUIRED\n            \n          \n        \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_PASSWORD\n            \n          \n        \n        \n          \n            \n              \n                \n                  {{ CreateUserBodyRole.Admin }}\n                \n                \n                  {{ CreateUserBodyRole.Team_manager }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                  {{team.name}}\n                \n              \n            \n          \n        \n        \n          \n            \n              {{ 'BUTTON.ADD' | translate}}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'TAB.ADD_USER\\' | translate }}                                                                      ERRORS.ENTER_VALID_EMAIL                                                                                        FIRST_NAME_REQUIRED                                                    LAST_NAME_REQUIRED                                                                                        ERRORS.ENTER_VALID_PASSWORD                                                                                                            {{ CreateUserBodyRole.Admin }}                                                  {{ CreateUserBodyRole.Team_manager }}                                                                                                                                          {{team.name}}                                                                                                        {{ \\'BUTTON.ADD\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                            \n                                sendMatchUpdatedMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, matchService: MatchService, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                    \n                            \n                            Type :    MatchViewModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultUpdated\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openContactModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenContactModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditPitchDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditPitchDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditResultDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditResultDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditTimeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditTimeDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMatchUpdatedMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMatchUpdatedMsg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { MatchService, MatchUpdateMessage } from '../../../services/match.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WebsocketService } from '../../../services/websocket.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: MatchViewModel;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n  @Output() resultUpdated: EventEmitter = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public matchService: MatchService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private websocketService: WebsocketService) {\n\n    this.matchService.matchUpdated.subscribe(\n      async (msg) => {\n        if (this.match.id === msg.matchId) {\n          this.match = null;\n          this.match = await this.matchService.updateSingleMatch(msg.matchId);\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.resultUpdated.emit(this.match);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditPitchDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditTimeDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  sendMatchUpdatedMsg() {\n    this.websocketService.send(\n      {\n        type: WebSocketMessageTypes.MATCH_UPDATED,\n        data: {\n          matchId: this.match.id,\n          homeTeamName: this.match.home_team.name,\n          guestTeamName: this.match.guest_team.name,\n        }\n      }\n    );\n  }\n\n  openContactModal() {\n    const contacts = new Array();\n    contacts.push(this.match.home_team.id);\n    contacts.push(this.match.guest_team.id);\n    this.dialog.open(ContactComponent, {\n      data: contacts,\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getMatchDaysInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInTournament\n                            \n                            \n                                    Public\n                                    Async\n                                getRoundsInTournament\n                            \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                matchConverter\n                            \n                            \n                                matchConverterArray\n                            \n                            \n                                submitMatchResult\n                            \n                            \n                                updateSingleMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchDaysInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchDaysInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getRoundsInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoundsInTournament(tournamentId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMatchPlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMatchPlayed(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValidResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidResult(score: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        score\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverter(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverterArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverterArray(matches: Match[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matches\n                                                        \n                                                                    Match[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitMatchResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        homeScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        guestScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSingleMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSingleMatch(matchId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchUpdated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  matchConverter(match: Match): MatchViewModel {\n    const mv = new MatchViewModel(match);\n    mv.home_team = this.teamService.getTeamById(mv.home_team_id);\n    mv.guest_team = this.teamService.getTeamById(mv.guest_team_id);\n    mv.pitch = this.pitchService.getPitchById(mv.pitch_id);\n    if (mv.kickoff) {\n      mv.kickoff.setMinutes(mv.kickoff.getMinutes() - mv.kickoff.getTimezoneOffset());\n    }\n    return mv;\n  }\n\n  matchConverterArray(matches: Match[]): MatchViewModel[] {\n    const mvwa = new Array();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchUpdateMessage.html":{"url":"interfaces/MatchUpdateMessage.html","title":"interface - MatchUpdateMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchUpdateMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeamName\n                                \n                                \n                                        homeTeamName\n                                \n                                \n                                        matchId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeamName\n                                    \n                                \n                                \n                                    \n                                        guestTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamName\n                                    \n                                \n                                \n                                    \n                                        homeTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  matchConverter(match: Match): MatchViewModel {\n    const mv = new MatchViewModel(match);\n    mv.home_team = this.teamService.getTeamById(mv.home_team_id);\n    mv.guest_team = this.teamService.getTeamById(mv.guest_team_id);\n    mv.pitch = this.pitchService.getPitchById(mv.pitch_id);\n    if (mv.kickoff) {\n      mv.kickoff.setMinutes(mv.kickoff.getMinutes() - mv.kickoff.getTimezoneOffset());\n    }\n    return mv;\n  }\n\n  matchConverterArray(matches: Match[]): MatchViewModel[] {\n    const mvwa = new Array();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchViewModel.html":{"url":"classes/MatchViewModel.html","title":"class - MatchViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/match.viewmodel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Match\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                guest_team\n                            \n                            \n                                    Public\n                                home_team\n                            \n                            \n                                    Public\n                                pitch\n                            \n                            \n                                    Optional\n                                cancelled_at\n                            \n                            \n                                    Optional\n                                guest_score\n                            \n                            \n                                    Optional\n                                guest_team_id\n                            \n                            \n                                    Optional\n                                home_score\n                            \n                            \n                                    Optional\n                                home_team_id\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                kickoff\n                            \n                            \n                                    Optional\n                                match_day_id\n                            \n                            \n                                    Optional\n                                pitch_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromJS\n                            \n                            \n                                init\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            guest_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            home_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancelled_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelled_at:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2404\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2405\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2406\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2407\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2408\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2409\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            kickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kickoff:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2410\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            match_day_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match_day_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2411\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pitch_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2412\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fromJS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fromJS(data: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2437\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2423\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoJSON(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2444\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Match, Team, Pitch } from '../../api';\n\nexport class MatchViewModel extends Match {\n    public home_team: Team;\n    public guest_team: Team;\n    public pitch: Pitch;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchDays\n                            \n                            \n                                    Public\n                                matches\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Private\n                                season\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMatchDay\n                            \n                            \n                                    Async\n                                handleGetMatches\n                            \n                            \n                                isNewMatchDay\n                            \n                            \n                                matchDayCompare\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedMatchDay\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, matchService: MatchService, teamService: TeamService, apiClient: Client, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleGetMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleGetMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNewMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNewMatchDay(match: Match, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchDayCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchDayCompare(md1: Match_day, md2: Match_day)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        md1\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        md2\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePlayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchDays:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamsInSeason:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedMatchDay\n                    \n                \n\n                \n                    \n                        getselectedMatchDay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n\n                \n                    \n                        setselectedMatchDay(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { MatchService } from '../../services/match.service';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { Season, Team, Match_day, Client, Match } from '../../../api';\nimport { TeamService } from '../../services/team.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matches: MatchViewModel[];\n  public matchDays: Match_day[];\n  public hidePlayed: boolean;\n\n  public set selectedMatchDay(value: Match_day) {\n    localStorage.setItem('SELECTED_MATCHDAY', JSON.stringify(value));\n  }\n\n  public get selectedMatchDay(): Match_day {\n    return JSON.parse(localStorage.getItem('SELECTED_MATCHDAY')) || new Match_day();\n  }\n  private season: Season;\n\n  public get selectedTeamId() {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  teamsInSeason: Team[];\n\n  constructor(\n    private seasonService: SeasonService,\n    public matchService: MatchService,\n    private teamService: TeamService,\n    private apiClient: Client,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      async (season) => {\n        if (season) {\n          this.season = season;\n          this.matchDays = await this.apiClient.getMatchDaysInSeason(season.id).toPromise();\n          this.handleGetMatches();\n          this.teamsInSeason = await this.teamService.loadTeamsInSeason(season.id);\n        }\n      }\n    );\n  }\n\n  async handleGetMatches() {\n    this.matches = null;\n    if (this.season) {\n      const selectedTeamId = this.selectedTeamId === '0' ? undefined : this.selectedTeamId;\n      try {\n        this.matches = await this.matchService.getMatchesInSeason(this.season.id, selectedTeamId, this.selectedMatchDay.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  matchDayCompare(md1: Match_day, md2: Match_day) {\n    return md1 && md2 && md1.id === md2.id;\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDays.find(t => t.id === id);\n  }\n\n  isNewMatchDay(match: Match, index: number): boolean {\n    if (!match || index \n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_MATCHDAYS' | translate }}\n          \n          \n            {{ matchDay.number }}\n            {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang\n              }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_TEAMS' | translate }}\n          \n          \n            {{ team.name }}\n          \n        \n      \n    \n    \n      \n        filter_list\n        filter_list\n      \n      \n        \n          {{ 'HIDE_PLAYED_MATCHES' | translate }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'MATCHDAY' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|\n      date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ getMatchDay(match.match_day_id).end_date| date:'shortDate':'':i18Service.currentLang\n      }})\n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ALL_MATCHDAYS\\' | translate }}                                {{ matchDay.number }}            {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang              }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                {{ team.name }}                                              filter_list        filter_list                              {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                  {{ \\'MATCHDAY\\' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|      date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ getMatchDay(match.match_day_id).end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang      }})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MatchplanComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppCoreModule\n                            \n                            \n                                    MatchplanRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, formBuilder: FormBuilder, authService: AuthenticationService, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User, Client, ChangePasswordBody } from 'src/api';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  submit() {\n    const body = new ChangePasswordBody();\n    body.new_password = this.loginForm.value.password;\n    this.apiClient.changePassword(body).subscribe(\n      () => {\n        this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n      },\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger'],\n          duration: 30000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NewpasswordComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NewpasswordRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pitchAdded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPitchById\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pitches\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPitchById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPitchById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPitches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitchAdded:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pitches\n                    \n                \n\n                \n                    \n                        getpitches()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:10\n                                \n                            \n\n                \n                    \n                        setpitches(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Pitch } from '../../api';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  public get pitches(): Pitch[] {\n    return JSON.parse(localStorage.getItem('PITCHES')) || null;\n  }\n  public set pitches(value: Pitch[]) {\n    localStorage.setItem('PITCHES', JSON.stringify(value));\n  }\n\n  pitchAdded: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.pitchAdded.subscribe(\n      () => {\n        this.load();\n      }\n    );\n  }\n\n  getPitchById(id: string): Pitch {\n    if (this.pitches) {\n      return this.pitches.find(t => t.id === id);\n    } else {\n      return new Pitch();\n    }\n  }\n\n  public async load() {\n    this.pitches = await this.loadPitches();\n  }\n\n  async loadPitches(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllPitches().subscribe(\n          (pitches) => {\n            resolve(pitches);\n          },\n          (error) => {\n            resolve(this.pitches);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitches:     Pitch[]\n\n                    \n                \n                    \n                        \n                            Type :     Pitch[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Pitch } from '../../../../api';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  public pitches: Pitch[];\n\n  constructor(\n    private pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n    this.pitches = await this.pitchService.loadPitches();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                            \n                                seasonCreated\n                            \n                            \n                                seasonInProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadSeasonInProgress\n                            \n                            \n                                    Public\n                                    Async\n                                loadSeasons\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasonInProgress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasons(state?: SeasonState | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    SeasonState | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonCompare(c1: Season, c2: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSeason:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonCreated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonInProgress:     Season[]\n\n                    \n                \n                    \n                        \n                            Type :     Season[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:11\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, SeasonState, Season } from '../../api/liga-manager-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  seasonInProgress: Season[];\n  private get _currentSeason(): Season {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || null;\n  }\n\n  private set _currentSeason(season: Season) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n  seasonCreated: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.currentSeason.subscribe(\n      (season) => {\n        this._currentSeason = season;\n      }\n    );\n    this.seasonCreated.subscribe(\n      () => {\n        this.loadSeasonInProgress();\n      }\n    );\n  }\n\n  public async loadSeasonInProgress() {\n    this.seasonInProgress = await this.loadSeasons(SeasonState.Progress);\n  }\n\n  public async loadSeasons(state?: SeasonState | null): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllSeasons().subscribe(\n          (seasons: Season[]) => {\n            resolve(seasons.filter(s => s.state === state));\n          },\n          (error: any) => {\n            resolve(null);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: Season, c2: Season) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeasonChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentSeasonChanged(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Season } from '../../../../api';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  season: Season;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    if (this.seasonService.seasonInProgress && !this.season) {\n      this.seasonService.currentSeason.next(this.seasonService.seasonInProgress[0]);\n    }\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                ContactPersonComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                MatchComponent\n                            \n                            \n                                SeasonchooserComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContactPersonComponent\n                            \n                            \n                                    MatchComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    SeasonchooserComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     ISnackBarData\n\n                    \n                \n                    \n                        \n                            Type :     ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ranking\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, api: Client, teamService: TeamService, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadRanking\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadRanking(season: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        season\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ranking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ranking:     Ranking\n\n                    \n                \n                    \n                        \n                            Type :     Ranking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Ranking, Client, Season } from '../../../api';\nimport { SeasonService } from '../../services/season.service';\nimport { TeamService } from '../../services/team.service';\nimport { MatchService } from '../../services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  public ranking: Ranking;\n\n  constructor(\n    private seasonService: SeasonService,\n    private api: Client,\n    public teamService: TeamService,\n    private matchService: MatchService) {\n  }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.loadRanking(season);\n      }\n    );\n    this.matchService.matchUpdated.subscribe(\n      (matchId) => {\n        this.loadRanking(this.seasonService.currentSeason.getValue());\n      });\n  }\n\n  loadRanking(season: Season) {\n    this.ranking = null;\n    if (season) {\n      this.api.getRanking(season.id).subscribe(\n        (ranking) => {\n          this.ranking = ranking;\n        },\n        (error) => {\n          delete this.ranking;\n        },\n        () => {\n\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n  \n    \n      \n        \n          TABLE.PLACE\n          TABLE.TEAM\n          TABLE.GAMES\n          TABLE.WIN_DRAW_LOST\n          TABLE.TORE:TORE\n          TABLE.POINTS\n        \n      \n      \n        \n          \n            {{ pos.number }}\n            {{ teamService.getTeamById(pos.team_id).name }}\n            {{ pos.matches }}\n            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n            {{ pos.points }}\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  TABLE.PLACE          TABLE.TEAM          TABLE.GAMES          TABLE.WIN_DRAW_LOST          TABLE.TORE:TORE          TABLE.POINTS                                                  {{ pos.number }}            {{ teamService.getTeamById(pos.team_id).name }}            {{ pos.matches }}            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})            {{ pos.points }}                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n  Modules\n  TableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TableRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TableRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Public\n                                    Async\n                                getSingleTeam\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamContactByID\n                            \n                            \n                                    Public\n                                    Async\n                                initLoadTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadAllTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadTeamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    teams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Calls the API to create a new Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getSingleTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSingleTeam(teamId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:168\n                            \n                        \n\n\n                \n                    \n                            Loads an Team from API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns a Team for given teamId or an empty Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Team\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamContactByID\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamContactByID(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Contact_person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            initLoadTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLoadTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Initial load of all Teams (should only be called in APP_INITIALIZER)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadAllTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadTeamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTeamsInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an Team[] for an Season.\nWith a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        teams\n                    \n                \n\n                \n                    \n                        getteams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:23\n                                \n                            \n                    \n                        \n                                Returns a List of Teams from localStorage\n\n\n                                \n                                \n                                \n                                    Returns :     Team[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setteams(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:31\n                                \n                            \n                    \n                        \n                                Stores a List of Teams to localStorage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmailValidOrEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmailValidOrEmpty(mail: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveContact\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        phone\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Contact_person, Client, Team } from '../../../api';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  teams: Team[] = new Array();\n\n  constructor(\n    public authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private apiClient: Client) { }\n\n  ngOnInit() {\n    if (this.authService.user && this.authService.user.teams) {\n      this.authService.user.teams.forEach(\n        async (teamId) => {\n          try {\n            const team = await this.teamService.getSingleTeam(teamId);\n            this.teams.push(team);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n    }\n  }\n\n  saveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string) {\n    const body = new Contact_person();\n    body.email = mail;\n    body.first_name = firstname;\n    body.last_name = lastname;\n    body.phone = phone;\n    this.apiClient.updateTeamContact(teamId, body).subscribe(\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TeamadminComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TeamadminRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team } from 'src/api';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  teams: Team[];\n\n  constructor(\n    private teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n    this.teams = await this.teamService.loadAllTeams();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                matches\n                            \n                            \n                                tournamentRounds\n                            \n                            \n                                tournaments\n                            \n                            \n                                winnerLastRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRound\n                            \n                            \n                                getWinner\n                            \n                            \n                                newWinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                tournamentChanged\n                            \n                            \n                                tournamentCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournament\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRound\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRound(matchDayId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewWinner(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            tournamentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        tournamentChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \ntournamentCompare(c1: Tournament, c2: Tournament)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[][]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winnerLastRound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        winnerLastRound:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n\n                \n                    \n                        gettournament()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                                \n                            \n\n                \n                    \n                        settournament(t: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client, Tournament, Team, Match_day } from '../../../api';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { MatchService } from '../../services/match.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  winnerLastRound: Team[];\n  tournamentRounds: Match_day[];\n\n  get tournament(): Tournament {\n    return JSON.parse(localStorage.getItem('SELECTED_TOURNAMENT'));\n  }\n  set tournament(t: Tournament) {\n    localStorage.setItem('SELECTED_TOURNAMENT', JSON.stringify(t));\n  }\n\n  matches: MatchViewModel[][];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.apiClient.getAllTournaments().subscribe(\n      (tournaments) => {\n        this.tournaments = tournaments;\n        if (this.tournament) {\n          this.tournamentChanged();\n        }\n      }\n    );\n  }\n\n  tournamentCompare(c1: Tournament, c2: Tournament) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n\n  async tournamentChanged() {\n    this.matches = null;\n    const matches = await this.matchService.getMatchesInTournament(this.tournament.id);\n    this.tournamentRounds = await this.matchService.getRoundsInTournament(this.tournament.id);\n    this.matches = new Array();\n    for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    }\n    this.matches = this.matches.reverse();\n    this.getWinner();\n  }\n\n  getRound(matchDayId: string): Match_day {\n    return this.tournamentRounds.find(t => t.id === matchDayId);\n  }\n\n  getWinner() {\n    this.winnerLastRound = new Array();\n    if (this.matches[0]) {\n      this.matches[0].forEach(\n        (match) => {\n          if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n            this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n          }\n        });\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n\n  newWinner(match: MatchViewModel) {\n    if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n      if (match.home_score > match.guest_score) {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n        this.winnerLastRound.push(match.home_team);\n      } else {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n        this.winnerLastRound.push(match.guest_team);\n      }\n\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'WINNER_LAST_ROUND' | translate }}\n    \n    \n      \n        {{ winner.name }}\n      \n    \n  \n  \n    \n      \n        \n          {{ 'ACHTELFINALE' | translate }} -->\n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                  {{ \\'WINNER_LAST_ROUND\\' | translate }}                      {{ winner.name }}                                          {{ \\'ACHTELFINALE\\' | translate }} -->          {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TournamentComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TournamentRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connection\n                            \n                            \n                                    Private\n                                inputStream\n                            \n                            \n                                    Public\n                                numberConnected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend(data: WebSocketMessage)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    WebSocketMessage\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connection:     Connection\n\n                    \n                \n                    \n                        \n                            Type :     Connection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputStream:     QueueingSubject\n\n                    \n                \n                    \n                        \n                            Type :     QueueingSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new QueueingSubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberConnected:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueueingSubject } from 'queueing-subject';\nimport { environment } from 'src/environments/environment';\nimport { MatchService } from './match.service';\nimport websocketConnect, { Connection } from 'rxjs-websockets';\nimport { retryWhen, delay, share } from 'rxjs/operators';\nimport { WebSocketMessage, WebSocketMessageTypes } from '../../../shared/models/websocket.model';\nimport { PitchService } from './pitch.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private inputStream: QueueingSubject = new QueueingSubject();\n  public connection: Connection;\n  public numberConnected = 0;\n\n  constructor(\n    private matchService: MatchService,\n    private pitchService: PitchService\n  ) {\n  }\n\n  init() {\n    this.connection = websocketConnect(\n      environment.wsServerUrl,\n      this.inputStream\n    );\n\n    this.connection.messages.pipe(\n      share()\n    );\n\n    this.connection.connectionStatus.subscribe(\n      (numberConnected) => {\n        this.numberConnected = numberConnected;\n      });\n\n    this.connection.messages.pipe(\n      retryWhen(errors => errors.pipe(delay(60000)))\n    ).subscribe(\n      (message) => {\n        try {\n          const msg: WebSocketMessage = JSON.parse(message);\n          switch (msg.type) {\n            case WebSocketMessageTypes.MATCH_UPDATED:\n              this.matchService.matchUpdated.next(msg.data);\n              break;\n            case WebSocketMessageTypes.PITCH_ADDED:\n              this.pitchService.pitchAdded.next(null);\n              break;\n          }\n        } catch (error) {\n          console.error('Error parsing WS Message', error);\n        }\n      }\n    );\n  }\n\n  send(data: WebSocketMessage) {\n    const str = JSON.stringify(data);\n    this.inputStream.next(str);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ChangePasswordBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Contact_person\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateMatchDaysBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreatePitchBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateSeasonBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTournamentBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateUserBody\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Date_period\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Identifier\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                LocateMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match_day\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Pitch\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_position\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Season\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SendPasswordResetMailBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SetRoundBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SubmitMatchResultBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SwaggerException\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team_pairs\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Tournament\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                injectable\n            \n            \n                Client\n            \n            \n                46 %\n                (36/77)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IChangePasswordBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IClient\n            \n            \n                97 %\n                (36/37)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IContact_person\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateMatchDaysBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreatePitchBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateSeasonBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTournamentBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateUserBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IDate_period\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IIdentifier\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ILocateMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch_day\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IPitch\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_position\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISeason\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISendPasswordResetMailBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISetRoundBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISubmitMatchResultBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam_pairs\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITournament\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                blobToText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                formatDate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                throwException\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                variable\n            \n            \n                API_BASE_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                i18ServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                pitchServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                seasonServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                teamServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                websocketServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            \n                component\n            \n            \n                AddteamComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            \n                component\n            \n            \n                ManageseasonComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                component\n            \n            \n                AddtournamentroundComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                interface\n            \n            \n                AddMatchData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            \n                component\n            \n            \n                ManagetournamentComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            \n                component\n            \n            \n                ManageusersComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            \n                component\n            \n            \n                ChangepasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            \n                component\n            \n            \n                ContactlistComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            \n                component\n            \n            \n                PitchesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            \n                component\n            \n            \n                TeamsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            \n                component\n            \n            \n                MatchplanComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            \n                component\n            \n            \n                NewpasswordComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            \n                component\n            \n            \n                ContactPersonComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            \n                component\n            \n            \n                ContactComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            \n                component\n            \n            \n                EditmatchPitchComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            \n                component\n            \n            \n                EditmatchResultComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            \n                component\n            \n            \n                EditmatchTimeComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            \n                component\n            \n            \n                MatchComponent\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            \n                component\n            \n            \n                SeasonchooserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                component\n            \n            \n                SnackbarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                interface\n            \n            \n                ISnackBarData\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            \n                component\n            \n            \n                TeamadminComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            \n                component\n            \n            \n                TournamentComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/match.viewmodel.ts\n            \n            \n                class\n            \n            \n                MatchViewModel\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                class\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                interface\n            \n            \n                LoginContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            \n                injectable\n            \n            \n                I18Service\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            \n                injectable\n            \n            \n                CustomOwlDateTimeIntl\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                injectable\n            \n            \n                MatchService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                interface\n            \n            \n                MatchUpdateMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            \n                injectable\n            \n            \n                PitchService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            \n                injectable\n            \n            \n                SeasonService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                injectable\n            \n            \n                TeamService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                interface\n            \n            \n                CacheTeamsInSeason\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            \n                injectable\n            \n            \n                WebsocketService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/googlemaps : ^3.30.15\n        \n            bootstrap : ^4.1.2\n        \n            codacy-coverage : ^3.2.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.3\n        \n            core-js : ^2.5.4\n        \n            exec : ^0.2.1\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.4.8\n        \n            jslint : ^0.12.0\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            ng-pick-datetime : ^6.0.16\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.4\n        \n            queueing-subject : ^0.3.0\n        \n            rxjs : ^6.3.3\n        \n            rxjs-websockets : ^6.0.2\n        \n            zone.js : ^0.8.26\n        \n            adm-zip : >=0.4.11\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateUserBodyRole   (src/.../liga-manager-api.ts)\n                        \n                        \n                            SeasonState   (src/.../liga-manager-api.ts)\n                        \n                        \n                            UserRole   (src/.../liga-manager-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n        \n            \n                \n                    \n                        \n                        CreateUserBodyRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToText   (src/.../liga-manager-api.ts)\n                        \n                        \n                            formatDate   (src/.../liga-manager-api.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            pitchServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            seasonServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            teamServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            throwException   (src/.../liga-manager-api.ts)\n                        \n                        \n                            websocketServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            blobToText\n                            \n                            \n                        \n                    \n                \n                \n                    \nblobToText(blob: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blob\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDate(d: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            throwException\n                            \n                            \n                        \n                    \n                \n                \n                    \nthrowException(message: undefined, status: undefined, response: undefined, headers: undefined, result?: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        status\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        response\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18ServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ni18ServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \npitchServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nteamServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            websocketServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nwebsocketServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../liga-manager-api.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_BASE_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    wsServerUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: `wss://${window.location.hostname}/ws`,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
