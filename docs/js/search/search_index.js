var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.582,1,3.246]],["body/interfaces/AddMatchData.html",[0,1.005,1,6.018,2,3.148,3,0.128,4,0.128,5,0.116,6,4.94,7,0.354,8,0.655,9,2.183,10,6.248,11,1.711,12,0.494,13,0.008,14,0.984,15,0.202,16,3.583,17,3.244,18,2.075,19,0.751,20,1.992,21,3.057,22,0.128,23,4.478,24,4.2,25,6.395,26,4.018,27,4.018,28,3.58,29,3.743,30,3.348,31,3.375,32,2.075,33,2.37,34,3.394,35,2.673,36,1.299,37,1.913,38,1.587,39,1.838,40,1.802,41,2.075,42,2.891,43,2.891,44,3.223,45,2.972,46,0.154,47,5.606,48,2.096,49,1.854,50,2.096,51,1.652,52,1.587,53,5.304,54,1.652,55,5.304,56,0.14,57,1.686,58,1.587,59,1.587,60,5.304,61,2.426,62,3.712,63,5.304,64,1.731,65,5.304,66,1.223,67,2.404,68,4.94,69,2.139,70,2.815,71,5.304,72,2.972,73,4.649,74,3.244,75,2.544,76,4.94,77,4.94,78,4.2,79,4.94,80,1.652,81,5.304,82,6.866,83,6.866,84,5.304,85,5.314,86,5.304,87,5.304,88,3.244,89,1.867,90,5.304,91,2.37,92,2.167,93,5.304,94,1.652,95,6.395,96,1.652,97,6.395,98,6.395,99,5.304,100,1.652,101,5.304,102,1.652,103,5.304,104,1.652,105,5.304,106,3.348,107,1.566,108,4.94,109,5.304,110,1.379,111,1.127,112,2.891,113,5.304,114,4.018,115,2.317,116,2.251,117,5.304,118,5.304,119,4.845,120,5.304,121,0.005,122,0.006,123,0.005]],["title/injectables/AddRankingPenaltyGQL.html",[124,0.219,125,1.13]],["body/injectables/AddRankingPenaltyGQL.html",[0,0.534,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.43,11,1.727,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.734,37,0.645,38,1.017,39,0.619,40,0.607,46,0.192,48,1.038,49,1.56,50,1.038,56,0.198,59,1.557,64,1.408,94,1.489,96,1.868,100,1.489,102,0.671,104,0.671,107,1.842,110,1.953,111,1.637,121,0.002,122,0.003,123,0.002,124,0.446,125,1.038,126,0.572,127,0.658,128,2.395,129,0.487,130,0.467,131,2.385,132,2.521,133,1.83,134,2.206,135,2.174,136,1.99,137,1.968,138,1.722,139,0.253,140,2.653,141,2.417,142,0.658,143,0.607,144,1.757,145,1.125,146,1.08,147,1.102,148,1.102,149,1.102,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.125,157,2.009,158,1.722,159,1.722,160,2.295,161,1.102,162,1.102,163,1.757,164,1.102,165,1.969,166,1.102,167,0.713,168,2.1,169,1.519,170,0.713,171,0.713,172,1.08,173,0.713,174,1.582,175,1.55,176,1.08,177,1.582,178,2.162,179,2.162,180,2.009,181,1.582,182,1.722,183,1.55,184,1.55,185,1.102,186,0.712,187,1.125,188,1.125,189,1.393,190,1.582,191,1.393,192,1.393,193,1.125,194,1.125,195,1.781,196,0.713,197,1.55,198,1.08,199,1.55,200,1.102,201,1.125,202,1.125,203,1.55,204,1.43,205,2.009,206,1.946,207,1.55,208,1.55,209,1.671,210,1.102,211,0.713,212,1.55,213,1.793,214,1.08,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.671,221,0.917,222,1.688,223,1.017,224,1.038,225,1.338,226,0.902,227,0.699,228,1.08,229,1.722,230,0.699,231,1.08,232,1.757,233,0.699,234,1.854,235,0.699,236,0.839,237,1.365,238,1.059,239,1.654,240,2.179,241,1.102,242,1.102,243,0.783,244,1.102,245,1.102,246,1.621,247,1.526,248,1.102,249,1.102,250,0.917,251,1.017,252,1.55,253,1.102,254,0.685,255,1.08,256,1.08,257,1.311,258,1.102,259,1.102,260,1.338,261,0.713,262,1.102,263,1.102,264,1.102,265,1.102,266,1.102,267,1.102,268,1.43,269,1.08,270,0.685,271,1.495,272,1.21,273,0.499,274,1.038,275,0.671,276,0.713,277,1.094,278,1.338,279,1.831,280,1.338,281,1.311,282,1.338,283,1.08,284,1.08,285,1.08,286,1.08,287,1.338,288,1.338,289,1.338,290,1.08,291,0.685,292,1.767,293,1.731,294,0.671,295,2.339,296,2.402,297,0.671,298,0.713,299,0.713,300,0.671,301,0.713,302,0.713,303,0.671,304,0.713,305,0.713,306,0.658,307,0.713,308,0.713,309,0.658,310,0.713,311,0.713,312,0.671,313,0.671,314,0.713,315,0.713,316,0.671,317,0.671,318,1.102,319,0.671,320,0.713,321,0.713,322,0.685,323,0.713,324,0.713,325,0.685,326,0.713,327,0.713,328,0.685,329,0.713,330,0.685,331,0.713,332,0.685,333,0.713,334,0.713,335,0.685,336,0.713,337,0.713,338,0.671,339,0.713,340,0.713,341,0.658,342,0.658,343,0.713,344,0.713,345,0.671,346,0.713,347,0.713,348,0.671,349,0.671,350,0.685,351,2.201,352,0.713,353,0.713,354,0.645,355,0.713,356,0.713,357,0.645,358,0.713,359,0.713,360,0.607,361,0.713,362,1.393,363,0.645,364,0.713,365,0.658,366,0.607,367,0.713,368,0.658,369,0.671,370,0.713,371,0.713,372,0.632,373,0.658,374,0.685]],["title/injectables/AddTeamToSeasonGQL.html",[124,0.219,322,1.177]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.178,135,2.176,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,1.083,323,1.128,324,1.128,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,375,2.662]],["title/components/AddtournamentroundComponent.html",[19,0.435,57,1.177]],["body/components/AddtournamentroundComponent.html",[0,0.875,1,5.989,3,0.103,4,0.103,5,0.093,6,3.963,7,0.372,8,0.57,9,1.97,10,3.73,11,1.58,12,0.582,13,0.008,14,0.61,15,0.195,16,3.828,17,2.602,18,1.664,19,0.729,20,1.933,21,2.452,22,0.103,23,4.821,24,3.369,25,6.651,26,3.223,27,3.223,28,2.872,29,3.893,30,2.686,31,3.511,32,1.664,33,1.901,34,3.293,35,2.145,36,1.042,37,1.97,38,1.273,39,1.892,40,1.855,41,1.664,42,2.319,43,2.319,44,3.318,45,2.384,46,0.134,47,5.439,48,2.086,49,1.823,50,2.086,51,2.452,52,2.355,53,5.568,54,1.734,55,5.568,56,0.112,57,2.092,58,1.666,59,1.857,60,6.206,61,2.547,62,3.896,63,6.206,64,1.782,65,6.206,66,1.283,67,2.273,68,5.185,69,2.282,70,3.626,71,6.206,72,3.477,73,5.439,74,3.405,75,3.278,76,3.963,77,3.963,78,3.369,79,3.963,80,2.05,81,6.583,82,6.206,83,6.206,84,4.255,85,4.626,86,5.568,87,4.255,88,2.602,89,2.185,90,6.583,91,1.901,92,1.738,93,4.255,94,1.325,95,5.568,96,1.325,97,5.568,98,5.568,99,4.255,100,1.325,101,4.255,102,1.325,103,4.255,104,1.325,105,4.255,106,2.686,107,1.363,108,3.963,109,4.255,110,1.107,111,0.904,112,2.319,113,4.255,114,3.223,115,1.858,116,1.96,117,4.255,118,5.568,119,4.218,120,5.568,121,0.004,122,0.006,123,0.004,129,0.961,130,0.923,139,0.895,186,0.697,209,1.507,215,0.706,221,0.595,236,0.779,243,0.706,250,0.779,273,0.624,376,1.96,377,1.529,378,1.529,379,1.529,380,1.569,381,6.857,382,6.857,383,6.857,384,5.24,385,6.857,386,1.93,387,1.93,388,5.24,389,1.975,390,2.356,391,5.24,392,5.24,393,5.24,394,5.24,395,5.24,396,5.24,397,2.319,398,5.24,399,5.24,400,5.24,401,5.24,402,5.24,403,5.24,404,5.24,405,6.857,406,3.129,407,6.857,408,6.857,409,6.857,410,4.787,411,6.857,412,6.583,413,6.857,414,6.857,415,1.199,416,2.001,417,2.001,418,1.529,419,2.366,420,1.529,421,1.529,422,1.38,423,1.529,424,1.408,425,1.529,426,1.408,427,1.467,428,2.366,429,1.408,430,1.529,431,1.38,432,2.001,433,1.38,434,1.529,435,1.408,436,1.529,437,1.408,438,1.467,439,1.408,440,2.27,441,1.408,442,1.529,443,1.408,444,1.529,445,1.408,446,1.529,447,1.408,448,1.38,449,2.001,450,1.408,451,1.38,452,1.529,453,1.408,454,1.529,455,1.408,456,1.529,457,1.408,458,1.529,459,1.437,460,1.529,461,1.408,462,1.529,463,1.408,464,1.529,465,1.408,466,1.529,467,1.408,468,1.529,469,1.38,470,1.529,471,1.352,472,1.529,473,1.38,474,1.529,475,1.408,476,1.529,477,1.408,478,1.529,479,1.529,480,1.408,481,1.529,482,1.325,483,1.529,484,1.38,485,1.529,486,1.38,487,1.529,488,1.408,489,1.529,490,1.38,491,1.529,492,1.408,493,1.467,494,1.529,495,1.529]],["title/components/AdminComponent.html",[19,0.435,422,1.201]],["body/components/AdminComponent.html",[3,0.128,4,0.128,5,0.116,7,0.354,13,0.008,15,0.168,19,0.806,20,2.138,22,0.128,23,3.457,24,4.197,46,0.128,51,2.475,52,2.377,54,1.991,56,0.14,57,1.685,58,1.913,66,1.582,80,2.22,121,0.005,122,0.006,123,0.005,139,0.751,151,1.952,186,0.636,215,0.811,221,0.742,236,0.894,243,0.811,250,0.894,273,0.778,376,2.25,377,1.905,378,1.905,379,1.905,380,1.801,389,1.494,390,1.828,415,1.494,416,2.298,417,2.298,418,1.905,419,2.562,420,1.905,421,1.905,422,2.311,423,1.905,424,1.755,425,1.905,426,1.755,427,1.828,428,2.562,429,1.755,430,1.905,431,1.719,432,2.298,433,1.719,434,1.905,435,1.755,436,1.905,437,1.755,438,1.828,439,1.755,440,2.458,441,1.755,442,1.905,443,1.755,444,1.905,445,1.755,446,1.905,447,1.755,448,1.719,449,2.298,450,1.755,451,1.719,452,1.905,453,1.755,454,1.905,455,1.755,456,1.905,457,1.755,458,1.905,459,1.791,460,1.905,461,1.755,462,1.905,463,1.755,464,1.905,465,1.755,466,1.905,467,1.755,468,1.905,469,1.719,470,1.905,471,1.685,472,1.905,473,1.719,474,1.905,475,1.755,476,1.905,477,1.755,478,1.905,479,1.905,480,1.755,481,1.905,482,1.651,483,1.905,484,1.719,485,1.905,486,1.719,487,1.905,488,1.755,489,1.905,490,1.719,491,1.905,492,1.755,493,1.828,494,1.905,495,1.905,496,1.945,497,5.789,498,2.116,499,8.454,500,7.873,501,6.529,502,6.529]],["title/guards/AdminGuard.html",[503,3.703,504,3.246]],["body/guards/AdminGuard.html",[3,0.142,4,0.142,5,0.129,7,0.392,12,0.454,13,0.008,15,0.189,22,0.142,46,0.142,56,0.155,58,1.757,66,1.566,67,1.905,121,0.006,122,0.007,123,0.006,124,0.402,139,0.841,186,0.584,292,1.382,293,1.354,380,1.914,386,1.722,387,1.722,389,1.914,504,5.954,505,5.874,506,6.414,507,7.583,508,7.583,509,5.149,510,4.247,511,7.234,512,4.939,513,7.234,514,7.234,515,3.486,516,4.271,517,3.107,518,8.365]],["title/modules/AdminModule.html",[519,1.388,520,3.449]],["body/modules/AdminModule.html",[3,0.127,4,0.127,5,0.115,13,0.008,15,0.206,22,0.127,46,0.127,56,0.138,57,2.398,121,0.005,122,0.006,123,0.005,151,1.601,221,0.889,236,0.889,415,1.478,422,2.397,448,2.448,450,2.498,455,2.447,457,2.447,459,2.497,461,2.447,463,2.447,465,2.447,471,2.349,477,2.498,492,2.447,519,1.966,520,7.389,521,2.399,522,3.208,523,4.179,524,3.31,525,3.31,526,3.208,527,5.727,528,5.727,529,5.727,530,6.479,531,6.479,532,4.821,533,4.143,534,3.42,535,3.42,536,6.459,537,6.352,538,3.201,539,3.122,540,5.727,541,3.814,542,4.152,543,6.459,544,6.459,545,6.459,546,6.459,547,6.459,548,4.597,549,6.459,550,6.459,551,5.244,552,6.459,553,6.459,554,4.884,555,5.727,556,5.244,557,6.459,558,6.459,559,7.822,560,5.244,561,6.936,562,5.567,563,6.459,564,4.152,565,4.357]],["title/modules/AdminRoutingModule.html",[519,1.388,530,3.246]],["body/modules/AdminRoutingModule.html",[3,0.144,4,0.144,5,0.131,13,0.008,15,0.195,19,0.702,22,0.144,46,0.144,56,0.157,121,0.006,122,0.007,123,0.006,277,0.983,422,2.225,504,5.24,515,3.547,521,2.734,530,6.014,538,3.013,539,3.373,540,6.528,566,7.362,567,4.347,568,4.707,569,4.347,570,7.362,571,4.184,572,4.529]],["title/injectables/AllSeasonsListGQL.html",[124,0.219,368,1.13]],["body/injectables/AllSeasonsListGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.341,226,0.905,227,0.701,228,1.341,229,1.871,230,0.701,231,1.084,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.834,280,1.341,281,1.315,282,1.341,283,1.084,284,1.341,285,1.084,286,1.084,287,1.341,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,1.041,369,0.674,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,573,2.664]],["title/injectables/AllTeamsGQL.html",[124,0.219,369,1.153]],["body/injectables/AllTeamsGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.745,37,0.647,38,1.02,39,0.622,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.734,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.341,226,0.905,227,0.701,228,1.084,229,1.725,230,0.701,231,1.084,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.887,280,1.341,281,1.315,282,1.341,283,1.084,284,1.084,285,1.084,286,1.084,287,1.341,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,1.062,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,574,2.664]],["title/injectables/AllTournamentListGQL.html",[39,1.064,124,0.219]],["body/injectables/AllTournamentListGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.98,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.341,226,0.905,227,0.701,228,1.084,229,1.725,230,0.701,231,1.341,232,1.909,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.834,280,1.341,281,1.315,282,1.341,283,1.084,284,1.084,285,1.341,286,1.084,287,1.341,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.674,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,575,2.664]],["title/injectables/AllUsersGQL.html",[124,0.219,373,1.13]],["body/injectables/AllUsersGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.341,226,0.905,227,0.701,228,1.084,229,1.725,230,0.701,231,1.084,232,1.76,233,0.701,234,1.856,235,0.701,236,0.865,237,1.369,238,1.062,239,1.842,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.834,280,1.341,281,1.315,282,1.341,283,1.084,284,1.084,285,1.084,286,1.084,287,1.523,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.674,370,0.716,371,0.716,372,0.634,373,1.041,374,0.687,576,2.664]],["title/components/AppComponent.html",[19,0.435,424,1.226]],["body/components/AppComponent.html",[3,0.101,4,0.101,5,0.092,7,0.279,8,0.563,10,5.393,12,0.549,13,0.008,14,0.973,15,0.2,18,1.635,19,0.722,20,1.916,22,0.101,29,4.017,30,2.639,32,1.635,40,2.003,41,1.635,46,0.101,51,2.45,52,2.353,54,1.714,56,0.11,57,1.329,58,1.647,66,1.269,67,2.306,69,2.328,78,3.31,80,2.036,89,2.455,92,2.513,111,1.307,112,3.354,121,0.004,122,0.006,123,0.004,139,0.878,186,0.65,215,0.698,221,0.915,236,0.77,243,0.698,250,0.77,271,1.582,272,1.202,273,0.613,275,1.302,277,0.905,293,1.269,318,1.356,360,2.003,366,1.842,376,1.937,377,1.502,378,1.502,379,1.502,380,1.55,386,1.614,387,1.614,389,1.965,390,2.254,397,2.279,406,2.913,415,1.178,416,1.978,417,1.978,418,1.502,419,2.35,420,1.502,421,1.502,422,1.356,423,1.502,424,2.164,425,1.502,426,1.384,427,1.442,428,2.35,429,1.822,430,1.502,431,1.356,432,1.978,433,1.356,434,1.502,435,1.384,436,1.502,437,1.384,438,1.442,439,1.384,440,2.254,441,1.384,442,1.502,443,1.384,444,1.502,445,1.384,446,1.502,447,1.384,448,1.356,449,1.978,450,1.384,451,1.356,452,1.502,453,1.822,454,1.502,455,1.384,456,1.502,457,1.384,458,1.502,459,1.412,460,1.502,461,1.384,462,1.502,463,1.384,464,1.502,465,1.384,466,1.502,467,1.384,468,1.502,469,1.356,470,1.502,471,1.329,472,1.502,473,1.356,474,1.502,475,1.384,476,1.502,477,1.384,478,1.502,479,1.502,480,1.384,481,1.502,482,1.302,483,1.502,484,1.356,485,1.502,486,1.356,487,1.502,488,1.384,489,1.502,490,1.356,491,1.502,492,1.384,493,1.442,494,1.502,495,1.502,496,1.534,498,1.822,509,3.664,510,3.915,512,4.754,516,3.04,577,4.565,578,7.577,579,6.778,580,4.974,581,5.955,582,8.052,583,6.778,584,8.052,585,8.052,586,8.59,587,6.794,588,4.013,589,4.953,590,5.908,591,5.63,592,5.387,593,6.778,594,5.148,595,5.148,596,6.778,597,5.148,598,5.148,599,5.148,600,5.148,601,5.148,602,5.148,603,5.148,604,5.148,605,6.009,606,4.565,607,4.565,608,3.893,609,4.565,610,3.893,611,4.18,612,4.565,613,3.31,614,2.822,615,3.893,616,5.148,617,4.565,618,4.565,619,5.148,620,4.565,621,5.148,622,4.18,623,4.565,624,5.148,625,5.148,626,5.148,627,6.778,628,5.148,629,5.148,630,5.148,631,5.148,632,5.148,633,5.148,634,5.148,635,5.148,636,5.148,637,5.148,638,5.148,639,5.148,640,5.504,641,5.148,642,4.573,643,5.112,644,5.112,645,5.148,646,6.009,647,5.148,648,6.778,649,6.778,650,6.778,651,6.778,652,6.778,653,6.778,654,6.009,655,6.778,656,6.778,657,6.009,658,6.778,659,6.778,660,6.778,661,6.778,662,6.778,663,7.577,664,7.577,665,6.718,666,5.148,667,6.718,668,5.148,669,7.577,670,5.148,671,5.307,672,5.148,673,5.148,674,6.009,675,8.052,676,6.778,677,6.009,678,5.148,679,6.009,680,6.778,681,6.009,682,6.778,683,6.778,684,6.778,685,7.616,686,6.778,687,6.778,688,5.148,689,6.778,690,5.148,691,6.778,692,6.778,693,4.565,694,5.148,695,5.148,696,5.148,697,5.148]],["title/modules/AppCoreModule.html",[519,1.388,698,3.077]],["body/modules/AppCoreModule.html",[3,0.144,4,0.144,5,0.131,13,0.008,15,0.195,22,0.144,26,4.531,27,4.531,28,4.037,32,2.339,33,2.673,46,0.144,56,0.158,121,0.006,122,0.007,123,0.006,521,2.736,525,3.775,538,3.015,539,3.374,698,5.703,699,5.982,700,7.367,701,7.495,702,6.393,703,7.367,704,5.982,705,7.367,706,6.532,707,7.367]],["title/modules/AppModule.html",[519,1.388,708,3.449]],["body/modules/AppModule.html",[3,0.127,4,0.127,5,0.115,13,0.008,15,0.207,18,2.05,22,0.127,29,3.723,30,3.308,32,2.483,33,2.342,46,0.165,52,1.568,56,0.138,121,0.005,122,0.006,123,0.005,415,1.477,424,2.551,429,2.498,453,2.498,482,2.128,510,4.26,516,3.812,517,2.904,519,1.965,521,2.397,522,3.206,523,4.178,524,4.311,525,4.311,526,3.206,533,4.141,534,3.419,535,3.419,537,6.35,538,3.2,539,3.121,541,3.812,591,5.409,606,5.724,607,5.724,614,3.538,617,5.724,704,5.242,706,6.933,708,7.293,709,5.724,710,5.724,711,5.724,712,5.724,713,5.724,714,6.479,715,6.479,716,6.141,717,5.242,718,7.82,719,6.933,720,5.242,721,8.413,722,7.82,723,6.455,724,6.455,725,7.82,726,5.724,727,5.724,728,5.724,729,7.82,730,4.355,731,6.933,732,6.933,733,3.308,734,6.455,735,3.971,736,6.455,737,6.455,738,6.455,739,5.724,740,6.455,741,7.82,742,6.455,743,6.933,744,5.724,745,7.82,746,5.724,747,6.455,748,7.82,749,5.242,750,7.82,751,7.82,752,4.141,753,5.242]],["title/modules/AppRoutingModule.html",[519,1.388,714,3.246]],["body/modules/AppRoutingModule.html",[3,0.139,4,0.139,5,0.127,13,0.008,15,0.193,22,0.139,46,0.162,56,0.152,121,0.006,122,0.007,123,0.006,151,1.759,217,1.97,234,1.69,277,0.948,504,6.232,507,7.111,508,7.111,515,3.42,521,2.636,526,3.525,538,2.905,539,3.302,567,4.191,568,4.381,569,4.885,571,5.368,699,5.763,714,5.888,754,7.098,755,6.947,756,7.098,757,7.098,758,7.098,759,7.098,760,6.293,761,5.368,762,9.384,763,7.098,764,7.098,765,7.098,766,4.788,767,7.098,768,7.098,769,7.098,770,7.098,771,5.763,772,7.098,773,7.098]],["title/interfaces/AppsettingsModel.html",[0,0.582,774,3.449]],["body/interfaces/AppsettingsModel.html",[0,0.907,2,3.424,3,0.139,4,0.139,5,0.127,7,0.385,8,0.688,12,0.55,13,0.008,14,1.105,15,0.177,22,0.139,46,0.162,56,0.152,61,2.639,89,2.031,91,2.579,92,2.357,112,3.145,115,2.936,116,2.366,121,0.006,122,0.007,123,0.006,124,0.398,292,1.357,293,1.33,517,2.639,591,4.569,730,4.794,774,6.626,775,5.77,776,8.001,777,8.001,778,8.001,779,7.768,780,6.301,781,5.058,782,5.77,783,6.301,784,6.301,785,6.301,786,6.301,787,4.888,788,4.371,789,4.371,790,6.301,791,6.301,792,6.301,793,4.371]],["title/injectables/AppsettingsService.html",[124,0.219,591,2.932]],["body/injectables/AppsettingsService.html",[0,0.898,3,0.138,4,0.138,5,0.125,7,0.382,8,0.684,12,0.516,13,0.008,14,1.015,15,0.176,22,0.138,46,0.161,56,0.15,61,2.613,66,1.317,89,2.494,91,2.553,92,2.333,112,3.114,115,2.919,116,2.353,121,0.006,122,0.007,123,0.006,124,0.396,126,1.516,139,0.857,186,0.568,292,1.344,293,1.317,380,1.883,386,1.675,387,1.675,389,1.883,517,2.613,591,5.292,730,4.747,774,6.598,775,5.713,776,6.238,777,6.238,778,6.238,779,8.23,780,7.736,781,5.007,782,7.304,783,6.238,784,6.238,785,6.238,786,7.976,787,5.152,788,4.328,789,4.328,790,6.238,791,6.238,792,6.238,793,4.328,794,7.035,795,8.231,796,7.035,797,7.035]],["title/injectables/AuthenticationService.html",[124,0.219,510,2.134]],["body/injectables/AuthenticationService.html",[0,0.749,3,0.115,4,0.115,5,0.105,7,0.318,8,0.613,12,0.566,13,0.008,14,1.106,15,0.19,22,0.115,32,1.863,46,0.144,56,0.125,61,3.303,66,1.38,67,2.294,69,2.249,89,2.542,116,2.304,121,0.007,122,0.006,123,0.005,124,0.354,126,1.264,129,1.076,130,1.033,139,0.894,143,1.993,150,1.454,168,1.919,169,1.513,172,1.513,186,0.704,204,1.425,236,0.961,277,0.783,292,1.12,293,1.098,306,2.096,309,2.096,372,2.013,380,1.686,386,2.074,387,2.074,389,2.034,390,1.642,397,2.596,510,3.772,515,2.826,517,3.39,613,3.771,614,3.214,643,3.957,644,3.957,730,3.957,766,5.438,787,5.536,788,5.47,789,5.359,793,4.958,798,4.435,799,7.146,800,6.535,801,7.37,802,7.497,803,7.37,804,7.497,805,7.37,806,5.246,807,7.146,808,7.146,809,7.146,810,5.865,811,7.884,812,6.545,813,7.146,814,7.146,815,8.002,816,5.865,817,6.535,818,7.074,819,5.865,820,4.174,821,6.535,822,5.865,823,5.574,824,5.865,825,6.535,826,6.395,827,5.865,828,5.438,829,5.865,830,6.535,831,5.865,832,6.535,833,5.865,834,6.535,835,5.865,836,5.865,837,5.865,838,5.865,839,5.865,840,5.865,841,5.865,842,5.985,843,5.985,844,4.762,845,3.463,846,4.435,847,4.435,848,4.762,849,5.2,850,2.745,851,7.22,852,5.2,853,5.2,854,5.985,855,5.2,856,6.535,857,5.2,858,5.2,859,5.737,860,6.535,861,5.2,862,6.535,863,5.2,864,5.2,865,5.2,866,5.2,867,5.985,868,4.762,869,4.534,870,4.762,871,5.2,872,5.2,873,4.435,874,5.2,875,5.2,876,5.2,877,4.762,878,5.2,879,5.2]],["title/components/CancelMatchDialogComponent.html",[19,0.435,426,1.226]],["body/components/CancelMatchDialogComponent.html",[3,0.113,4,0.113,5,0.103,7,0.313,8,0.607,12,0.528,13,0.008,14,0.931,15,0.189,16,3.945,17,2.868,18,1.834,19,0.763,20,2.024,21,2.703,22,0.113,31,3.59,32,1.834,33,2.095,41,1.834,44,3.441,45,2.627,46,0.113,51,2.462,52,2.365,54,1.846,56,0.124,57,1.49,58,1.773,66,1.366,67,2.284,69,2.24,70,3.737,72,3.641,74,3.625,80,2.127,89,2.288,91,2.095,92,1.915,106,2.96,107,1.148,110,1.22,111,0.996,112,2.556,115,2.048,116,2.086,121,0.005,122,0.006,123,0.005,136,1.944,139,0.827,157,1.49,166,1.922,186,0.679,215,0.994,216,1.924,221,0.656,236,0.829,243,0.752,250,0.829,273,0.688,303,2.275,360,2.058,376,2.086,377,1.685,378,1.685,379,1.685,380,1.67,386,1.738,387,1.738,389,1.67,390,1.617,397,2.556,406,3.003,415,1.321,416,2.13,417,2.13,418,1.685,419,2.454,420,1.685,421,1.685,422,1.521,423,1.685,424,1.552,425,1.685,426,2.26,427,2.548,428,2.454,429,1.552,430,1.685,431,1.521,432,2.13,433,1.521,434,1.685,435,1.552,436,1.685,437,1.552,438,1.617,439,1.552,440,2.354,441,1.552,442,1.685,443,1.552,444,1.685,445,1.552,446,1.685,447,1.552,448,1.521,449,2.13,450,1.552,451,1.521,452,1.685,453,1.552,454,1.685,455,1.552,456,1.685,457,1.552,458,1.685,459,1.584,460,1.685,461,1.552,462,1.685,463,1.552,464,1.685,465,1.552,466,1.685,467,1.552,468,1.685,469,1.521,470,1.685,471,1.49,472,1.685,473,1.521,474,1.685,475,1.552,476,1.685,477,1.552,478,1.685,479,1.685,480,1.552,481,1.685,482,1.46,483,1.685,484,1.521,485,1.685,486,1.521,487,1.685,488,1.552,489,1.685,490,1.521,491,1.685,492,1.552,493,1.617,494,1.685,495,1.685,496,1.721,498,1.962,580,4.93,588,3.865,612,5.12,642,3.896,880,7.853,881,6.698,882,4.11,883,6.052,884,5.52,885,4.367,886,5.775,887,7.299,888,5.775,889,4.689,890,5.12,891,5.12,892,5.12,893,5.775,894,5.775,895,5.775,896,5.775,897,5.775,898,5.775,899,3.713,900,5.775,901,7.299,902,4.31,903,4.31,904,7.299,905,7.299,906,5.52,907,6.472]],["title/injectables/CancelMatchGQL.html",[124,0.219,303,1.153]],["body/injectables/CancelMatchGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.992,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.051,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,1.062,304,1.128,305,1.128,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,908,2.662]],["title/components/ChangepasswordComponent.html",[19,0.435,429,1.226]],["body/components/ChangepasswordComponent.html",[3,0.118,4,0.118,5,0.107,7,0.327,8,0.623,12,0.551,13,0.008,15,0.183,16,3.996,18,1.915,19,0.778,20,2.064,22,0.118,46,0.118,51,2.467,52,2.37,54,1.896,56,0.129,57,1.556,58,1.822,61,2.785,66,1.404,67,1.588,69,2.064,70,3.785,80,2.16,89,2.333,91,2.188,92,2,115,2.138,116,1.723,121,0.005,122,0.006,123,0.005,139,0.866,186,0.659,215,0.772,221,0.685,236,0.852,243,0.772,250,0.852,273,0.718,376,2.143,377,1.759,378,1.759,379,1.759,380,1.715,386,1.436,387,1.436,389,1.715,390,1.688,406,3.111,415,1.379,416,2.188,417,2.188,418,1.759,419,2.492,420,1.759,421,1.759,422,1.588,423,1.759,424,1.62,425,1.759,426,1.62,427,1.688,428,2.492,429,2.295,430,1.759,431,1.588,432,2.188,433,1.588,434,1.759,435,1.62,436,1.759,437,1.62,438,1.688,439,1.62,440,2.391,441,1.62,442,1.759,443,1.62,444,1.759,445,1.62,446,1.759,447,1.62,448,1.588,449,2.188,450,1.62,451,1.588,452,1.759,453,1.62,454,1.759,455,1.62,456,1.759,457,1.62,458,1.759,459,1.654,460,1.759,461,1.62,462,1.759,463,1.62,464,1.759,465,1.62,466,1.759,467,1.62,468,1.759,469,1.588,470,1.759,471,1.556,472,1.759,473,1.588,474,1.759,475,1.62,476,1.759,477,1.62,478,1.759,479,1.759,480,1.62,481,1.759,482,1.525,483,1.759,484,1.588,485,1.759,486,1.588,487,1.759,488,1.62,489,1.759,490,1.588,491,1.759,492,1.62,493,1.688,494,1.759,495,1.759,496,1.797,498,2.015,509,4.291,510,3.996,512,4.428,516,3.56,733,3.09,752,3.193,766,5.507,800,7.939,818,6.628,850,3.509,869,3.709,899,3.876,909,5.346,910,8.162,911,7.499,912,8.162,913,7.499,914,6.029,915,6.029,916,6.029,917,5.585,918,6.029,919,6.029,920,3.876,921,6.029,922,5.059,923,5.346,924,6.029,925,6.029,926,6.029,927,7.499,928,4.896,929,3.304,930,7.572,931,7.572,932,7.499,933,6.649]],["title/components/ContactComponent.html",[19,0.435,431,1.201]],["body/components/ContactComponent.html",[0,0.795,3,0.122,4,0.122,5,0.111,7,0.338,8,0.636,12,0.52,13,0.008,15,0.177,16,4.034,17,3.095,18,1.979,19,0.79,20,2.095,21,2.916,22,0.122,36,1.239,41,1.979,46,0.122,49,1.316,51,2.47,52,2.373,54,1.936,56,0.133,57,1.608,58,1.859,66,1.433,69,2.283,70,3.723,74,3.801,75,3.454,80,2.185,121,0.005,122,0.006,123,0.005,139,0.824,186,0.669,195,1.426,215,0.788,221,0.708,226,1.343,236,0.869,243,0.89,250,1.025,273,0.742,376,2.188,377,1.819,378,1.819,379,1.819,380,1.751,386,1.484,387,1.484,389,1.426,390,1.745,397,2.758,406,2.929,410,4.519,415,1.426,416,2.234,417,2.234,418,1.819,419,2.521,420,1.819,421,1.819,422,1.641,423,1.819,424,1.675,425,1.819,426,1.675,427,1.745,428,2.521,429,1.675,430,1.819,431,2.275,432,2.234,433,1.641,434,1.819,435,1.675,436,1.819,437,1.675,438,1.745,439,1.675,440,2.419,441,1.675,442,1.819,443,1.675,444,1.819,445,1.675,446,1.819,447,1.675,448,1.641,449,2.234,450,1.675,451,1.641,452,1.819,453,1.675,454,1.819,455,1.675,456,1.819,457,1.675,458,1.819,459,1.709,460,1.819,461,1.675,462,1.819,463,1.675,464,1.819,465,1.675,466,1.819,467,1.675,468,1.819,469,1.641,470,1.819,471,1.608,472,1.819,473,1.641,474,1.819,475,1.675,476,1.819,477,1.675,478,1.819,479,1.819,480,1.675,481,1.819,482,1.576,483,1.819,484,1.641,485,1.819,486,1.641,487,1.819,488,1.675,489,1.819,490,1.641,491,1.819,492,1.675,493,1.745,494,1.819,495,1.819,496,1.857,498,2.057,934,5.06,935,6.726,936,6.215,937,5.525,938,6.706,939,6.232,940,6.232,941,6.232,942,6.232,943,7.653,944,6.786]],["title/interfaces/ContactComponentData.html",[0,0.582,938,3.449]],["body/interfaces/ContactComponentData.html",[0,0.924,2,3.488,3,0.142,4,0.142,5,0.129,7,0.393,8,0.696,12,0.525,13,0.008,15,0.189,16,3.807,17,3.595,18,2.299,19,0.798,20,2.116,21,3.387,22,0.142,36,1.439,41,2.299,46,0.142,49,1.864,51,1.831,52,1.758,54,1.831,56,0.155,58,1.758,66,1.355,69,2.116,70,3.119,74,3.595,75,2.819,80,1.831,121,0.006,122,0.007,123,0.006,195,2.076,226,1.902,243,0.951,250,0.822,431,1.906,498,1.945,934,5.878,935,5.878,936,5.878,938,6.676]],["title/components/ContactPersonComponent.html",[19,0.435,435,1.226]],["body/components/ContactPersonComponent.html",[3,0.125,4,0.125,5,0.113,7,0.345,12,0.399,13,0.008,15,0.166,19,0.797,20,2.114,22,0.125,41,2.021,46,0.125,51,2.472,52,2.375,54,1.96,56,0.136,57,1.642,58,1.883,66,1.565,80,2.201,121,0.005,122,0.006,123,0.005,139,0.797,186,0.626,215,0.798,221,0.723,236,0.881,243,0.798,250,1.08,251,1.883,273,0.758,376,2.216,377,1.857,378,1.857,379,1.857,380,1.773,389,1.456,390,1.782,406,2.628,415,1.456,416,2.262,417,2.262,418,1.857,419,2.539,420,1.857,421,1.857,422,1.676,423,1.857,424,1.71,425,1.857,426,1.71,427,1.782,428,2.539,429,1.71,430,1.857,431,1.676,432,2.262,433,1.676,434,1.857,435,2.339,436,1.857,437,1.71,438,1.782,439,1.71,440,2.436,441,1.71,442,1.857,443,1.71,444,1.857,445,1.71,446,1.857,447,1.71,448,1.676,449,2.262,450,1.71,451,1.676,452,1.857,453,1.71,454,1.857,455,1.71,456,1.857,457,1.71,458,1.857,459,1.745,460,1.857,461,1.71,462,1.857,463,1.71,464,1.857,465,1.71,466,1.857,467,1.71,468,1.857,469,1.676,470,1.857,471,1.642,472,1.857,473,1.676,474,1.857,475,1.71,476,1.857,477,1.71,478,1.857,479,1.857,480,1.71,481,1.857,482,1.609,483,1.857,484,1.676,485,1.857,486,1.676,487,1.857,488,1.71,489,1.857,490,1.676,491,1.857,492,1.71,493,1.782,494,1.857,495,1.857,496,1.896,498,2.083,657,7.715,945,7.715,946,7.066,947,5.642,948,8.36,949,7.752,950,5.23,951,7.752,952,6.363,953,4.769,954,7.752,955,7.752,956,7.752,957,7.752,958,7.752,959,7.752,960,6.295]],["title/components/ContactlistComponent.html",[19,0.435,433,1.201]],["body/components/ContactlistComponent.html",[3,0.128,4,0.128,5,0.117,7,0.355,13,0.008,15,0.14,19,0.807,20,2.141,22,0.128,46,0.128,51,2.475,52,2.378,54,1.995,56,0.14,57,1.69,58,1.916,66,1.585,80,2.222,121,0.005,122,0.006,123,0.005,139,0.752,186,0.637,215,0.812,221,0.744,236,0.896,243,0.812,250,0.896,273,0.78,376,2.255,377,1.911,378,1.911,379,1.911,380,1.805,389,1.498,390,1.834,415,1.498,416,2.302,417,2.302,418,1.911,419,2.564,420,1.911,421,1.911,422,1.725,423,1.911,424,1.76,425,1.911,426,1.76,427,1.834,428,2.564,429,1.76,430,1.911,431,1.725,432,2.302,433,2.314,434,1.911,435,1.76,436,1.911,437,1.76,438,1.834,439,1.76,440,2.46,441,1.76,442,1.911,443,1.76,444,1.911,445,1.76,446,1.911,447,1.76,448,1.725,449,2.302,450,1.76,451,1.725,452,1.911,453,1.76,454,1.911,455,1.76,456,1.911,457,1.76,458,1.911,459,1.797,460,1.911,461,1.76,462,1.911,463,1.76,464,1.911,465,1.76,466,1.911,467,1.76,468,1.911,469,1.725,470,1.911,471,1.69,472,1.911,473,1.725,474,1.911,475,1.76,476,1.911,477,1.76,478,1.911,479,1.911,480,1.76,481,1.911,482,1.657,483,1.911,484,1.725,485,1.911,486,1.725,487,1.911,488,1.76,489,1.911,490,1.725,491,1.911,492,1.76,493,1.834,494,1.911,495,1.911,496,1.952,498,2.12,961,5.808,962,6.995,963,8.466,964,7.889,965,6.55,966,6.55]],["title/modules/ContactlistModule.html",[519,1.388,967,3.449]],["body/modules/ContactlistModule.html",[3,0.139,4,0.139,5,0.127,13,0.008,15,0.199,22,0.139,46,0.139,56,0.152,121,0.006,122,0.007,123,0.006,224,1.763,415,1.628,433,2.45,475,2.501,488,2.501,519,2.165,521,2.642,522,3.533,523,4.353,524,3.646,525,3.646,526,3.533,532,4.928,533,4.387,534,3.768,535,3.768,538,3.391,539,3.307,541,4.201,542,4.574,962,6.308,967,7.294,968,6.308,969,6.308,970,6.308,971,6.623,972,7.114,973,6.308,974,7.114]],["title/modules/ContactlistRoutingModule.html",[519,1.388,971,3.246]],["body/modules/ContactlistRoutingModule.html",[3,0.145,4,0.145,5,0.132,13,0.008,15,0.19,19,0.704,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.986,433,2.229,515,3.558,521,2.743,538,3.022,539,3.379,567,4.36,568,4.713,569,4.36,571,4.196,572,4.543,971,6.025,973,6.548,975,7.385]],["title/injectables/CreateMatchesForSeasonGQL.html",[124,0.219,328,1.177]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.019,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.41,94,1.491,96,1.87,100,1.491,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.573,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.193,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.417,142,0.66,143,0.609,144,1.842,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.724,159,1.724,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.715,168,2.101,169,1.522,170,0.715,171,0.715,172,1.083,173,0.715,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.724,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.585,190,1.918,191,1.396,192,1.396,193,1.128,194,1.128,195,1.782,196,0.715,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.715,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.019,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.724,230,0.701,231,1.083,232,1.76,233,0.701,234,1.855,235,0.701,236,0.84,237,1.368,238,1.061,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.623,247,1.528,248,1.105,249,1.105,250,0.918,251,1.019,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.715,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.212,273,0.5,274,1.04,275,0.673,276,0.715,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.715,299,0.715,300,0.673,301,0.715,302,0.715,303,0.673,304,0.715,305,0.715,306,0.66,307,0.715,308,0.715,309,0.66,310,0.715,311,0.715,312,0.673,313,0.673,314,0.715,315,0.715,316,0.673,317,0.673,318,1.105,319,0.673,320,0.715,321,0.715,322,0.687,323,0.715,324,0.715,325,0.687,326,0.715,327,0.715,328,1.083,329,1.128,330,0.687,331,0.715,332,0.687,333,0.715,334,0.715,335,0.687,336,0.715,337,0.715,338,0.673,339,0.715,340,0.715,341,0.66,342,0.66,343,0.715,344,0.715,345,0.673,346,0.715,347,0.715,348,0.673,349,0.673,350,0.687,351,2.203,352,0.715,353,0.715,354,0.647,355,0.715,356,0.715,357,0.647,358,0.715,359,0.715,360,0.609,361,0.715,362,1.396,363,0.647,364,0.715,365,0.66,366,0.609,367,0.715,368,0.66,369,0.673,370,0.715,371,0.715,372,0.634,373,0.66,374,0.687,976,2.661]],["title/components/CreatePitchDialogComponent.html",[19,0.435,437,1.226]],["body/components/CreatePitchDialogComponent.html",[3,0.109,4,0.109,5,0.099,7,0.302,8,0.592,12,0.55,13,0.008,15,0.191,16,3.772,18,1.765,19,0.749,20,1.988,22,0.109,31,3.56,32,1.765,33,2.017,41,1.765,44,3.393,45,2.529,46,0.109,51,2.458,52,2.361,54,1.802,56,0.119,57,1.435,58,1.731,61,2.646,66,1.333,67,2.257,70,3.388,72,3.577,80,2.097,89,2.247,91,2.017,92,1.844,115,1.972,116,2.036,121,0.005,122,0.006,123,0.005,129,1.02,130,0.979,139,0.877,182,1.406,186,0.635,215,0.734,221,0.632,224,1.378,236,0.809,243,0.998,250,0.809,273,0.662,277,0.951,376,2.036,377,1.622,378,1.622,379,1.622,380,1.63,386,1.324,387,1.324,389,1.799,390,1.995,397,2.46,406,3.118,415,1.272,416,2.079,417,2.079,418,1.622,419,2.42,420,1.622,421,1.622,422,1.464,423,1.622,424,1.494,425,1.622,426,1.494,427,1.557,428,2.42,429,1.494,430,1.622,431,1.464,432,2.079,433,1.464,434,1.622,435,1.494,436,1.622,437,2.228,438,2.529,439,1.494,440,2.322,441,1.494,442,1.622,443,1.494,444,1.622,445,1.494,446,1.622,447,1.494,448,1.464,449,2.079,450,1.494,451,1.464,452,1.622,453,1.494,454,1.622,455,1.494,456,1.622,457,1.494,458,1.622,459,1.525,460,1.622,461,1.494,462,1.622,463,1.494,464,1.622,465,1.494,466,1.622,467,1.494,468,1.622,469,1.464,470,1.622,471,1.435,472,1.622,473,1.464,474,1.622,475,1.494,476,1.622,477,1.494,478,1.622,479,1.622,480,1.494,481,1.622,482,1.406,483,1.622,484,1.464,485,1.622,486,1.464,487,1.622,488,1.494,489,1.622,490,1.464,491,1.622,492,1.494,493,1.557,494,1.622,495,1.622,496,1.657,498,1.915,588,3.773,733,2.849,752,2.944,850,3.334,882,3.957,883,5.946,884,5.388,890,4.929,891,4.929,899,3.574,917,5.1,920,3.574,922,4.806,977,8.207,978,6.588,979,7.862,980,7.862,981,7.862,982,7.862,983,7.862,984,7.862,985,8.291,986,6.733,987,4.929,988,6.633,989,5.067,990,5.785,991,4.929,992,5.559,993,5.559,994,7.124,995,5.559,996,4.929,997,7.124,998,5.559,999,4.204,1000,4.929,1001,4.929,1002,5.559,1003,5.559,1004,4.514,1005,5.559,1006,5.559,1007,5.559,1008,5.559,1009,5.559,1010,5.559,1011,5.559,1012,5.559,1013,5.559,1014,5.559,1015,5.559,1016,5.559,1017,7.124,1018,5.559,1019,5.559,1020,5.559,1021,5.559,1022,5.559,1023,5.559,1024,5.559,1025,5.559,1026,5.559,1027,7.124,1028,7.124,1029,7.124,1030,7.124,1031,7.124,1032,7.124,1033,6.317]],["title/injectables/CreatePitchGQL.html",[124,0.219,317,1.153]],["body/injectables/CreatePitchGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.431,11,1.727,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.645,38,1.018,39,0.62,40,0.607,46,0.192,48,1.038,49,1.561,50,1.038,56,0.198,59,1.557,64,1.409,94,1.49,96,1.869,100,1.49,102,0.672,104,0.672,107,1.843,110,1.953,111,1.637,121,0.002,122,0.003,123,0.002,124,0.446,125,0.658,126,0.572,127,0.658,128,2.395,129,0.487,130,0.468,131,2.385,132,2.521,133,1.583,134,2.16,135,2.134,136,1.892,137,1.832,138,1.583,139,0.253,141,2.417,142,0.658,143,0.607,144,1.758,145,1.126,146,1.081,147,1.103,148,1.103,149,1.103,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.126,157,2.009,158,1.723,159,1.723,160,2.295,161,1.103,162,1.103,163,1.758,164,1.103,165,1.969,166,1.103,167,0.714,168,2.1,169,1.52,170,0.714,171,0.714,172,1.081,173,0.714,174,1.583,175,1.551,176,1.081,177,1.583,178,2.162,179,2.162,180,2.009,181,1.831,182,1.923,183,1.878,184,1.878,185,1.103,186,0.712,187,1.126,188,1.126,189,1.394,190,1.583,191,1.394,192,1.394,193,1.126,194,1.126,195,1.781,196,0.714,197,1.551,198,1.081,199,1.551,200,1.103,201,1.126,202,1.126,203,1.551,204,1.431,205,2.009,206,1.946,207,1.551,208,1.551,209,1.672,210,1.103,211,0.714,212,1.551,213,1.794,214,1.081,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.672,221,0.917,222,1.688,223,1.018,224,1.038,225,1.339,226,0.903,227,0.699,228,1.081,229,1.723,230,0.699,231,1.081,232,1.758,233,0.699,234,1.854,235,0.699,236,0.84,237,1.366,238,1.059,239,1.654,240,2.18,241,1.103,242,1.103,243,0.783,244,1.103,245,1.103,246,1.622,247,1.526,248,1.103,249,1.103,250,0.917,251,1.018,252,1.551,253,1.103,254,0.685,255,1.081,256,1.081,257,1.312,258,1.103,259,1.103,260,1.339,261,0.714,262,1.103,263,1.103,264,1.103,265,1.103,266,1.103,267,1.103,268,1.431,269,1.081,270,0.685,271,1.496,272,1.211,273,0.499,274,1.038,275,0.672,276,0.714,277,1.094,278,1.339,279,1.832,280,1.339,281,1.312,282,1.339,283,1.081,284,1.081,285,1.081,286,1.081,287,1.339,288,1.339,289,1.339,290,1.081,291,0.685,292,1.767,293,1.731,294,0.672,295,2.339,296,2.402,297,0.672,298,0.714,299,0.714,300,0.672,301,0.714,302,0.714,303,0.672,304,0.714,305,0.714,306,0.658,307,0.714,308,0.714,309,0.658,310,0.714,311,0.714,312,0.672,313,0.672,314,0.714,315,0.714,316,0.672,317,1.059,318,1.551,319,0.672,320,0.714,321,0.714,322,0.685,323,0.714,324,0.714,325,0.685,326,0.714,327,0.714,328,0.685,329,0.714,330,0.685,331,0.714,332,0.685,333,0.714,334,0.714,335,0.685,336,0.714,337,0.714,338,0.672,339,0.714,340,0.714,341,0.658,342,0.658,343,0.714,344,0.714,345,0.672,346,0.714,347,0.714,348,0.672,349,0.672,350,0.685,351,2.202,352,0.714,353,0.714,354,0.645,355,0.714,356,0.714,357,0.645,358,0.714,359,0.714,360,0.607,361,0.714,362,1.394,363,0.645,364,0.714,365,0.658,366,0.607,367,0.714,368,0.658,369,0.672,370,0.714,371,0.714,372,0.632,373,0.658,374,0.685,1034,2.655]],["title/injectables/CreateSeasonGQL.html",[124,0.219,319,1.153]],["body/injectables/CreateSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.722,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,1.062,320,1.128,321,1.128,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1035,2.662]],["title/injectables/CreateTournamentGQL.html",[124,0.219,345,1.153]],["body/injectables/CreateTournamentGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.722,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,1.062,346,1.128,347,1.128,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1036,2.662]],["title/injectables/CreateTournamentRoundGQL.html",[37,1.108,124,0.219]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.732,11,1.727,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,1.018,38,1.26,39,0.62,40,0.607,46,0.192,48,1.038,49,1.561,50,1.038,56,0.198,59,1.557,64,1.409,94,1.803,96,2.009,100,1.803,102,0.672,104,0.672,107,1.843,110,1.953,111,1.633,121,0.002,122,0.003,123,0.002,124,0.446,125,0.658,126,0.572,127,0.658,128,2.395,129,0.487,130,0.468,131,2.385,132,2.521,133,1.583,134,2.16,135,2.134,136,1.892,137,1.832,138,1.723,139,0.253,141,2.417,142,0.658,143,0.607,144,1.84,145,1.126,146,1.081,147,1.103,148,1.103,149,1.103,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.126,157,2.009,158,1.723,159,1.723,160,2.295,161,1.103,162,1.103,163,1.758,164,1.103,165,1.969,166,1.103,167,0.714,168,2.1,169,1.52,170,0.714,171,0.714,172,1.081,173,0.714,174,1.583,175,1.551,176,1.081,177,1.583,178,2.162,179,2.162,180,2.009,181,1.583,182,1.723,183,1.551,184,1.551,185,1.103,186,0.712,187,1.126,188,1.126,189,1.394,190,1.583,191,1.394,192,1.394,193,1.126,194,1.126,195,1.781,196,0.714,197,1.551,198,1.081,199,1.551,200,1.103,201,1.394,202,1.394,203,1.551,204,1.431,205,2.009,206,1.946,207,1.551,208,1.551,209,1.672,210,1.103,211,0.714,212,1.551,213,1.794,214,1.081,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.672,221,0.917,222,1.688,223,1.018,224,1.038,225,1.339,226,0.903,227,0.699,228,1.081,229,1.723,230,0.699,231,1.081,232,1.758,233,0.699,234,1.854,235,0.699,236,0.84,237,1.366,238,1.059,239,1.654,240,2.18,241,1.103,242,1.103,243,0.783,244,1.103,245,1.103,246,1.622,247,1.526,248,1.103,249,1.103,250,0.917,251,1.018,252,1.551,253,1.103,254,0.685,255,1.081,256,1.081,257,1.312,258,1.103,259,1.103,260,1.339,261,0.714,262,1.103,263,1.103,264,1.103,265,1.103,266,1.103,267,1.103,268,1.431,269,1.081,270,0.685,271,1.496,272,1.211,273,0.499,274,1.038,275,0.672,276,0.714,277,1.094,278,1.339,279,1.832,280,1.339,281,1.312,282,1.339,283,1.081,284,1.081,285,1.081,286,1.081,287,1.339,288,1.339,289,1.339,290,1.081,291,0.685,292,1.767,293,1.731,294,0.672,295,2.339,296,2.402,297,0.672,298,0.714,299,0.714,300,0.672,301,0.714,302,0.714,303,0.672,304,0.714,305,0.714,306,0.658,307,0.714,308,0.714,309,0.658,310,0.714,311,0.714,312,0.672,313,0.672,314,0.714,315,0.714,316,0.672,317,0.672,318,1.103,319,0.672,320,0.714,321,0.714,322,0.685,323,0.714,324,0.714,325,0.685,326,0.714,327,0.714,328,0.685,329,0.714,330,0.685,331,0.714,332,0.685,333,0.714,334,0.714,335,0.685,336,0.714,337,0.714,338,0.672,339,0.714,340,0.714,341,0.658,342,0.658,343,0.714,344,0.714,345,0.672,346,0.714,347,0.714,348,0.672,349,0.672,350,0.685,351,2.202,352,0.714,353,0.714,354,0.645,355,0.714,356,0.714,357,0.645,358,0.714,359,0.714,360,0.607,361,0.714,362,1.394,363,0.645,364,0.714,365,0.658,366,0.607,367,0.714,368,0.658,369,0.672,370,0.714,371,0.714,372,0.632,373,0.658,374,0.685,1037,2.655]],["title/injectables/CreateUserGQL.html",[124,0.219,348,1.153]],["body/injectables/CreateUserGQL.html",[0,0.534,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.429,11,1.727,12,0.609,13,0.008,14,1.135,15,0.111,22,0.052,36,1.734,37,0.643,38,1.016,39,0.618,40,0.606,46,0.192,48,1.036,49,1.559,50,1.036,56,0.198,59,1.555,64,1.407,94,1.487,96,1.867,100,1.487,102,0.67,104,0.67,107,1.842,110,1.953,111,1.637,121,0.002,122,0.003,123,0.002,124,0.445,125,0.656,126,0.571,127,0.656,128,2.395,129,0.486,130,0.466,131,2.384,132,2.52,133,1.581,134,2.159,135,2.133,136,1.89,137,1.83,138,1.581,139,0.252,141,2.417,142,0.656,143,0.606,144,1.756,145,1.123,146,1.079,147,1.101,148,1.101,149,1.101,150,1.036,151,1.036,152,0.697,153,0.697,154,0.683,155,2.428,156,1.123,157,2.008,158,1.721,159,1.721,160,2.294,161,1.101,162,1.101,163,1.756,164,1.101,165,1.968,166,1.101,167,0.712,168,2.128,169,1.518,170,0.712,171,0.712,172,1.079,173,0.712,174,1.581,175,1.549,176,1.079,177,1.581,178,2.196,179,2.196,180,2.008,181,1.581,182,1.721,183,1.549,184,1.549,185,1.101,186,0.712,187,1.123,188,1.123,189,1.392,190,1.581,191,1.392,192,1.392,193,1.123,194,1.123,195,1.78,196,0.712,197,1.549,198,1.079,199,1.549,200,1.101,201,1.123,202,1.123,203,1.792,204,1.73,205,2.113,206,2.09,207,1.549,208,1.549,209,1.67,210,1.101,211,0.712,212,1.549,213,1.792,214,1.079,215,0.783,216,0.956,217,0.631,218,1.936,219,0.697,220,0.67,221,0.917,222,1.686,223,1.016,224,1.036,225,1.336,226,0.901,227,0.697,228,1.079,229,1.721,230,0.697,231,1.079,232,1.756,233,0.697,234,1.853,235,0.697,236,0.839,237,1.364,238,1.057,239,1.652,240,2.179,241,1.101,242,1.101,243,0.783,244,1.101,245,1.101,246,1.62,247,1.524,248,1.101,249,1.101,250,0.917,251,1.016,252,1.549,253,1.101,254,0.683,255,1.079,256,1.079,257,1.31,258,1.101,259,1.101,260,1.336,261,0.712,262,1.101,263,1.101,264,1.101,265,1.101,266,1.101,267,1.101,268,1.429,269,1.079,270,0.683,271,1.494,272,1.209,273,0.498,274,1.036,275,0.67,276,0.712,277,1.093,278,1.336,279,1.83,280,1.336,281,1.31,282,1.336,283,1.079,284,1.079,285,1.079,286,1.079,287,1.336,288,1.336,289,1.336,290,1.079,291,0.683,292,1.766,293,1.731,294,0.67,295,2.339,296,2.401,297,0.67,298,0.712,299,0.712,300,0.67,301,0.712,302,0.712,303,0.67,304,0.712,305,0.712,306,0.656,307,0.712,308,0.712,309,0.656,310,0.712,311,0.712,312,0.67,313,0.67,314,0.712,315,0.712,316,0.67,317,0.67,318,1.101,319,0.67,320,0.712,321,0.712,322,0.683,323,0.712,324,0.712,325,0.683,326,0.712,327,0.712,328,0.683,329,0.712,330,0.683,331,0.712,332,0.683,333,0.712,334,0.712,335,0.683,336,0.712,337,0.712,338,0.67,339,0.712,340,0.712,341,0.656,342,0.656,343,0.712,344,0.712,345,0.67,346,0.712,347,0.712,348,1.057,349,0.67,350,0.683,351,2.2,352,0.712,353,0.712,354,0.643,355,0.712,356,0.712,357,0.643,358,0.712,359,0.712,360,0.606,361,0.712,362,1.392,363,0.643,364,0.712,365,0.656,366,0.606,367,0.712,368,0.656,369,0.67,370,0.712,371,0.712,372,0.631,373,0.656,374,0.683,1038,2.648]],["title/injectables/CustomOwlDateTimeIntl.html",[124,0.219,702,3.449]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.143,4,0.143,5,0.13,12,0.457,13,0.008,15,0.189,22,0.143,26,4.477,27,4.477,28,3.989,31,3.629,32,2.311,33,2.641,46,0.143,56,0.156,66,1.362,121,0.006,122,0.007,123,0.006,124,0.404,126,1.568,139,0.694,186,0.588,295,2.123,386,1.733,387,1.733,427,2.35,701,7.844,702,6.348,781,5.18,1039,6.453,1040,7.278,1041,7.278,1042,7.443,1043,7.278,1044,7.278,1045,6.816,1046,7.278,1047,7.278,1048,7.278]],["title/interfaces/DatePeriod.html",[0,0.582,144,1.177]],["body/interfaces/DatePeriod.html",[0,0.537,2,1.287,3,0.052,4,0.052,5,0.048,7,0.145,8,0.35,9,1.435,11,1.729,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.649,38,1.022,39,0.623,40,0.611,46,0.192,48,1.043,49,1.564,50,1.043,56,0.198,59,1.562,64,1.675,94,1.494,96,1.873,100,1.494,102,0.675,104,0.675,107,1.844,110,1.955,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.662,127,0.662,128,2.388,131,2.383,132,2.52,133,1.588,134,2.163,135,2.136,136,1.895,137,1.835,138,1.588,141,2.418,142,0.662,143,0.611,144,1.844,145,1.131,146,1.086,147,1.108,148,1.108,149,1.108,150,1.043,151,1.043,152,0.703,153,0.703,154,0.689,155,2.43,156,1.131,157,2.013,158,1.727,159,1.727,160,2.296,161,1.108,162,1.108,163,1.762,164,1.108,165,1.973,166,1.108,167,0.718,168,2.102,169,1.525,170,0.718,171,0.718,172,1.086,173,0.718,174,1.588,175,1.556,176,1.086,177,1.588,178,2.164,179,2.164,180,2.013,181,1.588,182,1.727,183,1.556,184,1.556,185,1.108,186,0.713,187,1.131,188,1.131,189,1.399,190,1.588,191,1.399,192,1.399,193,1.131,194,1.131,195,1.784,196,0.718,197,1.556,198,1.086,199,1.556,200,1.108,201,1.131,202,1.131,203,1.556,204,1.435,205,2.013,206,1.95,207,1.556,208,1.556,209,1.675,210,1.108,211,0.718,212,1.556,213,1.798,214,1.086,215,0.785,216,0.963,217,0.636,218,1.94,219,0.703,220,0.675,221,0.919,222,1.693,223,1.022,224,1.043,225,1.344,226,0.907,227,0.703,228,1.086,229,1.727,230,0.703,231,1.086,232,1.762,233,0.703,234,1.857,235,0.703,236,0.841,237,1.371,238,1.064,239,1.659,240,2.181,241,1.108,242,1.108,243,0.785,244,1.108,245,1.108,246,1.626,247,1.531,248,1.108,249,1.108,250,0.919,251,1.022,252,1.556,253,1.108,254,0.689,255,1.086,256,1.086,257,1.317,258,1.108,259,1.108,260,1.344,261,0.718,262,1.108,263,1.108,264,1.108,265,1.108,266,1.108,267,1.108,268,1.435,269,1.086,270,0.689,271,1.5,272,1.215,273,0.501,274,1.043,275,0.675,276,0.718,277,1.095,278,1.344,279,1.835,280,1.344,281,1.317,282,1.344,283,1.086,284,1.086,285,1.086,286,1.086,287,1.344,288,1.344,289,1.344,290,1.086,291,0.689,292,1.768,293,1.732,294,0.675,295,2.341,296,2.404,297,0.675,298,0.718,299,0.718,300,0.675,301,0.718,302,0.718,303,0.675,304,0.718,305,0.718,306,0.662,307,0.718,308,0.718,309,0.662,310,0.718,311,0.718,312,0.675,313,0.675,314,0.718,315,0.718,316,0.675,317,0.675,318,1.108,319,0.675,320,0.718,321,0.718,322,0.689,323,0.718,324,0.718,325,0.689,326,0.718,327,0.718,328,0.689,329,0.718,330,0.689,331,0.718,332,0.689,333,0.718,334,0.718,335,0.689,336,0.718,337,0.718,338,0.675,339,0.718,340,0.718,341,0.662,342,0.662,343,0.718,344,0.718,345,0.675,346,0.718,347,0.718,348,0.675,349,0.675,350,0.689,351,2.205,352,0.718,353,0.718,354,0.649,355,0.718,356,0.718,357,0.649,358,0.718,359,0.718,360,0.611,361,0.718,362,1.399,363,0.649,364,0.718,365,0.662,366,0.611,367,0.718,368,0.662,369,0.675,370,0.718,371,0.718,372,0.636,373,0.662,374,0.689]],["title/injectables/DeletePitchGQL.html",[124,0.219,313,1.153]],["body/injectables/DeletePitchGQL.html",[0,0.536,3,0.052,4,0.052,5,0.048,7,0.145,8,0.349,9,1.434,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.61,46,0.192,48,1.041,49,1.563,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.661,126,0.574,127,0.661,128,2.396,129,0.489,130,0.469,131,2.385,132,2.521,133,1.586,134,2.162,135,2.135,136,1.894,137,1.834,138,1.586,139,0.254,141,2.418,142,0.661,143,0.61,144,1.761,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.702,153,0.702,154,0.688,155,2.429,156,1.129,157,2.012,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.761,164,1.106,165,2.01,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.012,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.434,205,2.012,206,1.949,207,1.554,208,1.554,209,1.674,210,1.106,211,0.716,212,1.554,213,1.797,214,1.084,215,0.784,216,0.961,217,0.635,218,1.939,219,0.702,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.342,226,0.905,227,0.702,228,1.084,229,1.725,230,0.702,231,1.084,232,1.761,233,0.702,234,1.856,235,0.702,236,0.841,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.688,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.342,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.434,269,1.084,270,0.688,271,1.499,272,1.214,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.342,279,1.834,280,1.342,281,1.315,282,1.342,283,1.084,284,1.084,285,1.084,286,1.084,287,1.342,288,1.342,289,1.342,290,1.084,291,0.688,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.661,307,0.716,308,0.716,309,0.661,310,0.716,311,0.716,312,0.674,313,1.062,314,1.129,315,1.129,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.688,323,0.716,324,0.716,325,0.688,326,0.716,327,0.716,328,0.688,329,0.716,330,0.688,331,0.716,332,0.688,333,0.716,334,0.716,335,0.688,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.661,342,0.661,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.688,351,2.204,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.61,361,0.716,362,1.397,363,0.647,364,0.716,365,0.661,366,0.61,367,0.716,368,0.661,369,0.674,370,0.716,371,0.716,372,0.635,373,0.661,374,0.688,1049,2.665]],["title/components/EditContactComponent.html",[19,0.435,439,1.226]],["body/components/EditContactComponent.html",[3,0.117,4,0.117,5,0.106,7,0.323,8,0.619,12,0.549,13,0.008,14,1.105,15,0.187,19,0.774,20,2.053,22,0.117,31,2.378,32,1.892,33,2.162,41,1.892,44,2.438,45,2.71,46,0.117,51,2.466,52,2.369,54,1.882,56,0.127,57,1.537,58,1.808,61,3.015,66,1.519,80,2.151,121,0.005,122,0.006,123,0.005,129,1.093,130,1.049,139,0.863,168,2.084,178,1.477,179,1.477,180,2.259,186,0.687,215,0.766,221,0.677,236,0.846,243,0.766,250,1.04,251,1.808,273,0.71,341,1.477,372,1.419,376,2.127,377,1.739,378,1.739,379,1.739,380,1.703,386,1.772,387,1.772,389,1.857,390,2.084,406,2.524,415,1.363,416,2.172,417,2.172,418,1.739,419,2.482,420,1.739,421,1.739,422,1.569,423,1.739,424,1.601,425,1.739,426,1.601,427,1.668,428,2.482,429,1.601,430,1.739,431,1.569,432,2.172,433,1.569,434,1.739,435,1.601,436,1.739,437,1.601,438,1.668,439,2.285,440,2.618,441,1.601,442,1.739,443,1.601,444,1.739,445,1.601,446,1.739,447,1.601,448,1.569,449,2.172,450,1.601,451,1.569,452,1.739,453,1.601,454,1.739,455,1.601,456,1.739,457,1.601,458,1.739,459,1.634,460,1.739,461,1.601,462,1.739,463,1.601,464,1.739,465,1.601,466,1.739,467,1.601,468,1.739,469,1.569,470,1.739,471,1.537,472,1.739,473,1.569,474,1.739,475,1.601,476,1.739,477,1.601,478,1.739,479,1.739,480,1.601,481,1.739,482,1.507,483,1.739,484,1.569,485,1.739,486,1.569,487,1.739,488,1.601,489,1.739,490,1.569,491,1.739,492,1.601,493,1.668,494,1.739,495,1.739,496,1.775,498,2,517,2.213,733,3.053,752,3.155,917,5.384,920,3.83,922,5.022,935,6.592,936,6.044,950,5.022,953,4.579,1050,7.434,1051,7.434,1052,5.282,1053,8.118,1054,7.443,1055,7.443,1056,6.044,1057,7.198,1058,7.443,1059,5.957,1060,6.592,1061,5.957,1062,7.443,1063,7.54,1064,5.957,1065,6.6,1066,7.443,1067,5.957,1068,7.443,1069,5.957,1070,6.6,1071,6.044,1072,5.957,1073,5.957,1074,5.297]],["title/components/EditPitchContactDialogComponent.html",[19,0.435,447,1.226]],["body/components/EditPitchContactDialogComponent.html",[3,0.117,4,0.117,5,0.107,7,0.325,8,0.621,12,0.51,13,0.008,15,0.188,16,3.875,17,2.973,18,1.901,19,0.776,20,2.058,21,2.802,22,0.117,31,3.619,32,1.901,33,2.173,41,1.901,44,3.486,45,2.724,46,0.117,51,2.466,52,2.369,54,1.888,56,0.128,57,1.545,58,1.814,66,1.397,67,2.243,69,2.058,70,3.506,72,3.701,74,3.708,80,2.154,89,2.326,91,2.173,92,1.986,112,2.65,115,2.123,116,2.134,121,0.005,122,0.006,123,0.005,139,0.812,165,1.514,186,0.688,215,0.769,221,0.68,226,1.835,236,0.848,243,0.994,250,1.094,251,1.977,273,0.713,316,2.293,376,2.134,377,1.747,378,1.747,379,1.747,380,1.708,386,1.778,387,1.778,389,1.708,390,1.676,397,2.65,415,1.37,416,2.179,417,2.179,418,1.747,419,2.486,420,1.747,421,1.747,422,1.577,423,1.747,424,1.609,425,1.747,426,1.609,427,1.676,428,2.486,429,1.609,430,1.747,431,1.577,432,2.179,433,1.577,434,1.747,435,1.609,436,1.747,437,1.609,438,1.676,439,1.609,440,2.62,441,1.609,442,1.747,443,1.609,444,1.747,445,1.609,446,1.747,447,2.289,448,1.577,449,2.179,450,1.609,451,1.577,452,1.747,453,1.609,454,1.747,455,1.609,456,1.747,457,1.609,458,1.747,459,1.642,460,1.747,461,1.609,462,1.747,463,1.609,464,1.747,465,1.609,466,1.747,467,1.609,468,1.747,469,1.577,470,1.747,471,1.545,472,1.747,473,1.577,474,1.747,475,1.609,476,1.747,477,1.609,478,1.747,479,1.747,480,1.609,481,1.747,482,1.514,483,1.747,484,1.577,485,1.747,486,1.577,487,1.747,488,1.609,489,1.747,490,1.577,491,1.747,492,1.609,493,1.676,494,1.747,495,1.747,496,1.784,498,2.007,564,5.635,588,3.954,882,4.261,883,6.153,884,5.646,889,4.862,899,3.849,990,4.862,1050,7.118,1057,6.62,1075,5.987,1076,5.987,1077,7.466,1078,5.987,1079,5.987,1080,5.987,1081,5.987,1082,5.987,1083,4.593]],["title/components/EditRankingPenaltyComponent.html",[19,0.435,448,1.201]],["body/components/EditRankingPenaltyComponent.html",[0,0.725,3,0.111,4,0.111,5,0.101,7,0.308,8,0.6,11,1.408,12,0.553,13,0.008,14,0.972,15,0.189,16,3.802,17,2.821,18,1.804,19,0.757,20,2.008,21,2.658,22,0.111,31,3.577,32,1.804,33,2.061,41,1.804,44,3.42,45,2.584,46,0.111,51,2.461,52,2.364,54,1.827,56,0.121,57,1.466,58,1.755,66,1.352,67,2.272,69,2.008,70,3.422,72,3.613,74,3.587,75,3.255,80,2.114,89,2.27,91,2.061,92,1.884,106,2.911,107,1.129,110,1.199,111,1.246,112,2.514,114,3.494,115,2.014,116,2.064,121,0.005,122,0.006,123,0.005,125,2.071,134,1.436,135,1.408,136,1.38,137,1.408,139,0.865,186,0.641,215,0.744,218,1.299,220,1.436,221,1.095,223,1.38,236,0.821,243,0.744,250,0.821,268,2.03,273,0.677,363,2.177,376,2.064,377,1.657,378,1.657,379,1.657,380,1.652,386,1.352,387,1.352,389,1.652,390,1.59,397,3.197,406,2.449,410,4.265,415,1.299,416,2.108,417,2.108,418,1.657,419,2.439,420,1.657,421,1.657,422,1.496,423,1.657,424,1.526,425,1.657,426,1.526,427,1.59,428,2.439,429,1.526,430,1.657,431,1.496,432,2.108,433,1.496,434,1.657,435,1.526,436,1.657,437,1.526,438,1.59,439,1.526,440,2.6,441,1.526,442,1.657,443,1.526,444,1.657,445,1.526,446,1.657,447,1.526,448,2.201,449,2.108,450,1.526,451,1.496,452,1.657,453,1.526,454,1.657,455,1.526,456,1.657,457,1.526,458,1.657,459,1.558,460,1.657,461,1.526,462,1.657,463,1.526,464,1.657,465,1.526,466,1.657,467,1.526,468,1.657,469,1.496,470,1.657,471,1.466,472,1.657,473,1.496,474,1.657,475,1.526,476,1.657,477,1.526,478,1.657,479,1.657,480,1.526,481,1.657,482,1.436,483,1.657,484,1.496,485,1.657,486,1.496,487,1.657,488,1.526,489,1.657,490,1.496,491,1.657,492,1.526,493,1.59,494,1.657,495,1.657,496,1.692,498,1.941,562,6.777,999,4.295,1074,5.14,1084,6.925,1085,4.295,1086,6.448,1087,5.865,1088,7.041,1089,7.041,1090,6.448,1091,7.041,1092,7.41,1093,5.036,1094,6.525,1095,7.041,1096,7.222,1097,5.036,1098,5.68,1099,5.68,1100,5.68,1101,5.68,1102,7.041,1103,6.404,1104,5.68,1105,5.462,1106,3.651,1107,4.612,1108,6.404,1109,5.865,1110,5.036,1111,6.404,1112,5.036,1113,6.404,1114,5.036,1115,5.036,1116,5.036,1117,5.036,1118,6.404,1119,4.612,1120,5.036,1121,5.036]],["title/interfaces/EditRankingPenaltyComponentData.html",[0,0.582,1094,3.449]],["body/interfaces/EditRankingPenaltyComponentData.html",[0,0.867,2,3.274,3,0.133,4,0.133,5,0.121,7,0.369,8,0.67,11,1.324,12,0.506,13,0.008,14,0.938,15,0.197,16,3.668,17,3.374,18,2.158,19,0.769,20,2.039,21,3.179,22,0.133,31,3.432,32,2.158,33,2.465,41,2.158,44,3.3,45,3.091,46,0.133,51,1.718,52,1.65,54,1.718,56,0.145,58,1.65,66,1.272,67,2.391,69,1.718,70,2.927,72,3.091,74,3.374,75,2.646,80,1.718,89,1.942,91,2.465,92,2.253,106,3.482,107,1.351,110,1.435,111,1.391,112,3.007,114,4.179,115,2.409,116,2.305,121,0.006,122,0.007,123,0.006,125,1.999,134,1.718,135,1.684,136,1.65,137,1.684,218,2.035,220,1.718,221,1.032,223,2.089,268,2.237,363,2.089,440,2.408,448,1.789,498,1.826,562,5.739,999,5.138,1084,5.138,1085,5.138,1086,5.516,1087,5.516,1088,6.024,1089,6.024,1090,5.516,1091,6.024,1092,6.024,1094,6.503,1095,6.024,1102,7.149,1103,6.024,1105,6.098,1106,4.368,1107,6.982,1108,7.149,1109,6.547,1110,6.024,1111,7.149,1112,6.024,1113,7.149,1114,6.024,1115,6.024,1116,6.024,1117,6.024,1118,7.149,1119,5.516,1120,6.024,1121,6.024]],["title/components/EditUserDialogComponent.html",[19,0.435,450,1.226]],["body/components/EditUserDialogComponent.html",[3,0.1,4,0.1,5,0.091,7,0.276,8,0.559,12,0.568,13,0.008,14,0.782,15,0.192,16,3.646,17,2.527,18,1.616,19,0.718,20,1.905,21,2.381,22,0.1,23,4.75,31,3.486,32,1.616,33,1.846,41,1.616,44,3.28,45,2.314,46,0.1,51,2.448,52,2.352,54,1.701,56,0.109,57,1.313,58,1.634,61,3.18,62,3.821,66,1.259,67,2.3,69,2.165,70,3.246,72,3.427,74,3.34,80,2.027,89,2.564,91,2.733,92,2.498,106,3.446,107,1.337,111,0.878,112,2.976,115,2.671,116,2.447,119,3.13,121,0.004,122,0.005,123,0.004,129,1.233,130,1.184,139,0.889,150,2.263,168,1.984,178,1.667,179,1.667,186,0.647,203,2.111,204,1.947,205,1.735,206,1.771,207,2.111,208,1.34,209,1.118,215,0.692,221,0.578,236,1.104,238,2.027,243,0.692,250,0.764,273,0.606,348,2.208,349,2.208,373,1.986,376,1.922,377,1.485,378,1.485,379,1.485,380,1.538,386,1.601,387,1.601,389,1.907,390,1.883,397,2.252,406,2.903,410,3.971,415,1.164,416,1.962,417,1.962,418,1.485,419,2.339,420,1.485,421,1.485,422,1.34,423,1.485,424,1.367,425,1.485,426,1.367,427,1.424,428,2.339,429,1.367,430,1.485,431,1.34,432,1.962,433,1.34,434,1.485,435,1.367,436,1.485,437,1.367,438,1.424,439,1.367,440,2.556,441,1.367,442,1.485,443,1.367,444,1.485,445,1.367,446,1.485,447,1.367,448,1.34,449,1.962,450,2.154,451,1.34,452,1.485,453,1.367,454,1.485,455,1.367,456,1.485,457,1.367,458,1.485,459,1.396,460,1.485,461,1.367,462,1.485,463,1.367,464,1.485,465,1.367,466,1.485,467,1.367,468,1.485,469,1.34,470,1.485,471,1.313,472,1.485,473,1.34,474,1.485,475,1.367,476,1.485,477,1.367,478,1.485,479,1.485,480,1.367,481,1.485,482,1.287,483,1.485,484,1.34,485,1.485,486,1.34,487,1.485,488,1.367,489,1.485,490,1.34,491,1.485,492,1.367,493,1.424,494,1.485,495,1.485,496,1.516,498,1.807,510,3.751,512,4.448,564,6.018,588,3.561,733,2.607,851,5.461,867,4.131,868,5.461,870,5.461,873,3.847,882,3.621,883,5.697,884,5.086,889,4.131,899,4.843,917,5.685,920,3.271,922,5.407,923,4.511,930,5.963,990,4.131,991,4.511,996,4.511,1063,6.679,1065,6.679,1070,4.511,1106,3.271,1122,8.3,1123,7.533,1124,6.725,1125,8.014,1126,4.131,1127,7.533,1128,6.725,1129,5.087,1130,6.725,1131,7.106,1132,5.087,1133,5.087,1134,5.087,1135,5.087,1136,5.087,1137,5.087,1138,5.087,1139,5.087,1140,4.511,1141,5.087,1142,5.086,1143,5.087,1144,5.087,1145,5.087,1146,5.087,1147,5.087,1148,5.087,1149,5.087,1150,7.533,1151,8.014,1152,5.087,1153,5.087,1154,6.725,1155,5.087,1156,6.725,1157,6.725,1158,6.725,1159,5.087,1160,5.087,1161,5.087,1162,5.087,1163,5.087,1164,5.087,1165,5.087,1166,4.511,1167,4.511,1168,6.725,1169,6.725,1170,6.725,1171,6.725,1172,6.725,1173,6.725]],["title/components/EditmatchPitchComponent.html",[19,0.435,441,1.226]],["body/components/EditmatchPitchComponent.html",[3,0.108,4,0.108,5,0.098,7,0.298,8,0.588,12,0.549,13,0.008,14,0.961,15,0.195,16,3.756,17,2.729,18,1.745,19,0.745,20,1.978,21,2.572,22,0.108,34,3.37,35,2.249,41,1.745,42,2.432,43,2.432,46,0.108,51,2.457,52,2.36,54,1.789,56,0.118,57,1.418,58,1.718,61,2.627,66,1.324,67,2.174,69,1.978,70,3.37,74,3.512,80,2.088,89,2.235,91,1.994,92,1.823,114,3.381,115,1.949,116,1.571,121,0.004,122,0.006,123,0.004,129,1.008,130,1.377,139,0.868,186,0.69,215,0.916,216,1.889,221,0.624,226,1.884,236,0.803,243,0.937,250,0.803,273,0.655,376,2.021,377,1.604,378,1.604,379,1.604,380,1.618,386,1.862,387,1.862,389,1.954,390,2.189,397,2.432,406,3.151,415,1.257,416,2.064,417,2.064,418,1.604,419,2.409,420,1.604,421,1.604,422,1.447,423,1.604,424,1.477,425,1.604,426,1.477,427,1.539,428,2.409,429,1.477,430,1.604,431,1.447,432,2.064,433,1.447,434,1.604,435,1.477,436,1.604,437,1.901,438,1.98,439,1.477,440,2.312,441,2.219,442,1.604,443,1.477,444,1.604,445,1.477,446,1.604,447,1.477,448,1.447,449,2.064,450,1.477,451,1.447,452,1.604,453,1.477,454,1.604,455,1.477,456,1.604,457,1.477,458,1.604,459,1.508,460,1.604,461,1.477,462,1.604,463,1.477,464,1.604,465,1.477,466,1.604,467,1.477,468,1.604,469,1.447,470,1.604,471,1.418,472,1.604,473,1.447,474,1.604,475,1.477,476,1.604,477,1.477,478,1.604,479,1.604,480,1.477,481,1.604,482,1.39,483,1.604,484,1.447,485,1.604,486,1.447,487,1.604,488,1.477,489,1.604,490,1.447,491,1.604,492,1.477,493,1.539,494,1.604,495,1.604,496,1.638,498,1.901,517,2.627,565,3.708,588,4.141,589,5.079,733,2.817,820,3.911,885,4.156,902,4.176,903,4.176,906,5.348,917,5.254,920,3.533,929,3.012,978,3.911,988,4.156,989,5.054,999,4.156,1000,4.873,1033,6.27,1074,5.033,1083,4.81,1174,4.873,1175,7.072,1176,7.819,1177,7.072,1178,5.913,1179,5.913,1180,6.27,1181,7.072,1182,6.704,1183,8.256,1184,5.054,1185,7.072,1186,5.348,1187,5.496,1188,5.913,1189,5.496,1190,7.072,1191,5.496,1192,5.496,1193,5.496,1194,5.496,1195,5.496,1196,4.463,1197,5.348,1198,4.156,1199,3.911,1200,4.156,1201,4.156,1202,4.156,1203,4.156,1204,4.771,1205,4.156,1206,4.156,1207,4.156,1208,5.913,1209,4.156,1210,4.156,1211,3.911,1212,4.873,1213,5.496,1214,4.873,1215,6.27,1216,6.27,1217,7.072,1218,6.27,1219,6.243,1220,7.072,1221,7.072,1222,5.033]],["title/components/EditmatchResultComponent.html",[19,0.435,443,1.226]],["body/components/EditmatchResultComponent.html",[3,0.116,4,0.116,5,0.105,7,0.32,8,0.615,11,1.651,12,0.559,13,0.008,15,0.19,16,3.854,17,2.928,18,1.873,19,0.77,20,2.043,21,2.759,22,0.116,31,3.705,32,1.873,33,2.14,41,1.873,44,3.571,45,2.682,46,0.116,51,2.465,52,2.367,54,1.87,56,0.126,57,1.522,58,1.797,66,1.384,67,1.947,69,2.331,70,3.482,72,3.97,74,3.673,80,2.143,89,2.309,91,2.14,92,1.956,114,3.627,115,2.091,116,2.114,121,0.005,122,0.006,123,0.005,139,0.871,158,2.043,159,2.043,186,0.653,215,0.93,216,1.938,221,0.67,236,0.84,243,0.762,250,0.84,273,0.702,376,2.114,377,1.721,378,1.721,379,1.721,380,1.692,386,1.404,387,1.404,389,1.692,390,1.651,397,2.61,406,3.019,415,1.349,416,2.158,417,2.158,418,1.721,419,2.472,420,1.721,421,1.721,422,1.553,423,1.721,424,1.585,425,1.721,426,1.585,427,1.651,428,2.472,429,1.585,430,1.721,431,1.553,432,2.158,433,1.553,434,1.721,435,1.585,436,1.721,437,1.585,438,1.651,439,1.585,440,2.372,441,1.585,442,1.721,443,2.277,444,1.721,445,1.585,446,1.721,447,1.585,448,1.553,449,2.158,450,1.585,451,1.553,452,1.721,453,1.585,454,1.721,455,1.585,456,1.721,457,1.585,458,1.721,459,1.617,460,1.721,461,1.585,462,1.721,463,1.585,464,1.721,465,1.585,466,1.721,467,1.585,468,1.721,469,1.553,470,1.721,471,1.522,472,1.721,473,1.553,474,1.721,475,1.585,476,1.721,477,1.585,478,1.721,479,1.721,480,1.585,481,1.721,482,1.491,483,1.721,484,1.553,485,1.721,486,1.553,487,1.721,488,1.585,489,1.721,490,1.553,491,1.721,492,1.585,493,1.651,494,1.721,495,1.721,496,1.757,498,1.988,667,5.228,885,4.459,902,4.367,903,4.367,906,5.593,1074,5.263,1182,6.879,1184,5.135,1200,4.459,1223,5.228,1224,7.395,1225,8.08,1226,7.395,1227,7.395,1228,5.896,1229,5.896,1230,5.896,1231,5.896,1232,5.896,1233,5.896,1234,7.395,1235,5.896,1236,7.395,1237,5.896,1238,5.896,1239,5.896,1240,5.896,1241,5.896,1242,5.896,1243,5.896,1244,7.395,1245,5.896,1246,5.896]],["title/components/EditmatchTimeComponent.html",[19,0.435,445,1.226]],["body/components/EditmatchTimeComponent.html",[3,0.113,4,0.113,5,0.103,7,0.313,8,0.607,12,0.544,13,0.008,15,0.192,16,3.826,17,2.869,18,1.835,19,0.763,20,2.024,21,2.704,22,0.113,25,6.803,26,3.554,27,3.554,28,3.167,29,4.095,30,2.961,31,3.591,32,1.835,33,2.096,41,1.835,46,0.113,51,2.463,52,2.365,54,1.846,56,0.124,57,1.491,58,1.774,64,1.605,66,1.367,67,2.108,69,2.24,70,3.449,74,3.626,76,4.369,77,4.369,78,3.714,79,4.369,80,2.127,114,3.554,115,2.049,116,1.651,119,3.554,121,0.005,122,0.006,123,0.005,139,0.857,186,0.679,209,1.27,215,0.926,216,1.924,221,0.656,236,0.829,243,0.752,250,0.829,273,0.688,376,2.087,377,1.686,378,1.686,379,1.686,380,1.67,386,1.738,387,1.738,389,1.831,390,2.241,397,2.557,406,3.137,412,5.929,415,1.322,416,2.131,417,2.131,418,1.686,419,2.454,420,1.686,421,1.686,422,1.522,423,1.686,424,1.553,425,1.686,426,1.553,427,1.618,428,2.454,429,1.553,430,1.686,431,1.522,432,2.131,433,1.522,434,1.686,435,1.553,436,1.686,437,1.553,438,1.618,439,1.553,440,2.355,441,1.553,442,1.686,443,1.553,444,1.686,445,2.26,446,1.686,447,1.553,448,1.522,449,2.131,450,1.553,451,1.522,452,1.686,453,1.553,454,1.686,455,1.553,456,1.686,457,1.553,458,1.686,459,1.585,460,1.686,461,1.553,462,1.686,463,1.553,464,1.686,465,1.553,466,1.686,467,1.553,468,1.686,469,1.522,470,1.686,471,1.491,472,1.686,473,1.522,474,1.686,475,1.553,476,1.686,477,1.553,478,1.686,479,1.686,480,1.553,481,1.686,482,1.461,483,1.686,484,1.522,485,1.686,486,1.522,487,1.686,488,1.553,489,1.686,490,1.522,491,1.686,492,1.553,493,1.618,494,1.686,495,1.686,496,1.722,498,1.962,885,4.369,902,4.311,903,4.311,906,5.521,929,3.167,1074,5.196,1182,6.829,1184,5.112,1200,4.369,1247,5.123,1248,7.301,1249,8.005,1250,7.301,1251,7.69,1252,7.301,1253,7.301,1254,7.301,1255,5.778,1256,5.778,1257,5.778,1258,5.778,1259,5.778,1260,7.301,1261,5.778,1262,7.301,1263,5.196,1264,5.521,1265,7.301,1266,5.521]],["title/injectables/EndSeasonGQL.html",[124,0.219,335,1.177]],["body/injectables/EndSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.048,7,0.145,8,0.349,9,1.434,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.61,46,0.192,48,1.041,49,1.563,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.661,126,0.574,127,0.661,128,2.396,129,0.489,130,0.469,131,2.385,132,2.521,133,1.586,134,2.178,135,2.135,136,1.894,137,1.834,138,1.586,139,0.254,141,2.418,142,0.661,143,0.61,144,1.761,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.702,153,0.702,154,0.688,155,2.429,156,1.129,157,2.012,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.761,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.012,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.434,205,2.012,206,1.949,207,1.554,208,1.554,209,1.674,210,1.106,211,0.716,212,1.554,213,1.797,214,1.084,215,0.784,216,0.961,217,0.635,218,1.939,219,0.702,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.342,226,0.905,227,0.702,228,1.084,229,1.725,230,0.702,231,1.084,232,1.761,233,0.702,234,1.856,235,0.702,236,0.841,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.688,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.342,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.434,269,1.084,270,0.688,271,1.499,272,1.214,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.342,279,1.834,280,1.342,281,1.315,282,1.342,283,1.084,284,1.084,285,1.084,286,1.084,287,1.342,288,1.342,289,1.342,290,1.084,291,0.688,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.661,307,0.716,308,0.716,309,0.661,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.688,323,0.716,324,0.716,325,0.688,326,0.716,327,0.716,328,0.688,329,0.716,330,0.688,331,0.716,332,0.688,333,0.716,334,0.716,335,1.084,336,1.129,337,1.129,338,0.674,339,0.716,340,0.716,341,0.661,342,0.661,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.688,351,2.204,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.61,361,0.716,362,1.397,363,0.647,364,0.716,365,0.661,366,0.61,367,0.716,368,0.661,369,0.674,370,0.716,371,0.716,372,0.635,373,0.661,374,0.688,1267,2.665]],["title/injectables/EventGQL.html",[124,0.219,350,1.177]],["body/injectables/EventGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.846,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.52,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.713,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.522,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,1.083,351,2.203,352,1.128,353,1.128,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1268,2.662]],["title/components/EventsComponent.html",[19,0.435,451,1.201]],["body/components/EventsComponent.html",[3,0.123,4,0.123,5,0.112,7,0.34,8,0.638,12,0.521,13,0.008,15,0.19,19,0.792,20,2.1,22,0.123,29,4.147,34,3.578,35,2.565,41,1.99,42,3.399,43,2.774,46,0.123,51,2.471,52,2.373,54,1.942,56,0.134,57,1.617,58,1.866,66,1.438,67,1.65,69,2.1,75,2.441,80,2.189,121,0.005,122,0.006,123,0.005,139,0.825,186,0.671,209,1.378,214,2.143,215,0.791,221,0.712,236,0.873,243,0.791,250,0.873,273,0.747,354,2.103,376,2.195,377,1.829,378,1.829,379,1.829,380,1.757,386,1.492,387,1.492,389,1.434,390,1.755,415,1.434,416,2.241,417,2.241,418,1.829,419,2.526,420,1.829,421,1.829,422,1.65,423,1.829,424,1.684,425,1.829,426,1.684,427,1.755,428,2.526,429,1.684,430,1.829,431,1.65,432,2.241,433,1.65,434,1.829,435,1.684,436,1.829,437,1.684,438,1.755,439,1.684,440,2.424,441,1.684,442,1.829,443,1.684,444,1.829,445,1.684,446,1.829,447,1.684,448,1.65,449,2.241,450,1.684,451,2.28,452,1.829,453,1.684,454,1.829,455,1.684,456,1.829,457,1.684,458,1.829,459,1.719,460,1.829,461,1.684,462,1.829,463,1.684,464,1.829,465,1.684,466,1.829,467,1.684,468,1.829,469,1.65,470,1.829,471,1.617,472,1.829,473,1.65,474,1.829,475,1.684,476,1.829,477,1.684,478,1.829,479,1.829,480,1.684,481,1.829,482,1.585,483,1.829,484,1.65,485,1.829,486,1.65,487,1.829,488,1.684,489,1.829,490,1.65,491,1.829,492,1.684,493,1.755,494,1.829,495,1.829,496,1.868,498,2.064,556,6.236,1264,4.74,1266,4.74,1269,5.557,1270,8.304,1271,7.68,1272,6.267,1273,7.68,1274,7.68,1275,6.267,1276,6.267,1277,5.557,1278,6.267,1279,6.267,1280,6.267,1281,4.029,1282,6.267,1283,7.68,1284,7.68]],["title/modules/EventsModule.html",[519,1.388,531,3.246]],["body/modules/EventsModule.html",[3,0.139,4,0.139,5,0.127,13,0.008,15,0.197,22,0.139,46,0.139,56,0.152,121,0.006,122,0.007,123,0.006,415,1.627,451,2.528,519,2.164,521,2.641,522,3.531,523,4.352,524,3.644,525,3.644,526,4.352,531,6.849,532,4.927,533,4.386,534,3.765,535,3.765,538,3.389,539,3.306,541,4.198,556,5.774,698,6.277,699,5.774,1285,6.304,1286,6.304,1287,6.304,1288,6.304,1289,6.622,1290,7.11,1291,7.11,1292,6.304,1293,6.304]],["title/modules/EventsRoutingModule.html",[519,1.388,1289,3.246]],["body/modules/EventsRoutingModule.html",[3,0.145,4,0.145,5,0.132,13,0.008,15,0.19,19,0.704,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.986,451,2.229,515,3.558,521,2.743,538,3.022,539,3.379,567,4.36,568,4.713,569,4.36,571,4.196,572,4.543,1289,6.025,1292,6.548,1294,7.385]],["title/modules/GraphQLModule.html",[519,1.388,715,3.246]],["body/modules/GraphQLModule.html",[3,0.142,4,0.142,5,0.129,13,0.008,15,0.197,22,0.142,46,0.142,56,0.154,121,0.006,122,0.007,123,0.006,271,1.95,272,1.95,415,1.652,519,2.198,521,2.682,522,3.586,523,3.586,524,3.701,525,4.52,526,4.15,533,4.425,534,3.824,535,3.824,539,3.336,590,6.298,592,5.742,611,5.863,618,6.402,715,6.743,1295,6.402,1296,6.402,1297,7.221,1298,8.356,1299,8.356,1300,5.863,1301,5.863,1302,7.221]],["title/injectables/GraphqlService.html",[124,0.219,590,3.077]],["body/injectables/GraphqlService.html",[3,0.117,4,0.117,5,0.107,7,0.324,12,0.468,13,0.008,15,0.205,22,0.117,31,3.399,32,1.9,33,2.17,44,3.485,46,0.117,56,0.128,61,3.255,66,1.397,67,2.387,72,3.7,107,1.484,116,2.133,121,0.005,122,0.006,123,0.005,124,0.359,126,1.289,129,1.097,139,0.711,142,1.482,143,1.368,160,1.453,186,0.483,218,1.368,229,1.513,271,2.217,272,1.741,274,2.016,277,1.242,292,1.142,293,1.12,380,1.707,386,1.424,387,1.424,389,1.368,390,1.675,510,3.985,512,4.802,517,3.319,571,3.399,590,5.034,591,5.827,592,5.576,608,4.523,609,5.303,611,4.857,620,6.616,622,6.059,730,4.035,752,4.307,828,4.035,842,6.059,854,7.256,877,6.059,928,4.857,1042,7.211,1300,7.555,1301,6.059,1303,5.303,1304,8.515,1305,5.981,1306,9.064,1307,5.981,1308,5.981,1309,7.462,1310,8.037,1311,5.303,1312,5.981,1313,5.981,1314,8.132,1315,5.981,1316,5.981,1317,6.616,1318,5.303,1319,6.059,1320,4.523,1321,4.523,1322,5.643,1323,5.981,1324,5.981,1325,5.981,1326,7.462,1327,5.981,1328,5.981,1329,5.981,1330,5.981,1331,5.981,1332,5.981,1333,5.981,1334,5.981,1335,5.981,1336,8.037,1337,5.981,1338,5.981,1339,7.462,1340,7.462,1341,5.981,1342,5.487,1343,5.981,1344,5.981,1345,5.981,1346,5.981,1347,5.981,1348,5.981,1349,5.303,1350,5.981,1351,5.981,1352,5.981,1353,5.981,1354,5.981,1355,5.981,1356,5.981,1357,5.981,1358,5.981,1359,5.981,1360,5.981,1361,5.981,1362,4.857,1363,7.462,1364,5.981,1365,5.981,1366,8.132,1367,5.643,1368,5.981,1369,5.981,1370,4.523,1371,5.981,1372,5.981,1373,5.303,1374,7.462,1375,5.981,1376,5.981,1377,5.981,1378,5.981,1379,5.981]],["title/injectables/GraphqlSubscriptionService.html",[124,0.219,592,2.806]],["body/injectables/GraphqlSubscriptionService.html",[0,0.812,3,0.125,4,0.125,5,0.113,7,0.345,8,0.644,11,1.51,12,0.524,13,0.008,14,0.972,15,0.191,22,0.125,46,0.152,56,0.136,66,1.45,67,2.459,69,2.256,89,1.818,92,2.885,111,1.097,112,3.43,116,2.215,121,0.005,122,0.006,123,0.005,124,0.373,126,1.37,130,1.472,139,0.865,186,0.626,215,0.655,277,1.035,292,1.215,293,1.19,354,2.113,357,2.113,360,2.101,366,1.99,380,1.773,386,1.845,387,1.845,389,1.773,390,2.17,517,2.362,580,5.033,592,4.767,610,6.944,642,5.228,643,5.639,644,5.639,752,4.104,806,5.515,845,3.755,850,3.627,869,5.58,929,3.486,1319,7.526,1320,4.81,1321,4.81,1322,4.81,1342,4.291,1380,5.164,1381,7.411,1382,7.411,1383,7.714,1384,6.36,1385,5.869,1386,6.321,1387,7.411,1388,7.411,1389,6.36,1390,6.871,1391,6.36,1392,6.36,1393,6.36,1394,6.36,1395,6.36,1396,6.36,1397,6.36,1398,5.639,1399,5.164,1400,5.86,1401,4.526,1402,5.164,1403,5.164,1404,5.639,1405,6.871,1406,5.164,1407,5.639,1408,5.639,1409,7.908,1410,7.908,1411,5.639,1412,5.639,1413,5.639,1414,5.639,1415,5.639,1416,5.639,1417,5.639,1418,5.639,1419,5.639,1420,5.639,1421,4.81,1422,5.639,1423,5.639,1424,5.639,1425,5.639,1426,5.639,1427,6.871,1428,5.639]],["title/injectables/I18Service.html",[29,2.019,124,0.219]],["body/injectables/I18Service.html",[3,0.135,4,0.135,5,0.123,7,0.373,8,0.675,12,0.56,13,0.008,14,1.093,15,0.195,22,0.135,29,3.596,31,3.687,32,2.581,33,2.498,46,0.135,56,0.147,66,1.288,69,2.259,78,5.559,121,0.006,122,0.007,123,0.006,124,0.391,126,1.483,129,1.262,130,1.212,139,0.881,186,0.656,277,0.919,292,1.315,293,1.288,380,1.859,386,1.935,387,1.935,389,1.859,390,2.275,397,3.046,517,2.556,613,4.425,614,3.772,781,4.899,782,7.253,806,5.783,1429,5.589,1430,8.646,1431,8.646,1432,8.125,1433,8.646,1434,6.883,1435,6.883,1436,8.125,1437,6.883,1438,6.883,1439,9.113,1440,8.932,1441,6.883,1442,8.125,1443,6.883,1444,6.883,1445,6.883,1446,6.883,1447,6.883,1448,5.589,1449,6.883,1450,6.883,1451,6.883,1452,9.113,1453,6.883,1454,6.883,1455,6.883]],["title/interfaces/IPossibleKickoffs.html",[0,0.582,1456,3.246]],["body/interfaces/IPossibleKickoffs.html",[0,0.955,2,2.894,3,0.118,4,0.118,5,0.107,7,0.492,8,0.622,11,1.802,12,0.55,13,0.008,14,0.948,15,0.198,19,0.713,20,1.892,22,0.118,29,3.606,30,3.078,34,3.223,35,2.458,36,1.62,41,1.907,42,2.658,43,2.658,46,0.118,49,1.268,51,1.519,52,1.459,54,1.519,56,0.128,58,1.459,61,2.778,62,3.412,64,1.874,66,1.124,67,1.581,69,1.892,80,1.519,88,3.715,89,1.716,91,2.179,92,2.481,115,2.13,116,1.716,119,3.694,121,0.005,122,0.006,123,0.005,130,1.317,209,1.32,215,0.903,217,1.43,226,1.837,243,0.934,246,1.43,247,1.43,277,1.139,471,1.55,493,2.094,498,1.614,517,3.167,548,4.274,671,4.251,733,3.078,752,3.18,850,2.81,902,3.546,903,3.546,917,5.012,929,3.291,953,4.601,989,4.63,1083,3.694,1178,4.541,1179,4.541,1184,4.63,1186,4.541,1188,5.657,1197,5.657,1198,4.541,1199,4.274,1201,4.541,1202,4.541,1203,4.541,1204,5.047,1205,4.541,1206,4.541,1207,4.541,1208,6.449,1209,4.541,1210,4.541,1211,5.799,1263,5.799,1456,6.244,1457,4.541,1458,4.541,1459,7.124,1460,7.124,1461,7.124,1462,6.069,1463,5.657,1464,4.876,1465,4.541,1466,4.876,1467,6.074,1468,4.876,1469,4.876,1470,4.876,1471,4.876,1472,4.876,1473,7.124,1474,4.876,1475,4.876,1476,4.876,1477,4.541,1478,4.876,1479,4.876,1480,4.876,1481,4.876,1482,4.876,1483,4.876,1484,4.876,1485,4.876,1486,4.876,1487,6.074,1488,4.876,1489,4.876,1490,4.876,1491,4.876,1492,4.876,1493,4.876,1494,4.876,1495,6.074,1496,6.074,1497,6.074,1498,4.876,1499,4.876,1500,4.876,1501,4.876,1502,6.616,1503,4.876,1504,4.876,1505,4.876,1506,4.876,1507,4.876,1508,4.876,1509,4.876,1510,4.876,1511,4.876,1512,4.876,1513,4.876,1514,4.876,1515,4.876,1516,6.074,1517,4.876,1518,4.876,1519,4.876,1520,4.876,1521,4.876,1522,4.876,1523,4.876,1524,4.274,1525,4.876,1526,4.876,1527,4.876,1528,4.876,1529,4.876,1530,4.876,1531,4.876,1532,4.876,1533,6.074,1534,6.074]],["title/interfaces/ISnackBarData.html",[0,0.582,1535,3.449]],["body/interfaces/ISnackBarData.html",[0,0.928,2,3.505,3,0.143,4,0.143,5,0.13,7,0.395,8,0.698,12,0.526,13,0.008,14,1.088,15,0.18,18,2.31,19,0.8,20,2.122,21,3.404,22,0.143,46,0.164,51,1.839,52,1.767,54,1.839,56,0.156,58,1.767,66,1.361,69,1.839,75,2.833,80,1.839,121,0.006,122,0.007,123,0.006,482,1.839,498,1.955,581,5.177,1342,6.133,1535,6.689,1536,5.906,1537,7.381,1538,6.449,1539,6.449,1540,6.449,1541,6.449]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.582,1462,3.246]],["body/interfaces/ITeamCanPlayAtDate.html",[0,0.961,2,2.924,3,0.119,4,0.119,5,0.108,7,0.464,8,0.626,11,1.715,12,0.472,13,0.008,14,0.952,15,0.198,19,0.718,20,1.904,22,0.119,29,3.623,30,3.11,34,3.244,35,2.484,36,1.783,41,1.927,42,2.686,43,2.686,46,0.119,49,1.729,51,1.535,52,1.474,54,1.535,56,0.13,58,1.474,61,2.796,62,3.448,64,1.655,66,1.136,67,1.598,69,1.904,80,1.535,88,3.739,89,1.735,91,2.202,92,2.497,115,2.152,116,1.735,119,3.733,121,0.005,122,0.006,123,0.005,130,1.326,209,1.334,215,0.906,217,1.445,226,1.622,243,0.881,246,1.445,247,1.445,277,1.143,471,1.566,493,2.108,498,1.631,517,3.179,548,4.319,671,4.279,733,3.11,752,3.214,850,3.831,902,3.583,903,3.583,917,5.036,929,3.326,953,4.632,989,4.652,1083,3.733,1178,4.589,1179,4.589,1184,4.652,1186,4.589,1188,5.694,1197,5.694,1198,4.589,1199,4.319,1201,4.589,1202,4.589,1203,4.589,1204,5.08,1205,4.589,1206,4.589,1207,4.589,1208,6.473,1209,4.589,1210,4.589,1211,5.826,1263,5.826,1456,6.092,1457,4.589,1458,4.589,1459,6.114,1460,6.114,1461,6.114,1462,5.826,1463,5.694,1464,4.928,1465,4.589,1466,4.928,1467,7.146,1468,4.928,1469,4.928,1470,4.928,1471,4.928,1472,4.928,1473,7.146,1474,4.928,1475,4.928,1476,4.928,1477,4.589,1478,4.928,1479,4.928,1480,4.928,1481,4.928,1482,4.928,1483,4.928,1484,4.928,1485,4.928,1486,4.928,1487,6.114,1488,4.928,1489,4.928,1490,4.928,1491,4.928,1492,4.928,1493,4.928,1494,4.928,1495,6.114,1496,6.114,1497,6.114,1498,4.928,1499,4.928,1500,4.928,1501,4.928,1502,6.647,1503,4.928,1504,4.928,1505,4.928,1506,4.928,1507,4.928,1508,4.928,1509,4.928,1510,4.928,1511,4.928,1512,4.928,1513,4.928,1514,4.928,1515,4.928,1516,6.114,1517,4.928,1518,4.928,1519,4.928,1520,4.928,1521,4.928,1522,4.928,1523,4.928,1524,4.319,1525,4.928,1526,4.928,1527,4.928,1528,4.928,1529,4.928,1530,4.928,1531,4.928,1532,4.928,1533,6.114,1534,6.114]],["title/interfaces/IntrospectionResultData.html",[0,0.582,1542,2.932]],["body/interfaces/IntrospectionResultData.html",[0,0.876,2,3.307,3,0.135,4,0.135,5,0.122,7,0.372,8,0.674,12,0.596,13,0.008,14,1.038,15,0.185,22,0.135,28,4.446,46,0.185,56,0.147,110,1.449,111,1.399,121,0.007,122,0.007,123,0.006,124,0.39,128,1.771,129,1.259,131,2.052,141,2.257,142,1.701,143,1.57,154,1.771,155,1.771,160,1.971,186,0.655,270,1.771,271,2.125,272,2.015,273,0.966,274,1.701,275,1.736,277,0.916,291,1.771,292,1.311,293,1.285,295,1.736,374,1.771,1367,5.19,1370,6.531,1385,4.63,1421,6.135,1542,5.552,1543,4.885,1544,6.886,1545,6.587,1546,7.496,1547,7.192,1548,6.085,1549,6.135,1550,5.573]],["title/interfaces/IntrospectionResultData-1.html",[0,0.485,88,1.886,1542,2.441]],["body/interfaces/IntrospectionResultData-1.html",[0,0.939,2,3.543,3,0.144,4,0.144,5,0.131,7,0.399,8,0.702,12,0.557,13,0.008,14,1.034,46,0.166,121,0.007,122,0.007,123,0.006,129,1.349,186,0.682,277,0.982,1367,5.561,1542,5.711,1544,7.01,1545,6.857,1549,6.386,1550,5.971,1551,5.971,1552,5.971]],["title/injectables/LatestEventGQL.html",[124,0.219,354,1.108]],["body/injectables/LatestEventGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.432,11,1.727,12,0.61,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.646,38,1.018,39,0.62,40,0.608,46,0.192,48,1.039,49,1.561,50,1.039,56,0.198,59,1.558,64,1.568,94,1.49,96,1.87,100,1.49,102,0.672,104,0.672,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.659,126,0.573,127,0.659,128,2.395,129,0.487,130,0.468,131,2.385,132,2.52,133,1.584,134,2.161,135,2.134,136,1.892,137,1.832,138,1.584,139,0.253,141,2.417,142,0.659,143,0.608,144,1.759,145,1.127,146,1.082,147,1.104,148,1.104,149,1.104,150,1.039,151,1.039,152,0.7,153,0.7,154,0.686,155,2.429,156,1.127,157,2.01,158,1.723,159,1.723,160,2.295,161,1.104,162,1.104,163,1.759,164,1.104,165,1.97,166,1.104,167,0.714,168,2.1,169,1.521,170,0.714,171,0.714,172,1.082,173,0.714,174,1.584,175,1.552,176,1.082,177,1.584,178,2.162,179,2.162,180,2.01,181,1.584,182,1.723,183,1.552,184,1.552,185,1.104,186,0.712,187,1.127,188,1.127,189,1.395,190,1.584,191,1.395,192,1.395,193,1.127,194,1.127,195,1.782,196,0.714,197,1.552,198,1.082,199,1.552,200,1.104,201,1.127,202,1.127,203,1.552,204,1.432,205,2.01,206,1.947,207,1.552,208,1.552,209,1.712,210,1.104,211,0.714,212,1.689,213,2.003,214,1.082,215,0.783,216,0.959,217,0.633,218,1.938,219,0.7,220,0.672,221,0.918,222,1.689,223,1.018,224,1.039,225,1.34,226,0.903,227,0.7,228,1.082,229,1.723,230,0.7,231,1.082,232,1.759,233,0.7,234,1.855,235,0.7,236,0.84,237,1.367,238,1.06,239,1.655,240,2.18,241,1.104,242,1.104,243,0.783,244,1.104,245,1.104,246,1.623,247,1.527,248,1.104,249,1.104,250,0.918,251,1.018,252,1.552,253,1.104,254,0.686,255,1.082,256,1.082,257,1.313,258,1.104,259,1.104,260,1.34,261,0.714,262,1.104,263,1.104,264,1.104,265,1.104,266,1.104,267,1.104,268,1.432,269,1.082,270,0.686,271,1.497,272,1.211,273,0.499,274,1.039,275,0.672,276,0.714,277,1.094,278,1.34,279,1.832,280,1.34,281,1.313,282,1.34,283,1.082,284,1.082,285,1.082,286,1.082,287,1.34,288,1.521,289,1.34,290,1.082,291,0.686,292,1.767,293,1.732,294,0.672,295,2.34,296,2.403,297,0.672,298,0.714,299,0.714,300,0.672,301,0.714,302,0.714,303,0.672,304,0.714,305,0.714,306,0.659,307,0.714,308,0.714,309,0.659,310,0.714,311,0.714,312,0.672,313,0.672,314,0.714,315,0.714,316,0.672,317,0.672,318,1.104,319,0.672,320,0.714,321,0.714,322,0.686,323,0.714,324,0.714,325,0.686,326,0.714,327,0.714,328,0.686,329,0.714,330,0.686,331,0.714,332,0.686,333,0.714,334,0.714,335,0.686,336,0.714,337,0.714,338,0.672,339,0.714,340,0.714,341,0.659,342,0.659,343,0.714,344,0.714,345,0.672,346,0.714,347,0.714,348,0.672,349,0.672,350,0.686,351,2.202,352,0.714,353,0.714,354,1.018,355,1.127,356,1.127,357,0.646,358,0.714,359,0.714,360,0.608,361,0.714,362,1.395,363,0.646,364,0.714,365,0.659,366,0.608,367,0.714,368,0.659,369,0.672,370,0.714,371,0.714,372,0.633,373,0.659,374,0.686,1553,2.658]],["title/injectables/LocateMatchGQL.html",[124,0.219,300,1.153]],["body/injectables/LocateMatchGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.051,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,2.073,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,1.062,301,1.128,302,1.128,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1554,2.662]],["title/components/LoginComponent.html",[19,0.435,453,1.226]],["body/components/LoginComponent.html",[3,0.114,4,0.114,5,0.104,7,0.316,8,0.61,12,0.545,13,0.008,14,0.934,15,0.19,16,3.954,18,1.847,19,0.765,20,2.031,22,0.114,31,3.596,32,1.847,33,2.111,44,3.45,45,2.646,46,0.114,51,2.463,52,2.366,54,1.854,56,0.124,57,1.501,58,1.781,66,1.372,67,2.372,69,2.031,70,3.745,72,3.653,80,2.132,89,2.536,91,2.661,92,2.432,115,2.6,116,2.575,121,0.005,122,0.006,123,0.005,139,0.869,168,1.746,186,0.681,204,1.413,215,0.755,221,0.661,236,0.833,243,0.755,250,0.833,273,0.693,376,2.096,377,1.697,378,1.697,379,1.697,380,1.677,386,1.746,387,1.746,389,1.929,390,2.053,406,2.859,415,1.331,416,2.14,417,2.14,418,1.697,419,2.46,420,1.697,421,1.697,422,1.532,423,1.697,424,1.563,425,1.697,426,1.563,427,1.629,428,2.46,429,1.563,430,1.697,431,1.532,432,2.14,433,1.532,434,1.697,435,1.563,436,1.697,437,1.563,438,1.629,439,1.563,440,2.361,441,1.563,442,1.697,443,1.563,444,1.697,445,1.563,446,1.697,447,1.563,448,1.532,449,2.14,450,1.563,451,1.532,452,1.697,453,2.266,454,1.697,455,1.563,456,1.697,457,1.563,458,1.697,459,1.596,460,1.697,461,1.563,462,1.697,463,1.563,464,1.697,465,1.563,466,1.697,467,1.563,468,1.697,469,1.532,470,1.697,471,1.501,472,1.697,473,1.532,474,1.697,475,1.563,476,1.697,477,1.563,478,1.697,479,1.697,480,1.563,481,1.697,482,1.471,483,1.697,484,1.532,485,1.697,486,1.532,487,1.697,488,1.563,489,1.697,490,1.532,491,1.697,492,1.563,493,1.629,494,1.697,495,1.697,496,1.733,498,1.971,510,4.216,516,3.435,654,6.501,677,5.157,693,5.157,733,2.981,752,4.465,846,4.399,850,3.431,869,3.578,899,3.74,920,3.74,922,4.947,931,6.501,987,5.157,988,6.711,1004,4.723,1166,5.157,1167,5.157,1196,6.52,1555,5.157,1556,9.009,1557,8.03,1558,7.332,1559,7.12,1560,8.43,1561,7.332,1562,7.332,1563,5.817,1564,5.817,1565,5.817,1566,7.332,1567,5.817,1568,5.817,1569,5.817,1570,5.817,1571,5.157,1572,6.501,1573,5.817,1574,5.817,1575,7.332,1576,8.03,1577,5.817,1578,5.817,1579,5.817,1580,7.332,1581,6.501,1582,7.332]],["title/interfaces/LoginContext.html",[0,0.582,826,3.449]],["body/interfaces/LoginContext.html",[0,0.805,2,3.039,3,0.124,4,0.124,5,0.112,7,0.342,8,0.641,12,0.484,13,0.008,14,1.097,15,0.194,22,0.124,32,2.003,46,0.151,56,0.135,61,3.362,66,1.18,67,2.343,69,2.194,89,2.204,116,2.38,121,0.007,122,0.006,123,0.005,124,0.371,143,1.984,150,1.563,168,1.836,169,1.628,172,1.628,204,2.107,236,0.876,277,0.842,292,1.205,293,1.18,306,1.911,309,1.911,372,1.836,510,3.608,515,3.039,517,3.437,613,4.055,614,3.457,643,4.255,644,4.255,730,4.255,766,5.201,787,5.464,788,5.569,789,5.473,793,5.122,798,4.769,799,5.592,802,5.592,804,5.592,807,5.592,808,5.592,809,5.592,811,7.383,812,5.121,813,5.592,814,5.592,815,7.383,817,5.592,818,6.762,821,5.592,823,4.769,825,5.592,826,6.298,828,5.201,830,5.592,832,5.592,834,5.592,842,6.26,843,6.26,844,5.121,845,3.724,846,6.56,847,4.769,848,5.121,849,5.592,850,2.951,851,7.351,852,5.592,853,5.592,854,6.26,855,5.592,856,6.836,857,5.592,858,5.592,859,5.927,860,6.836,861,5.592,862,6.836,863,5.592,864,5.592,865,5.592,866,5.592,867,6.26,868,5.121,869,4.743,870,5.121,871,5.592,872,5.592,873,4.769,874,5.592,875,5.592,876,5.592,877,5.121,878,5.592,879,5.592]],["title/components/ManagePenaltyComponent.html",[19,0.435,455,1.226]],["body/components/ManagePenaltyComponent.html",[3,0.107,4,0.107,5,0.098,7,0.297,8,0.587,12,0.548,13,0.008,14,0.821,15,0.195,18,1.739,19,0.744,20,1.974,22,0.107,29,4.06,31,3.547,32,1.739,33,1.987,34,3.364,35,2.241,36,1.403,41,1.739,42,3.123,43,2.424,44,3.374,45,2.491,46,0.107,51,2.457,52,2.36,54,1.784,56,0.117,57,1.413,58,1.714,64,1.551,66,1.321,67,2.247,69,1.974,70,2.36,72,3.551,75,2.748,80,2.085,85,4.76,89,2.231,91,1.987,92,1.816,106,2.806,107,1.089,110,1.156,111,1.217,112,2.424,115,1.942,116,2.017,121,0.004,122,0.006,123,0.004,134,1.385,136,1.714,137,1.749,139,0.867,175,1.442,186,0.689,215,0.727,218,1.786,220,1.385,221,0.887,222,1.935,223,2.122,236,0.802,243,0.727,250,0.802,268,2.21,273,0.652,277,0.731,312,2.085,363,2.122,376,2.017,377,1.598,378,1.598,379,1.598,380,1.614,386,1.859,387,1.859,389,1.952,390,2.308,406,3.053,415,1.253,416,2.059,417,2.059,418,1.598,419,2.406,420,1.598,421,1.598,422,1.442,423,1.598,424,1.472,425,1.598,426,1.472,427,1.533,428,2.406,429,1.472,430,1.598,431,1.442,432,2.059,433,1.442,434,1.598,435,1.472,436,1.598,437,1.472,438,1.533,439,1.472,440,2.488,441,1.472,442,1.598,443,1.472,444,1.598,445,1.472,446,1.598,447,1.472,448,1.858,449,2.059,450,1.472,451,1.442,452,1.598,453,1.472,454,1.598,455,2.216,456,2.627,457,1.472,458,1.598,459,1.502,460,1.598,461,1.472,462,1.598,463,1.472,464,1.598,465,1.472,466,1.598,467,1.472,468,1.598,469,1.442,470,1.598,471,1.413,472,1.598,473,1.442,474,1.598,475,1.472,476,1.598,477,1.472,478,1.598,479,1.598,480,1.472,481,1.598,482,1.385,483,1.598,484,1.442,485,1.598,486,1.442,487,1.598,488,1.472,489,1.598,490,1.442,491,1.598,492,1.472,493,1.533,494,1.598,495,1.598,496,1.632,498,1.896,560,7.448,561,4.855,562,3.897,588,4.134,589,5.072,820,3.897,950,4.76,953,4.34,1084,6.936,1085,4.141,1086,6.339,1087,5.729,1097,4.855,1107,6.339,1119,4.446,1222,5.022,1277,4.855,1463,5.903,1477,6.235,1583,8.245,1584,7.055,1585,7.055,1586,7.806,1587,5.476,1588,7.806,1589,7.055,1590,5.476,1591,5.476,1592,5.476,1593,7.055,1594,5.476,1595,7.055,1596,5.476,1597,5.476,1598,7.055,1599,5.476,1600,5.476,1601,7.806,1602,3.897,1603,4.855,1604,5.476,1605,5.476,1606,5.476,1607,5.476,1608,5.476,1609,7.055,1610,7.055,1611,7.055,1612,4.855,1613,7.055,1614,4.855]],["title/components/ManagepitchesComponent.html",[19,0.435,457,1.226]],["body/components/ManagepitchesComponent.html",[3,0.115,4,0.115,5,0.105,7,0.319,8,0.614,12,0.531,13,0.008,15,0.199,18,1.87,19,0.77,20,2.042,22,0.115,31,3.606,32,1.87,33,2.136,34,2.537,35,2.41,41,1.87,42,2.606,43,2.606,44,3.465,45,2.678,46,0.115,51,2.465,52,2.367,54,1.869,56,0.126,57,1.519,58,1.795,66,1.383,67,2.126,69,2.042,72,3.673,75,2.293,80,2.141,85,4.985,89,2.308,91,2.136,92,1.953,115,2.088,116,2.112,121,0.005,122,0.006,123,0.005,139,0.848,176,1.907,186,0.705,215,0.761,221,0.669,226,1.918,236,0.839,243,0.966,250,1.011,273,0.701,365,1.459,376,2.112,377,1.718,378,1.718,379,1.718,380,1.69,386,1.923,387,1.923,389,1.937,390,2.261,406,2.871,415,1.347,416,2.156,417,2.156,418,1.718,419,2.471,420,1.718,421,1.718,422,1.55,423,1.718,424,1.582,425,1.718,426,1.582,427,1.649,428,2.471,429,1.582,430,1.718,431,1.55,432,2.156,433,1.55,434,1.718,435,1.582,436,1.718,437,1.986,438,1.649,439,1.582,440,2.371,441,1.582,442,1.718,443,1.582,444,1.718,445,1.582,446,1.718,447,1.986,448,1.55,449,2.156,450,1.582,451,1.55,452,1.718,453,1.582,454,1.718,455,1.582,456,1.718,457,2.276,458,1.718,459,1.615,460,1.718,461,1.582,462,1.718,463,1.582,464,1.718,465,1.582,466,1.718,467,1.582,468,1.718,469,1.55,470,1.718,471,1.519,472,1.718,473,1.55,474,1.718,475,1.582,476,1.718,477,1.582,478,1.718,479,1.718,480,1.582,481,1.718,482,1.489,483,1.718,484,1.55,485,1.718,486,1.55,487,1.718,488,1.582,489,1.718,490,1.55,491,1.718,492,1.582,493,1.649,494,1.718,495,1.718,496,1.754,498,1.986,564,3.785,565,4.985,588,4.276,589,5.209,978,4.19,986,6.876,989,5.237,1001,5.22,1083,4.545,1214,5.22,1219,5.587,1222,5.259,1615,5.22,1616,7.388,1617,8.074,1618,7.388,1619,7.388,1620,4.781,1621,5.888,1622,5.888,1623,7.388,1624,5.888,1625,7.388,1626,5.888,1627,5.888,1628,5.888,1629,5.888,1630,5.888,1631,5.888,1632,5.888,1633,5.888,1634,5.888,1635,5.888,1636,6.551]],["title/components/ManageteamsComponent.html",[19,0.435,461,1.226]],["body/components/ManageteamsComponent.html",[3,0.12,4,0.12,5,0.109,7,0.331,8,0.628,12,0.553,13,0.008,14,0.955,15,0.189,18,1.937,19,0.782,20,2.075,22,0.12,23,4.91,24,3.921,36,1.631,41,1.937,46,0.12,49,1.733,51,2.468,52,2.371,54,1.91,56,0.13,57,1.574,58,1.835,66,1.414,69,2.271,75,2.376,80,2.169,89,2.567,91,2.213,92,2.023,115,2.163,116,1.743,121,0.005,122,0.006,123,0.005,139,0.856,186,0.712,215,0.778,221,0.693,236,0.858,243,0.778,250,0.858,273,0.727,376,2.159,377,1.78,378,1.78,379,1.78,380,1.728,386,1.954,387,1.954,389,1.877,390,1.708,406,2.561,410,4.46,415,1.395,416,2.204,417,2.204,418,1.78,419,2.502,420,1.78,421,1.78,422,1.606,423,1.78,424,1.639,425,1.78,426,1.639,427,1.708,428,2.502,429,1.639,430,1.78,431,1.606,432,2.204,433,1.606,434,1.78,435,1.639,436,1.78,437,1.639,438,1.708,439,1.639,440,2.514,441,1.639,442,1.78,443,1.639,444,1.78,445,1.639,446,1.78,447,1.639,448,1.606,449,2.204,450,1.639,451,1.606,452,1.78,453,1.639,454,1.78,455,1.639,456,1.78,457,1.639,458,1.78,459,1.673,460,1.78,461,2.304,462,1.78,463,1.639,464,1.78,465,1.639,466,1.78,467,1.639,468,1.78,469,1.606,470,1.78,471,1.574,472,1.78,473,1.606,474,1.78,475,1.639,476,1.78,477,2.03,478,2.204,479,1.78,480,1.639,481,1.78,482,1.543,483,1.78,484,1.606,485,1.78,486,1.606,487,1.78,488,1.639,489,1.78,490,1.606,491,1.78,492,1.639,493,1.708,494,1.78,495,1.78,496,1.818,498,2.03,554,4.613,555,5.408,588,4.667,589,5.421,929,3.343,1126,4.953,1637,5.408,1638,7.553,1639,8.204,1640,7.553,1641,6.697,1642,7.553,1643,6.099,1644,6.697,1645,6.099,1646,5.408,1647,6.099,1648,7.553,1649,6.099,1650,6.099,1651,6.099,1652,6.099,1653,6.099,1654,6.099,1655,6.099,1656,7.553]],["title/components/ManagetournamentComponent.html",[19,0.435,463,1.226]],["body/components/ManagetournamentComponent.html",[3,0.106,4,0.106,5,0.096,7,0.421,8,0.582,9,1.7,11,1.727,12,0.574,13,0.008,14,0.989,15,0.19,18,1.716,19,0.739,20,1.962,22,0.106,34,3.662,35,2.212,39,1.915,40,1.877,42,3.433,43,2.392,46,0.106,51,2.455,52,2.358,54,1.769,56,0.116,57,1.805,58,1.7,61,2.007,62,3.071,66,1.309,67,2.292,68,5.867,69,1.962,73,5.521,75,2.105,80,2.075,88,3.853,89,2.488,92,1.793,106,2.77,107,1.075,108,4.087,111,1.207,112,2.392,121,0.006,122,0.006,123,0.004,129,0.991,130,0.952,139,0.895,186,0.716,200,2.043,215,0.845,221,0.614,231,1.395,236,0.795,243,0.72,246,1.287,250,0.795,257,1.962,273,0.644,277,0.722,345,2.075,376,2,377,1.577,378,1.577,379,1.577,380,1.6,386,1.666,387,1.666,389,1.991,390,2.297,406,3.045,415,1.236,416,2.042,417,2.042,418,1.577,419,2.394,420,1.577,421,1.577,422,1.423,423,1.577,424,1.453,425,1.577,426,1.453,427,1.513,428,2.394,429,1.453,430,1.577,431,1.423,432,2.042,433,1.423,434,1.577,435,1.453,436,1.577,437,1.453,438,1.513,439,1.453,440,2.297,441,1.453,442,1.577,443,1.453,444,1.577,445,1.453,446,1.577,447,1.453,448,1.423,449,2.042,450,1.453,451,1.423,452,1.577,453,1.453,454,1.577,455,1.453,456,1.577,457,1.453,458,1.577,459,1.483,460,1.577,461,1.453,462,1.577,463,2.205,464,1.577,465,1.453,466,1.577,467,1.453,468,1.577,469,1.423,470,1.577,471,1.395,472,1.577,473,1.423,474,1.577,475,1.453,476,1.577,477,1.453,478,1.577,479,1.577,480,1.453,481,1.577,482,1.367,483,1.577,484,1.423,485,1.577,486,1.423,487,1.577,488,1.453,489,1.577,490,1.423,491,1.577,492,1.453,493,1.513,494,1.577,495,1.577,496,1.611,498,1.88,517,2.007,588,4.345,589,5.227,671,3.976,845,3.191,902,4.131,903,4.131,1105,5.291,1106,3.475,1349,4.792,1362,6.299,1524,3.847,1602,3.847,1657,4.792,1658,6.996,1659,7.757,1660,6.996,1661,7.757,1662,7.757,1663,7.757,1664,7.757,1665,7.757,1666,6.878,1667,6.996,1668,8.204,1669,8.204,1670,8.204,1671,8.204,1672,4.792,1673,6.996,1674,6.996,1675,5.405,1676,5.405,1677,5.405,1678,5.405,1679,5.405,1680,5.405,1681,5.405,1682,5.405,1683,5.405,1684,5.405,1685,5.405,1686,6.996,1687,5.405,1688,5.405,1689,5.405,1690,5.405,1691,4.792,1692,5.405,1693,4.792,1694,5.405,1695,5.405,1696,4.792,1697,5.405,1698,6.996,1699,7.757,1700,5.405,1701,6.996,1702,6.996,1703,5.405,1704,5.405,1705,8.705,1706,5.405,1707,5.405,1708,5.405,1709,6.203,1710,6.996,1711,6.996,1712,6.996,1713,6.996]],["title/components/ManageusersComponent.html",[19,0.435,465,1.226]],["body/components/ManageusersComponent.html",[3,0.128,4,0.128,5,0.117,7,0.355,13,0.008,15,0.14,19,0.806,20,2.14,22,0.128,46,0.128,51,2.475,52,2.377,54,1.993,56,0.14,57,1.688,58,1.915,66,1.583,80,2.221,89,2.418,121,0.005,122,0.006,123,0.005,139,0.751,186,0.637,215,0.812,221,0.743,236,0.895,243,0.812,250,0.895,273,0.779,376,2.253,377,1.908,378,1.908,379,1.908,380,1.803,389,1.496,415,1.496,416,2.3,417,2.3,418,1.908,419,2.563,420,1.908,421,1.908,422,1.722,423,1.908,424,1.757,425,1.908,426,1.757,427,1.831,428,2.563,429,1.757,430,1.908,431,1.722,432,2.3,433,1.722,434,1.908,435,1.757,436,1.908,437,1.757,438,1.831,439,1.757,440,2.459,441,1.757,442,1.908,443,1.757,444,1.908,445,1.757,446,1.908,447,1.757,448,1.722,449,2.3,450,1.757,451,1.722,452,1.908,453,1.757,454,1.908,455,1.757,456,1.908,457,1.757,458,1.908,459,1.794,460,1.908,461,1.757,462,1.908,463,1.757,464,1.908,465,2.36,466,1.908,467,1.757,468,1.908,469,1.722,470,1.908,471,1.688,472,1.908,473,1.722,474,1.908,475,1.757,476,1.908,477,1.757,478,1.908,479,1.908,480,1.757,481,1.908,482,1.654,483,1.908,484,1.722,485,1.908,486,1.722,487,1.908,488,1.757,489,1.908,490,1.722,491,1.908,492,1.757,493,1.831,494,1.908,495,1.908,496,1.949,498,2.118,1714,5.798,1715,7.881,1716,8.46,1717,7.881,1718,6.539,1719,6.539]],["title/components/MatchComponent.html",[19,0.435,467,1.226]],["body/components/MatchComponent.html",[3,0.099,4,0.099,5,0.09,7,0.273,8,0.555,11,0.982,12,0.572,13,0.008,15,0.197,18,1.599,19,0.714,20,1.896,22,0.099,29,4.001,30,2.581,31,3.609,32,1.599,33,1.828,41,1.599,44,3.399,45,2.291,46,0.099,51,2.447,52,2.35,54,1.689,56,0.108,57,1.3,58,1.623,61,1.871,66,1.25,69,2.38,70,3.44,72,3.779,75,3.236,80,2.019,89,1.909,121,0.007,122,0.005,123,0.004,139,0.897,186,0.645,195,1.152,215,0.931,216,1.528,221,0.572,234,1.785,236,0.759,243,0.772,250,0.759,273,0.6,277,1.066,376,1.909,377,1.47,378,1.47,379,1.47,380,1.528,386,1.591,387,1.591,389,1.993,390,2.39,406,3.145,415,1.152,416,1.949,417,1.949,418,1.47,419,2.33,420,1.47,421,1.47,422,1.326,423,1.47,424,1.354,425,1.47,426,1.795,427,1.87,428,2.33,429,1.354,430,1.47,431,1.759,432,1.949,433,1.326,434,1.47,435,1.354,436,1.47,437,1.354,438,1.41,439,1.354,440,2.39,441,1.795,442,1.47,443,1.795,444,1.47,445,1.795,446,1.47,447,1.354,448,1.326,449,1.949,450,1.354,451,1.326,452,1.47,453,1.354,454,1.47,455,1.354,456,1.47,457,1.354,458,1.47,459,1.382,460,1.47,461,1.354,462,1.47,463,1.354,464,1.47,465,1.354,466,1.47,467,2.145,468,1.47,469,1.326,470,1.47,471,1.3,472,1.47,473,1.326,474,1.47,475,1.354,476,1.47,477,1.354,478,1.47,479,1.47,480,1.354,481,1.47,482,1.274,483,1.47,484,1.326,485,1.47,486,1.326,487,1.47,488,1.354,489,1.47,490,1.326,491,1.47,492,1.354,493,1.41,494,1.47,495,1.47,496,1.501,498,1.795,510,3.887,512,4.905,516,2.974,517,1.871,565,3.398,588,4.741,589,5.11,665,4.466,760,7.365,850,3.887,881,3.809,902,3.944,903,3.944,907,5.923,950,4.507,953,4.91,1056,5.424,1060,6.086,1071,5.424,1184,5.137,1200,3.809,1204,3.398,1212,4.466,1215,5.923,1216,5.923,1218,5.923,1219,5.052,1263,5.681,1264,3.809,1266,3.809,1524,4.754,1636,5.923,1672,4.466,1720,4.466,1721,7.495,1722,6.68,1723,6.68,1724,7.982,1725,7.982,1726,7.982,1727,7.982,1728,7.982,1729,7.495,1730,6.086,1731,6.68,1732,5.036,1733,5.036,1734,5.036,1735,6.68,1736,5.036,1737,5.036,1738,5.036,1739,5.036,1740,5.036,1741,5.036,1742,5.036,1743,5.036,1744,5.036,1745,5.036,1746,5.036,1747,5.036,1748,5.036,1749,4.466,1750,4.466,1751,4.466,1752,4.466,1753,5.036,1754,7.982,1755,7.365,1756,8.306,1757,7.982,1758,7.982,1759,5.036,1760,5.036,1761,5.036,1762,5.036,1763,5.036,1764,5.036,1765,7.078,1766,5.923,1767,6.68,1768,6.68,1769,5.036,1770,4.466,1771,6.68,1772,6.68,1773,6.68,1774,6.68,1775,6.68,1776,6.68,1777,6.68,1778,5.036,1779,5.036,1780,5.036,1781,5.036,1782,4.466]],["title/interfaces/MatchEventPayload.html",[0,0.582,1400,3.449]],["body/interfaces/MatchEventPayload.html",[0,0.837,2,3.158,3,0.128,4,0.128,5,0.117,7,0.356,8,0.656,11,1.78,12,0.551,13,0.008,14,1.075,15,0.192,22,0.128,46,0.155,56,0.14,66,1.227,67,2.433,69,2.142,89,1.873,92,2.915,111,1.13,112,3.493,116,2.256,121,0.005,122,0.006,123,0.005,124,0.379,130,1.39,215,0.675,277,1.054,292,1.252,293,1.227,354,1.917,357,1.917,360,1.937,366,1.805,517,2.434,580,4.641,592,4.031,610,4.956,642,5.324,643,5.713,644,5.713,752,4.179,845,3.87,850,3.067,869,5.619,929,3.592,1319,7.302,1320,4.956,1321,4.956,1322,4.956,1342,4.421,1380,5.321,1381,5.811,1382,5.811,1383,5.811,1385,5.324,1386,4.956,1387,5.811,1388,5.811,1390,5.811,1398,5.811,1399,5.321,1400,6.404,1401,6.255,1402,7.136,1403,7.136,1404,7.792,1405,6.997,1406,5.321,1407,5.811,1408,5.811,1409,7.974,1410,7.974,1411,5.811,1412,5.811,1413,5.811,1414,5.811,1415,5.811,1416,5.811,1417,5.811,1418,5.811,1419,5.811,1420,5.811,1421,4.956,1422,5.811,1423,5.811,1424,5.811,1425,5.811,1426,5.811,1427,6.997,1428,5.811]],["title/injectables/MatchGQL.html",[124,0.219,357,1.108]],["body/injectables/MatchGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.846,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.52,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.802,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.492,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,1.02,358,1.128,359,1.128,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1783,2.662]],["title/injectables/MatchPlanGQL.html",[124,0.219,360,1.043]],["body/injectables/MatchPlanGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.846,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.52,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.955,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.341,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.96,361,1.128,362,1.585,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,1784,2.662]],["title/components/MatchSchedulingComponent.html",[19,0.435,471,1.177]],["body/components/MatchSchedulingComponent.html",[0,0.821,3,0.093,4,0.093,5,0.085,7,0.442,8,0.535,11,1.744,12,0.566,13,0.008,14,0.908,15,0.189,19,0.694,20,1.843,22,0.093,29,3.96,30,2.44,34,3.139,35,1.948,36,1.449,41,1.512,42,2.107,43,2.107,46,0.093,49,1.005,51,2.44,52,2.344,54,1.627,56,0.102,57,1.228,58,1.563,61,2.898,62,3.655,64,1.414,66,1.204,67,1.254,69,2.124,80,1.973,88,3.195,89,1.361,91,1.727,92,2.133,115,1.688,116,1.361,119,2.928,121,0.004,122,0.005,123,0.004,129,1.336,130,1.435,139,0.889,186,0.694,209,1.601,215,0.93,217,1.133,221,0.541,224,1.594,226,1.681,236,0.731,243,0.884,246,1.941,247,1.133,250,0.731,273,0.567,277,1.042,376,1.839,377,1.389,378,1.389,379,1.389,380,1.471,386,1.941,387,1.941,389,1.998,390,2.352,406,2.646,412,5.223,415,1.089,416,1.877,417,1.877,418,1.389,419,2.277,420,1.389,421,1.389,422,1.254,423,1.389,424,1.279,425,1.389,426,1.279,427,1.333,428,2.277,429,1.279,430,1.389,431,1.254,432,1.877,433,1.254,434,1.389,435,1.279,436,1.389,437,1.279,438,1.333,439,1.279,440,2.185,441,1.279,442,1.389,443,1.279,444,1.389,445,1.279,446,1.389,447,1.279,448,1.254,449,1.877,450,1.279,451,1.254,452,1.389,453,1.279,454,1.389,455,1.279,456,1.389,457,1.279,458,1.389,459,1.306,460,1.389,461,1.279,462,1.389,463,1.279,464,1.389,465,1.279,466,1.389,467,1.279,468,1.389,469,1.254,470,1.389,471,2.014,472,1.389,473,1.254,474,1.389,475,1.279,476,1.389,477,1.279,478,1.389,479,1.389,480,1.279,481,1.389,482,1.204,483,1.389,484,1.254,485,1.389,486,1.254,487,1.389,488,1.279,489,1.389,490,1.254,491,1.389,492,1.279,493,2.04,494,1.389,495,1.389,496,1.418,498,1.729,517,2.898,548,6.657,671,4.14,733,2.44,752,2.521,806,4.578,820,3.388,850,2.228,902,4.302,903,4.302,917,5.014,929,2.609,950,4.34,953,3.957,989,5.03,1045,5.223,1083,4.482,1178,5.51,1179,5.51,1180,5.703,1184,4.88,1186,4.864,1188,5.51,1197,4.864,1198,3.6,1199,3.388,1201,3.6,1202,3.6,1203,3.6,1204,4.34,1205,3.6,1206,3.6,1207,3.6,1208,5.901,1209,3.6,1210,3.6,1211,5.185,1263,5.801,1264,4.864,1266,4.864,1456,5.801,1457,7.073,1458,3.6,1459,5.223,1460,5.223,1461,5.223,1462,4.578,1463,5.51,1464,3.865,1465,3.6,1466,3.865,1467,5.223,1468,5.223,1469,5.223,1470,5.916,1471,5.916,1472,5.223,1473,6.973,1474,5.916,1475,5.916,1476,3.865,1477,5.901,1478,5.223,1479,3.865,1480,3.865,1481,6.82,1482,3.865,1483,3.865,1484,5.223,1485,3.865,1486,3.865,1487,5.223,1488,6.82,1489,3.865,1490,3.865,1491,3.865,1492,3.865,1493,3.865,1494,3.865,1495,5.223,1496,5.223,1497,5.223,1498,3.865,1499,3.865,1500,3.865,1501,3.865,1502,5.916,1503,3.865,1504,3.865,1505,3.865,1506,3.865,1507,3.865,1508,3.865,1509,3.865,1510,3.865,1511,3.865,1512,3.865,1513,5.916,1514,3.865,1515,3.865,1516,5.223,1517,3.865,1518,3.865,1519,3.865,1520,3.865,1521,6.336,1522,3.865,1523,3.865,1524,3.388,1525,3.865,1526,3.865,1527,3.865,1528,3.865,1529,5.223,1530,3.865,1531,3.865,1532,3.865,1533,5.223,1534,5.223,1620,3.865,1770,4.221,1782,4.221,1785,6.432,1786,6.432,1787,6.432,1788,4.76,1789,4.76,1790,4.76,1791,4.76,1792,4.76,1793,4.76,1794,4.76,1795,4.76,1796,4.76,1797,4.76,1798,4.76,1799,4.76,1800,4.76,1801,4.76,1802,4.76,1803,4.76,1804,4.76,1805,4.76,1806,6.432,1807,6.432,1808,6.432,1809,6.432,1810,6.432,1811,6.432,1812,6.919,1813,5.703,1814,5.703,1815,4.76,1816,6.432,1817,4.76]],["title/injectables/MatchService.html",[124,0.219,1184,2.592]],["body/injectables/MatchService.html",[3,0.114,4,0.114,5,0.104,7,0.317,11,1.806,12,0.557,13,0.008,14,1.095,15,0.181,22,0.114,46,0.114,56,0.125,61,2.987,64,1.768,66,1.375,67,2.339,69,2.246,75,3.459,111,1.532,116,2.299,121,0.007,122,0.006,123,0.005,124,0.353,126,1.257,139,0.847,157,2.075,158,1.476,159,1.476,160,1.954,161,1.935,162,1.935,163,2.178,164,1.935,165,1.476,186,0.717,215,0.981,216,1.84,226,1.733,240,2.158,243,0.915,271,1.715,272,1.362,277,1.162,281,2.28,292,1.115,293,1.092,294,2.246,297,2.28,300,2.135,360,2.062,366,1.931,380,1.681,386,2.115,387,2.115,389,1.99,517,3.231,580,4.941,614,4.408,671,3.317,787,5.433,788,5.463,789,4.947,793,4.947,845,3.446,850,3.95,859,5.724,1184,4.176,1204,4.957,1251,7.875,1386,6.082,1399,4.739,1401,6.321,1402,6.854,1403,6.854,1818,5.175,1819,7.348,1820,7.348,1821,5.836,1822,8.042,1823,5.836,1824,7.348,1825,5.836,1826,7.348,1827,5.836,1828,8.042,1829,7.348,1830,5.836,1831,7.348,1832,5.836,1833,7.348,1834,5.836,1835,5.836,1836,5.836,1837,5.836,1838,7.131,1839,7.131,1840,7.875,1841,8.881,1842,7.131,1843,5.836,1844,5.836,1845,5.836,1846,5.836]],["title/components/MatchplanComponent.html",[19,0.435,469,1.201]],["body/components/MatchplanComponent.html",[3,0.102,4,0.102,5,0.093,7,0.283,8,0.569,12,0.575,13,0.008,14,0.978,15,0.188,19,0.727,20,1.93,22,0.102,29,4.027,30,2.677,32,1.659,34,3.288,35,2.138,42,3.029,43,2.312,46,0.102,51,2.451,52,2.355,54,1.731,56,0.112,57,1.348,58,1.662,66,1.281,67,1.376,69,2.346,75,2.035,80,2.048,88,4.022,111,1.316,121,0.004,122,0.006,123,0.004,129,1.255,130,1.205,139,0.888,186,0.697,215,0.786,216,1.923,217,1.817,221,0.594,236,0.777,243,0.705,246,1.817,247,1.629,250,0.777,254,1.766,255,2.169,273,0.622,277,1.019,357,1.269,360,2.081,366,2.01,376,1.956,377,1.525,378,1.525,379,1.525,380,1.565,386,1.928,387,1.928,389,1.923,390,2.137,397,3.378,406,2.924,410,4.041,415,1.195,416,1.997,417,1.997,418,1.525,419,2.363,420,1.525,421,1.525,422,1.376,423,1.525,424,1.404,425,1.525,426,1.404,427,1.463,428,2.363,429,1.404,430,1.525,431,1.376,432,1.997,433,1.376,434,1.525,435,1.404,436,1.525,437,1.404,438,1.463,439,1.404,440,2.267,441,1.404,442,1.525,443,1.404,444,1.525,445,1.404,446,1.525,447,1.404,448,1.376,449,1.997,450,1.404,451,1.376,452,1.525,453,1.404,454,1.525,455,1.404,456,1.525,457,1.404,458,1.525,459,1.433,460,1.525,461,1.404,462,1.525,463,1.404,464,1.525,465,1.404,466,1.525,467,1.404,468,1.525,469,2.133,470,1.525,471,1.348,472,1.525,473,1.376,474,1.525,475,1.404,476,1.525,477,1.404,478,1.525,479,1.525,480,1.404,481,1.525,482,1.321,483,1.525,484,1.376,485,1.525,486,1.376,487,1.525,488,1.404,489,1.525,490,1.376,491,1.525,492,1.404,493,1.463,494,1.525,495,1.525,496,1.557,498,1.839,517,3.008,580,4.942,613,3.359,614,2.863,640,4.242,642,5.149,643,4.617,644,4.617,671,5.066,674,4.632,806,4.87,845,3.085,850,3.571,1090,6.197,1109,7.003,1281,3.359,1401,3.718,1602,3.718,1603,4.632,1730,5.557,1812,7.647,1813,7.18,1814,7.18,1847,4.242,1848,7.631,1849,6.843,1850,7.631,1851,7.631,1852,7.631,1853,6.843,1854,6.843,1855,8.098,1856,7.631,1857,4.242,1858,5.224,1859,6.843,1860,5.224,1861,6.843,1862,5.224,1863,5.224,1864,6.067,1865,5.224,1866,5.224,1867,6.843,1868,5.224,1869,5.224,1870,5.224,1871,5.224,1872,5.224,1873,6.843,1874,5.224,1875,6.843,1876,5.224,1877,5.224,1878,5.224,1879,4.242,1880,4.242,1881,4.632,1882,4.242,1883,4.632,1884,4.242,1885,4.632,1886,5.224,1887,5.224,1888,8.406,1889,5.224,1890,7.631,1891,5.224,1892,5.224,1893,5.224,1894,5.224,1895,6.843,1896,5.224,1897,5.224,1898,4.242,1899,4.242,1900,5.224,1901,5.224,1902,5.224,1903,6.067,1904,5.224,1905,6.843,1906,8.098,1907,8.098,1908,6.843,1909,8.098,1910,6.843,1911,6.843,1912,5.224,1913,5.224,1914,8.098]],["title/modules/MatchplanModule.html",[519,1.388,1915,3.449]],["body/modules/MatchplanModule.html",[3,0.14,4,0.14,5,0.128,13,0.008,15,0.197,22,0.14,46,0.14,52,1.741,56,0.153,121,0.006,122,0.007,123,0.006,217,1.706,415,1.639,469,2.454,519,2.181,521,2.661,522,3.559,523,4.366,524,3.672,525,3.672,526,3.559,532,4.935,533,4.406,534,3.794,535,3.794,538,3.405,539,3.321,541,4.231,542,4.607,698,6.288,1293,6.353,1915,7.266,1916,6.353,1917,6.353,1918,6.353,1919,6.633,1920,7.165,1921,6.353]],["title/modules/MatchplanRoutingModule.html",[519,1.388,1919,3.246]],["body/modules/MatchplanRoutingModule.html",[3,0.145,4,0.145,5,0.132,13,0.008,15,0.19,19,0.704,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.986,469,2.229,515,3.558,521,2.743,538,3.022,539,3.379,567,4.36,568,4.713,569,4.36,571,4.196,572,4.543,1919,6.025,1921,6.548,1922,7.385]],["title/modules/MaterialModule.html",[519,1.388,716,3.077]],["body/modules/MaterialModule.html",[3,0.138,4,0.138,5,0.126,13,0.008,15,0.202,18,2.238,22,0.138,46,0.138,56,0.151,121,0.006,122,0.007,123,0.006,521,2.618,526,3.5,538,2.884,539,3.289,716,5.559,1923,7.048,1924,8.731,1925,7.048,1926,8.731,1927,7.048,1928,8.731,1929,7.048,1930,8.731,1931,7.048,1932,8.731,1933,7.048,1934,8.731,1935,7.048,1936,7.048,1937,6.249,1938,7.048,1939,6.249,1940,7.048,1941,8.731,1942,8.731,1943,8.731,1944,9.17,1945,8.731,1946,8.731,1947,8.731,1948,8.731,1949,8.731,1950,8.731,1951,8.731,1952,8.731,1953,7.048,1954,8.731,1955,8.731,1956,8.731]],["title/components/NewpasswordComponent.html",[19,0.435,473,1.201]],["body/components/NewpasswordComponent.html",[3,0.117,4,0.117,5,0.106,7,0.323,8,0.619,12,0.534,13,0.008,14,0.866,15,0.191,19,0.774,20,2.053,22,0.117,31,3.615,32,1.892,33,2.162,44,3.48,45,2.71,46,0.117,51,2.466,52,2.369,54,1.882,56,0.127,57,1.537,58,1.808,66,1.393,67,2.239,69,2.053,72,3.693,80,2.151,89,2.431,91,2.162,92,2.469,115,2.113,116,2.127,121,0.005,122,0.006,123,0.005,139,0.851,186,0.656,204,1.447,215,0.766,221,0.677,236,0.966,243,0.766,250,0.846,273,0.71,277,0.796,376,2.127,377,1.739,378,1.739,379,1.739,380,1.703,386,1.419,387,1.419,389,1.703,390,1.668,406,2.524,415,1.363,416,2.172,417,2.172,418,1.739,419,2.482,420,1.739,421,1.739,422,1.569,423,1.739,424,1.601,425,1.739,426,1.601,427,1.668,428,2.482,429,1.601,430,1.739,431,1.569,432,2.172,433,1.569,434,1.739,435,1.601,436,1.739,437,1.601,438,1.668,439,1.601,440,2.381,441,1.601,442,1.739,443,1.601,444,1.739,445,1.601,446,1.739,447,1.601,448,1.569,449,2.172,450,1.601,451,1.569,452,1.739,453,1.601,454,1.739,455,1.601,456,1.739,457,1.601,458,1.739,459,1.634,460,1.739,461,1.601,462,1.739,463,1.601,464,1.739,465,1.601,466,1.739,467,1.601,468,1.739,469,1.569,470,1.739,471,1.537,472,1.739,473,2.239,474,1.739,475,1.601,476,1.739,477,1.601,478,1.739,479,1.739,480,1.601,481,1.739,482,1.507,483,1.739,484,1.569,485,1.739,486,1.569,487,1.739,488,1.601,489,1.739,490,1.569,491,1.739,492,1.601,493,1.668,494,1.739,495,1.739,496,1.775,498,2,509,4.24,510,4.096,512,5.021,515,2.871,516,3.518,622,4.838,623,5.282,733,3.053,766,5.022,920,3.83,922,4.019,928,6.044,933,6.6,988,6.849,1004,4.838,1196,6.592,1336,7.198,1559,7.198,1571,5.282,1581,6.6,1957,5.282,1958,8.118,1959,7.443,1960,8.503,1961,9.056,1962,7.443,1963,5.957,1964,5.957,1965,5.957,1966,5.957,1967,5.957,1968,5.957,1969,8.118,1970,5.957,1971,5.957,1972,5.957,1973,5.957,1974,7.443,1975,7.443,1976,7.443,1977,7.443]],["title/modules/NewpasswordModule.html",[519,1.388,1978,3.449]],["body/modules/NewpasswordModule.html",[3,0.141,4,0.141,5,0.128,13,0.008,15,0.197,22,0.141,46,0.141,56,0.154,121,0.006,122,0.007,123,0.006,415,1.647,473,2.457,519,2.191,521,2.674,522,3.576,523,4.375,524,3.69,525,3.69,526,3.576,532,4.941,533,4.418,534,3.813,535,3.813,538,3.414,539,3.33,541,4.251,542,4.629,735,4.429,766,4.857,1978,7.226,1979,6.383,1980,6.383,1981,6.383,1982,6.64,1983,7.199,1984,5.628,1985,6.383]],["title/modules/NewpasswordRoutingModule.html",[519,1.388,1982,3.246]],["body/modules/NewpasswordRoutingModule.html",[3,0.145,4,0.145,5,0.132,13,0.008,15,0.19,19,0.704,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.986,473,2.229,515,3.558,521,2.743,538,3.022,539,3.379,567,4.36,568,4.713,569,4.36,571,4.196,572,4.543,1982,6.025,1985,6.548,1986,7.385]],["title/injectables/NotificationService.html",[44,1.867,124,0.219]],["body/injectables/NotificationService.html",[3,0.133,4,0.133,5,0.121,7,0.367,8,0.669,11,1.731,12,0.592,13,0.008,14,1.125,15,0.184,18,2.15,22,0.133,44,3.293,46,0.133,56,0.145,66,1.506,67,2.34,75,2.637,121,0.006,122,0.007,123,0.006,124,0.387,126,1.459,129,1.242,130,1.192,139,0.865,186,0.718,292,1.293,293,1.267,380,1.841,386,2.115,387,2.115,389,1.964,390,2.404,482,1.712,581,5.727,587,7.214,739,6.003,820,6.111,1342,6.459,1537,7.367,1755,6.003,1987,6.003,1988,8.586,1989,8.047,1990,8.047,1991,8.047,1992,6.771,1993,8.047,1994,8.047,1995,6.771,1996,8.047,1997,8.884,1998,8.884,1999,9.073,2000,6.771,2001,8.047,2002,6.771,2003,8.047,2004,8.047,2005,6.771,2006,6.771,2007,8.047]],["title/injectables/PasswordChangeGQL.html",[124,0.219,309,1.13]],["body/injectables/PasswordChangeGQL.html",[0,0.536,3,0.052,4,0.052,5,0.048,7,0.145,8,0.349,9,1.434,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.61,46,0.192,48,1.041,49,1.563,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.661,126,0.574,127,0.661,128,2.396,129,0.489,130,0.469,131,2.385,132,2.521,133,1.586,134,2.162,135,2.135,136,1.894,137,1.834,138,1.586,139,0.254,141,2.418,142,0.661,143,0.61,144,1.761,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.702,153,0.702,154,0.688,155,2.429,156,1.129,157,2.012,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.761,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.342,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.012,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.434,205,2.012,206,1.949,207,1.554,208,1.554,209,1.674,210,1.106,211,0.716,212,1.554,213,1.797,214,1.084,215,0.784,216,0.961,217,0.635,218,1.939,219,0.702,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.342,226,0.905,227,0.702,228,1.084,229,1.725,230,0.702,231,1.084,232,1.761,233,0.702,234,1.856,235,0.702,236,0.841,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.688,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.342,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.434,269,1.084,270,0.688,271,1.499,272,1.214,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.342,279,1.834,280,1.342,281,1.315,282,1.342,283,1.084,284,1.084,285,1.084,286,1.084,287,1.342,288,1.342,289,1.342,290,1.084,291,0.688,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.661,307,0.716,308,0.716,309,1.041,310,1.129,311,1.129,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.688,323,0.716,324,0.716,325,0.688,326,0.716,327,0.716,328,0.688,329,0.716,330,0.688,331,0.716,332,0.688,333,0.716,334,0.716,335,0.688,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.661,342,0.661,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.688,351,2.204,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.61,361,0.716,362,1.397,363,0.647,364,0.716,365,0.661,366,0.61,367,0.716,368,0.661,369,0.674,370,0.716,371,0.716,372,0.635,373,0.661,374,0.688,2008,2.665]],["title/injectables/PasswordResetGQL.html",[124,0.219,306,1.13]],["body/injectables/PasswordResetGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.111,169,1.842,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,1.04,307,1.128,308,1.128,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2009,2.662]],["title/injectables/PitchService.html",[124,0.219,989,2.592]],["body/injectables/PitchService.html",[3,0.129,4,0.129,5,0.117,7,0.357,8,0.658,12,0.552,13,0.008,14,0.987,15,0.193,22,0.129,34,3.655,35,2.692,41,2.089,42,3.754,43,2.912,46,0.129,56,0.141,61,2.938,66,1.48,67,2.234,75,3.081,88,4.37,89,2.665,91,2.87,92,2.623,106,4.054,107,1.573,111,1.135,112,3.501,115,2.805,116,2.261,121,0.005,122,0.006,123,0.005,124,0.38,126,1.417,129,1.207,130,1.158,139,0.839,165,1.664,176,2.041,182,1.664,183,1.732,184,1.732,186,0.685,225,2.189,226,1.827,243,0.815,292,1.256,293,1.231,313,2.338,317,2.338,365,2.266,380,1.809,386,2.02,387,2.02,389,1.809,517,2.938,787,5.399,788,5.413,789,4.866,793,4.866,986,6.423,989,4.495,1083,4.047,1105,5.982,1106,4.229,1281,5.085,2010,5.833,2011,6.578,2012,6.578,2013,7.91,2014,6.578,2015,7.91,2016,6.578,2017,7.91,2018,7.91,2019,7.91,2020,7.91,2021,7.91,2022,6.578,2023,6.578,2024,7.91,2025,6.578,2026,6.578,2027,6.578]],["title/components/PitchesComponent.html",[19,0.435,475,1.226]],["body/components/PitchesComponent.html",[3,0.124,4,0.124,5,0.112,7,0.342,8,0.641,12,0.484,13,0.008,15,0.165,19,0.794,20,2.106,22,0.124,46,0.124,51,2.472,52,2.374,54,1.95,56,0.135,57,1.628,58,1.874,66,1.444,69,2.106,80,2.194,89,2.381,121,0.005,122,0.006,123,0.005,139,0.794,186,0.673,215,0.794,221,0.717,224,1.912,236,0.876,243,0.794,250,0.876,273,0.752,376,2.204,377,1.841,378,1.841,379,1.841,380,1.764,386,1.502,387,1.502,389,1.443,406,3.07,415,1.443,416,2.251,417,2.251,418,1.841,419,2.532,420,1.841,421,1.841,422,1.662,423,1.841,424,1.696,425,1.841,426,1.696,427,1.767,428,2.532,429,1.696,430,1.841,431,1.662,432,2.251,433,1.662,434,1.841,435,1.696,436,1.841,437,1.696,438,1.767,439,1.696,440,2.429,441,1.696,442,1.841,443,1.696,444,1.841,445,1.696,446,1.841,447,1.696,448,1.662,449,2.251,450,1.696,451,1.662,452,1.841,453,1.696,454,1.841,455,1.696,456,1.841,457,1.696,458,1.841,459,1.731,460,1.841,461,1.696,462,1.841,463,1.696,464,1.841,465,1.696,466,1.841,467,1.696,468,1.841,469,1.662,470,1.841,471,1.628,472,1.841,473,1.662,474,1.841,475,2.332,476,1.841,477,1.696,478,1.841,479,1.841,480,1.696,481,1.841,482,1.596,483,1.841,484,1.662,485,1.841,486,1.662,487,1.841,488,1.696,489,1.841,490,1.662,491,1.841,492,1.696,493,1.767,494,1.841,495,1.841,496,1.88,498,2.073,960,6.262,989,5.298,1083,5.337,1199,4.491,1219,5.832,1620,5.124,2028,5.595,2029,8.329,2030,7.712,2031,6.31,2032,6.31,2033,6.31,2034,7.712,2035,7.712]],["title/injectables/PitchesGQL.html",[124,0.219,365,1.13]],["body/injectables/PitchesGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.288,225,1.523,226,0.905,227,0.701,228,1.084,229,1.725,230,0.701,231,1.084,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.803,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.834,280,1.523,281,1.315,282,1.341,283,1.084,284,1.084,285,1.084,286,1.084,287,1.341,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,1.041,366,0.609,367,0.716,368,0.66,369,0.674,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2036,2.664]],["title/injectables/RankingGQL.html",[124,0.219,366,1.043]],["body/injectables/RankingGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.846,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.52,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.931,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.341,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.585,363,0.647,364,0.716,365,0.66,366,0.96,367,1.128,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2037,2.662]],["title/injectables/RedisEventGQL.html",[124,0.219,1385,3.077]],["body/injectables/RedisEventGQL.html",[0,0.87,3,0.134,4,0.134,5,0.121,7,0.37,8,0.671,12,0.592,13,0.008,14,1.036,15,0.184,22,0.134,28,4.427,46,0.185,56,0.146,110,1.439,111,1.485,121,0.007,122,0.007,123,0.006,124,0.388,126,1.468,128,2.222,129,1.481,130,1.2,131,2.177,139,0.649,141,2.251,142,1.689,143,1.559,154,1.758,155,1.758,160,1.962,186,0.652,270,1.758,271,2.121,272,2.009,273,0.962,274,1.689,275,1.723,277,0.91,291,1.758,292,1.301,293,1.275,295,1.723,374,1.758,1367,5.152,1370,6.732,1385,5.449,1421,6.51,1542,5.193,1543,4.849,1544,6.108,1546,7.618,1547,7.633,1548,6.041,1549,6.108,1550,5.532,2038,6.813]],["title/injectables/RemoveRankingPenaltyGQL.html",[124,0.219,312,1.153]],["body/injectables/RemoveRankingPenaltyGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.432,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.646,38,1.019,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.41,94,1.491,96,1.87,100,1.491,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.659,126,0.573,127,0.659,128,2.396,129,0.488,130,0.468,131,2.385,132,2.521,133,1.584,134,2.207,135,2.134,136,1.893,137,1.833,138,1.584,139,0.254,141,2.417,142,0.659,143,0.609,144,1.759,145,1.127,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.686,155,2.429,156,1.127,157,2.011,158,1.724,159,1.724,160,2.295,161,1.105,162,1.105,163,1.759,164,1.105,165,1.97,166,1.105,167,0.715,168,2.101,169,1.521,170,0.715,171,0.715,172,1.083,173,0.715,174,1.832,175,1.879,176,1.083,177,1.584,178,2.163,179,2.163,180,2.011,181,1.584,182,1.724,183,1.553,184,1.553,185,1.105,186,0.713,187,1.127,188,1.127,189,1.396,190,1.584,191,1.396,192,1.396,193,1.127,194,1.127,195,1.782,196,0.715,197,1.553,198,1.083,199,1.553,200,1.105,201,1.127,202,1.127,203,1.553,204,1.432,205,2.011,206,1.947,207,1.553,208,1.553,209,1.673,210,1.105,211,0.715,212,1.553,213,1.795,214,1.083,215,0.784,216,0.96,217,0.633,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.019,224,1.04,225,1.34,226,0.904,227,0.701,228,1.083,229,1.724,230,0.701,231,1.083,232,1.759,233,0.701,234,1.855,235,0.701,236,0.84,237,1.368,238,1.061,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.623,247,1.528,248,1.105,249,1.105,250,0.918,251,1.019,252,1.553,253,1.105,254,0.686,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.34,261,0.715,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.432,269,1.083,270,0.686,271,1.497,272,1.212,273,0.5,274,1.04,275,0.673,276,0.715,277,1.094,278,1.34,279,1.833,280,1.34,281,1.314,282,1.34,283,1.083,284,1.083,285,1.083,286,1.083,287,1.34,288,1.34,289,1.34,290,1.083,291,0.686,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.715,299,0.715,300,0.673,301,0.715,302,0.715,303,0.673,304,0.715,305,0.715,306,0.659,307,0.715,308,0.715,309,0.659,310,0.715,311,0.715,312,1.061,313,0.673,314,0.715,315,0.715,316,0.673,317,0.673,318,1.105,319,0.673,320,0.715,321,0.715,322,0.686,323,0.715,324,0.715,325,0.686,326,0.715,327,0.715,328,0.686,329,0.715,330,0.686,331,0.715,332,0.686,333,0.715,334,0.715,335,0.686,336,0.715,337,0.715,338,0.673,339,0.715,340,0.715,341,0.659,342,0.659,343,0.715,344,0.715,345,0.673,346,0.715,347,0.715,348,0.673,349,0.673,350,0.686,351,2.203,352,0.715,353,0.715,354,0.646,355,0.715,356,0.715,357,0.646,358,0.715,359,0.715,360,0.609,361,0.715,362,1.396,363,0.646,364,0.715,365,0.659,366,0.609,367,0.715,368,0.659,369,0.673,370,0.715,371,0.715,372,0.633,373,0.659,374,0.686,2039,2.66]],["title/injectables/RemoveTeamFromSeasonGQL.html",[124,0.219,325,1.177]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.178,135,2.176,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,1.083,326,1.128,327,1.128,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2040,2.662]],["title/components/RenameTeamComponent.html",[19,0.435,477,1.226]],["body/components/RenameTeamComponent.html",[3,0.119,4,0.119,5,0.108,7,0.33,8,0.626,12,0.537,13,0.008,14,0.953,15,0.183,16,4.005,17,3.018,18,1.93,19,0.781,20,2.072,21,2.844,22,0.119,23,4.817,24,3.907,36,1.855,41,1.93,46,0.119,49,1.809,51,2.468,52,2.37,54,1.906,56,0.13,57,1.568,58,1.831,66,1.411,67,1.601,69,2.269,70,3.69,74,3.743,80,2.166,89,2.341,91,2.205,92,2.016,115,2.155,116,1.737,121,0.005,122,0.006,123,0.005,139,0.839,186,0.692,198,1.945,215,0.776,221,0.69,236,0.856,243,0.776,250,0.856,273,0.724,279,1.506,342,1.506,376,2.154,377,1.774,378,1.774,379,1.774,380,1.724,386,1.794,387,1.794,389,1.724,390,1.702,397,2.69,406,2.904,410,4.45,415,1.39,416,2.199,417,2.199,418,1.774,419,2.499,420,1.774,421,1.774,422,1.601,423,1.774,424,1.633,425,1.774,426,1.633,427,1.702,428,2.499,429,1.633,430,1.774,431,1.601,432,2.199,433,1.601,434,1.774,435,1.633,436,1.774,437,1.633,438,1.702,439,1.633,440,2.398,441,1.633,442,1.774,443,1.633,444,1.774,445,1.633,446,1.774,447,1.633,448,1.601,449,2.199,450,1.633,451,1.601,452,1.774,453,1.633,454,1.774,455,1.633,456,1.774,457,1.633,458,1.774,459,1.667,460,1.774,461,1.633,462,1.774,463,1.633,464,1.774,465,1.633,466,1.774,467,1.633,468,1.774,469,1.601,470,1.774,471,1.568,472,1.774,473,1.601,474,1.774,475,1.633,476,1.774,477,2.302,478,2.682,479,1.774,480,1.633,481,1.774,482,1.537,483,1.774,484,1.601,485,1.774,486,1.601,487,1.774,488,1.633,489,1.774,490,1.601,491,1.774,492,1.633,493,1.702,494,1.774,495,1.774,496,1.811,498,2.025,554,6.785,899,3.907,929,3.331,937,5.389,944,6.682,1045,6.119,2041,7.955,2042,5.389,2043,8.191,2044,7.536,2045,6.078,2046,6.078,2047,7.536,2048,6.078,2049,6.682,2050,6.078,2051,6.078,2052,6.078]],["title/injectables/RenameTeamGQL.html",[124,0.219,342,1.13]],["body/injectables/RenameTeamGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.15,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.88,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,1.04,343,1.128,344,1.128,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2053,2.662]],["title/injectables/RescheduleMatchDayGQL.html",[124,0.219,330,1.177]],["body/injectables/RescheduleMatchDayGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.019,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.41,94,1.491,96,2.01,100,1.491,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.573,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.417,142,0.66,143,0.609,144,1.842,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.724,159,1.724,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.715,168,2.101,169,1.522,170,0.715,171,0.715,172,1.083,173,0.715,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.724,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.396,190,1.585,191,1.585,192,1.725,193,1.128,194,1.128,195,1.782,196,0.715,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.715,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.019,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.724,230,0.701,231,1.083,232,1.76,233,0.701,234,1.855,235,0.701,236,0.84,237,1.368,238,1.061,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.623,247,1.528,248,1.105,249,1.105,250,0.918,251,1.019,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.715,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.212,273,0.5,274,1.04,275,0.673,276,0.715,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.715,299,0.715,300,0.673,301,0.715,302,0.715,303,0.673,304,0.715,305,0.715,306,0.66,307,0.715,308,0.715,309,0.66,310,0.715,311,0.715,312,0.673,313,0.673,314,0.715,315,0.715,316,0.673,317,0.673,318,1.105,319,0.673,320,0.715,321,0.715,322,0.687,323,0.715,324,0.715,325,0.687,326,0.715,327,0.715,328,0.687,329,0.715,330,1.083,331,1.128,332,0.687,333,0.715,334,0.715,335,0.687,336,0.715,337,0.715,338,0.673,339,0.715,340,0.715,341,0.66,342,0.66,343,0.715,344,0.715,345,0.673,346,0.715,347,0.715,348,0.673,349,0.673,350,0.687,351,2.203,352,0.715,353,0.715,354,0.647,355,0.715,356,0.715,357,0.647,358,0.715,359,0.715,360,0.609,361,0.715,362,1.396,363,0.647,364,0.715,365,0.66,366,0.609,367,0.715,368,0.66,369,0.673,370,0.715,371,0.715,372,0.634,373,0.66,374,0.687,2054,2.661]],["title/interfaces/RoundTeam.html",[0,0.582,47,3.246]],["body/interfaces/RoundTeam.html",[0,1.005,1,5.606,2,3.148,3,0.128,4,0.128,5,0.116,6,4.94,7,0.354,8,0.655,9,1.913,10,4.649,11,1.535,12,0.494,13,0.008,14,0.76,15,0.202,16,3.583,17,3.244,18,2.075,19,0.751,20,1.992,21,3.057,22,0.128,23,4.478,24,4.2,25,6.395,26,4.018,27,4.018,28,3.58,29,3.743,30,3.348,31,3.375,32,2.075,33,2.37,34,3.394,35,2.673,36,1.299,37,1.913,38,1.587,39,1.838,40,1.802,41,2.075,42,2.891,43,2.891,44,3.223,45,2.972,46,0.154,47,6.018,48,2.262,49,1.967,50,2.262,51,1.652,52,1.587,53,5.304,54,1.652,55,5.304,56,0.14,57,1.686,58,1.587,59,1.587,60,5.304,61,2.426,62,3.712,63,5.304,64,1.731,65,5.304,66,1.223,67,2.404,68,4.94,69,2.139,70,2.815,71,5.304,72,2.972,73,4.649,74,3.244,75,2.544,76,4.94,77,4.94,78,4.2,79,4.94,80,1.652,81,5.304,82,6.866,83,6.866,84,5.304,85,5.314,86,5.304,87,5.304,88,3.244,89,1.867,90,5.304,91,2.37,92,2.167,93,5.304,94,1.652,95,6.395,96,1.652,97,6.395,98,6.395,99,5.304,100,1.652,101,5.304,102,1.652,103,5.304,104,1.652,105,5.304,106,3.348,107,1.566,108,4.94,109,5.304,110,1.379,111,1.127,112,2.891,113,5.304,114,4.018,115,2.317,116,2.251,117,5.304,118,5.304,119,4.845,120,5.304,121,0.005,122,0.006,123,0.005]],["title/injectables/ScheduleMatchGQL.html",[124,0.219,297,1.153]],["body/injectables/ScheduleMatchGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.051,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.964,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,1.062,298,1.128,299,1.128,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2055,2.662]],["title/injectables/SeasonPenaltiesGQL.html",[124,0.219,363,1.108]],["body/injectables/SeasonPenaltiesGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.431,11,1.727,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.745,37,0.645,38,1.018,39,0.62,40,0.607,46,0.192,48,1.038,49,1.561,50,1.038,56,0.198,59,1.557,64,1.409,94,1.49,96,1.869,100,1.49,102,0.672,104,0.672,107,1.846,110,1.953,111,1.636,121,0.002,122,0.003,123,0.002,124,0.446,125,0.658,126,0.572,127,0.658,128,2.395,129,0.487,130,0.468,131,2.385,132,2.519,133,1.583,134,2.16,135,2.134,136,1.892,137,1.832,138,1.583,139,0.253,141,2.417,142,0.658,143,0.607,144,1.758,145,1.126,146,1.081,147,1.103,148,1.103,149,1.103,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.126,157,2.009,158,1.723,159,1.723,160,2.295,161,1.103,162,1.103,163,1.758,164,1.103,165,1.969,166,1.103,167,0.714,168,2.1,169,1.52,170,0.714,171,0.714,172,1.081,173,0.714,174,1.583,175,1.551,176,1.081,177,1.583,178,2.162,179,2.162,180,2.009,181,1.583,182,1.723,183,1.551,184,1.551,185,1.103,186,0.712,187,1.126,188,1.126,189,1.394,190,1.583,191,1.394,192,1.394,193,1.126,194,1.126,195,1.817,196,0.714,197,1.551,198,1.081,199,1.551,200,1.103,201,1.126,202,1.126,203,1.551,204,1.431,205,2.009,206,1.946,207,1.551,208,1.551,209,1.672,210,1.103,211,0.714,212,1.551,213,1.794,214,1.081,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.672,221,0.931,222,1.767,223,1.018,224,1.038,225,1.339,226,0.903,227,0.699,228,1.081,229,1.723,230,0.699,231,1.081,232,1.758,233,0.699,234,1.854,235,0.699,236,0.84,237,1.366,238,1.059,239,1.654,240,2.18,241,1.103,242,1.103,243,0.783,244,1.103,245,1.103,246,1.622,247,1.526,248,1.103,249,1.103,250,0.917,251,1.018,252,1.551,253,1.103,254,0.685,255,1.081,256,1.081,257,1.312,258,1.103,259,1.103,260,1.339,261,0.714,262,1.103,263,1.103,264,1.103,265,1.103,266,1.103,267,1.103,268,1.557,269,1.081,270,0.685,271,1.496,272,1.211,273,0.499,274,1.038,275,0.672,276,0.714,277,1.094,278,1.339,279,1.885,280,1.339,281,1.312,282,1.339,283,1.081,284,1.081,285,1.081,286,1.081,287,1.339,288,1.339,289,1.52,290,1.081,291,0.685,292,1.767,293,1.731,294,0.672,295,2.339,296,2.402,297,0.672,298,0.714,299,0.714,300,0.672,301,0.714,302,0.714,303,0.672,304,0.714,305,0.714,306,0.658,307,0.714,308,0.714,309,0.658,310,0.714,311,0.714,312,0.672,313,0.672,314,0.714,315,0.714,316,0.672,317,0.672,318,1.103,319,0.672,320,0.714,321,0.714,322,0.685,323,0.714,324,0.714,325,0.685,326,0.714,327,0.714,328,0.685,329,0.714,330,0.685,331,0.714,332,0.685,333,0.714,334,0.714,335,0.685,336,0.714,337,0.714,338,0.672,339,0.714,340,0.714,341,0.658,342,0.658,343,0.714,344,0.714,345,0.672,346,0.714,347,0.714,348,0.672,349,0.672,350,0.685,351,2.202,352,0.714,353,0.714,354,0.645,355,0.714,356,0.714,357,0.645,358,0.714,359,0.714,360,0.607,361,0.714,362,1.583,363,1.018,364,1.126,365,0.658,366,0.607,367,0.714,368,0.658,369,0.672,370,0.714,371,0.714,372,0.632,373,0.658,374,0.685,2056,2.655]],["title/injectables/SeasonService.html",[124,0.219,580,2.5]],["body/injectables/SeasonService.html",[3,0.131,4,0.131,5,0.12,7,0.364,8,0.665,12,0.568,13,0.008,14,0.995,15,0.194,22,0.131,32,2.13,35,2.745,46,0.131,56,0.143,61,3.176,66,1.498,67,2.107,69,2.163,89,2.444,106,3.437,107,1.334,111,1.157,116,1.917,121,0.005,122,0.007,123,0.005,124,0.385,126,1.445,129,1.23,130,1.181,139,0.863,185,2.107,186,0.715,218,1.956,228,1.731,277,0.896,292,1.281,293,1.255,319,2.347,368,2.276,380,1.83,386,2.036,387,2.036,389,1.83,397,2.968,517,2.972,580,4.385,613,4.312,614,3.676,787,5.05,788,4.922,789,4.126,793,4.126,845,3.96,850,3.139,859,4.773,1106,4.312,1142,6.051,2057,5.446,2058,8.552,2059,8.552,2060,8.001,2061,6.707,2062,8.001,2063,8.001,2064,6.707,2065,8.001,2066,8.001,2067,8.856,2068,6.707,2069,8.001,2070,7.095,2071,8.001,2072,6.707,2073,8.552,2074,8.001,2075,5.446,2076,5.947,2077,6.707,2078,6.707,2079,6.707,2080,6.707,2081,6.707,2082,6.707]],["title/components/SeasonchooserComponent.html",[19,0.435,480,1.226]],["body/components/SeasonchooserComponent.html",[3,0.114,4,0.114,5,0.104,7,0.315,8,0.609,12,0.565,13,0.008,15,0.19,18,1.846,19,0.765,20,2.03,22,0.114,34,3.459,35,2.379,41,1.846,42,3.244,43,2.573,46,0.114,51,2.463,52,2.366,54,1.854,56,0.124,57,1.5,58,1.781,61,2.159,62,4.165,66,1.372,67,1.531,69,2.03,75,2.265,80,2.132,88,3.64,121,0.005,122,0.006,123,0.005,129,1.344,130,1.291,139,0.877,146,2.352,186,0.681,209,1.278,215,0.755,218,1.988,221,0.66,228,1.5,236,0.833,243,0.755,250,0.833,273,0.693,277,0.979,368,2.233,376,2.095,377,1.697,378,1.697,379,1.697,380,1.677,386,1.745,387,1.745,389,1.677,390,2.052,406,2.485,415,1.33,416,2.139,417,2.139,418,1.697,419,2.46,420,1.697,421,1.697,422,1.531,423,1.697,424,1.563,425,1.697,426,1.563,427,1.628,428,2.46,429,1.563,430,1.697,431,1.531,432,2.139,433,1.531,434,1.697,435,1.563,436,1.697,437,1.563,438,1.628,439,1.563,440,2.36,441,1.563,442,1.697,443,1.563,444,1.697,445,1.563,446,1.697,447,1.563,448,1.531,449,2.139,450,1.563,451,1.531,452,1.697,453,1.563,454,1.697,455,1.563,456,1.697,457,1.563,458,1.697,459,1.595,460,1.697,461,1.563,462,1.697,463,1.563,464,1.697,465,1.563,466,1.697,467,1.563,468,1.697,469,1.531,470,1.697,471,1.5,472,1.697,473,1.531,474,1.697,475,1.563,476,1.697,477,1.563,478,1.697,479,1.697,480,2.265,481,1.697,482,1.47,483,1.697,484,1.531,485,1.697,486,1.531,487,1.697,488,1.563,489,1.697,490,1.531,491,1.697,492,1.563,493,1.628,494,1.697,495,1.697,496,1.732,498,1.97,517,2.722,580,5.04,950,4.945,953,4.509,1056,5.952,1060,6.844,1071,5.952,1131,7.118,1211,4.138,1281,3.738,1857,4.721,1879,4.721,2070,6.499,2083,5.155,2084,7.33,2085,8.028,2086,7.33,2087,8.028,2088,7.33,2089,8.028,2090,8.028,2091,7.33,2092,8.429,2093,7.33,2094,5.814,2095,5.814,2096,5.814,2097,5.814,2098,5.814,2099,5.814,2100,5.814,2101,5.814,2102,5.814,2103,5.814,2104,5.814,2105,5.814,2106,6.499,2107,5.814,2108,5.814,2109,5.814,2110,5.814,2111,8.028,2112,5.814,2113,7.33,2114,5.814,2115,5.814,2116,5.814,2117,7.33,2118,8.429]],["title/modules/SharedModule.html",[519,1.388,532,2.415]],["body/modules/SharedModule.html",[3,0.123,4,0.123,5,0.112,13,0.008,15,0.205,22,0.123,26,3.851,27,3.851,28,3.431,32,1.988,33,2.272,46,0.123,56,0.134,121,0.005,122,0.006,123,0.005,215,0.79,243,0.891,250,0.943,415,1.432,426,2.558,427,1.753,431,2.434,435,2.541,437,2.484,438,1.753,439,2.541,440,2.149,441,2.484,443,2.484,445,2.484,447,2.484,467,2.541,480,2.541,482,2.337,519,1.905,521,2.325,522,3.109,523,4.122,524,3.209,525,3.209,526,4.122,532,5.167,533,4.065,534,3.316,535,3.316,537,6.232,538,3.141,539,3.064,564,4.025,565,5.6,704,6.74,716,6.38,728,5.551,731,7.36,732,7.36,733,3.209,735,3.851,881,4.735,946,5.084,978,4.456,1051,5.084,1749,5.551,1750,5.551,1751,5.551,1752,5.551,1984,5.6,2119,5.551,2120,5.551,2121,6.261,2122,5.551,2123,6.261,2124,6.261,2125,6.261,2126,8.3,2127,8.3,2128,6.261,2129,6.261,2130,6.261]],["title/components/SnackbarComponent.html",[19,0.435,482,1.153]],["body/components/SnackbarComponent.html",[0,0.813,3,0.125,4,0.125,5,0.113,7,0.345,8,0.645,12,0.487,13,0.008,14,0.902,15,0.166,18,2.022,19,0.797,20,2.115,21,2.979,22,0.125,46,0.152,51,2.472,52,2.375,54,1.961,56,0.136,57,1.643,58,1.884,66,1.451,69,2.115,75,3.39,80,2.201,121,0.005,122,0.006,123,0.005,139,0.797,186,0.675,215,0.799,221,0.723,236,0.881,243,0.799,250,0.881,273,0.758,376,2.216,377,1.858,378,1.858,379,1.858,380,1.774,386,1.516,387,1.516,389,1.456,390,1.783,397,2.818,415,1.456,416,2.263,417,2.263,418,1.858,419,2.54,420,1.858,421,1.858,422,1.677,423,1.858,424,1.711,425,1.858,426,1.711,427,1.783,428,2.54,429,1.711,430,1.858,431,1.677,432,2.263,433,1.677,434,1.858,435,1.711,436,1.858,437,1.711,438,1.783,439,1.711,440,2.437,441,1.711,442,1.858,443,1.711,444,1.858,445,1.711,446,1.858,447,1.711,448,1.677,449,2.263,450,1.711,451,1.677,452,1.858,453,1.711,454,1.858,455,1.711,456,1.858,457,1.711,458,1.858,459,1.746,460,1.858,461,1.711,462,1.858,463,1.711,464,1.858,465,1.711,466,1.858,467,1.711,468,1.858,469,1.677,470,1.858,471,1.643,472,1.858,473,1.677,474,1.858,475,1.711,476,1.858,477,1.711,478,1.858,479,1.858,480,1.711,481,1.858,482,2.201,483,1.858,484,1.677,485,1.858,486,1.677,487,1.858,488,1.711,489,1.858,490,1.677,491,1.858,492,1.711,493,1.783,494,1.858,495,1.858,496,1.897,498,2.084,581,5.519,1093,5.645,1342,4.295,1535,6.747,1536,5.17,1537,5.17,1538,5.645,1539,6.875,1540,7.414,1541,6.875,2131,6.367,2132,6.367,2133,6.367,2134,7.754,2135,7.754]],["title/injectables/StartSeasonGQL.html",[124,0.219,332,1.177]],["body/injectables/StartSeasonGQL.html",[0,0.536,3,0.052,4,0.052,5,0.048,7,0.145,8,0.349,9,1.434,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.61,46,0.192,48,1.041,49,1.563,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.843,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.661,126,0.574,127,0.661,128,2.396,129,0.489,130,0.469,131,2.385,132,2.521,133,1.586,134,2.162,135,2.135,136,1.894,137,1.834,138,1.586,139,0.254,141,2.418,142,0.661,143,0.61,144,1.761,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.702,153,0.702,154,0.688,155,2.429,156,1.129,157,2.012,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.761,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.012,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.434,205,2.012,206,1.949,207,1.554,208,1.554,209,1.674,210,1.106,211,0.716,212,1.554,213,1.797,214,1.084,215,0.784,216,0.961,217,0.635,218,1.939,219,0.702,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.342,226,0.905,227,0.702,228,1.084,229,1.725,230,0.702,231,1.084,232,1.761,233,0.702,234,1.856,235,0.702,236,0.841,237,1.369,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.688,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.342,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.434,269,1.084,270,0.688,271,1.499,272,1.214,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.342,279,1.834,280,1.342,281,1.315,282,1.342,283,1.084,284,1.084,285,1.084,286,1.084,287,1.342,288,1.342,289,1.342,290,1.084,291,0.688,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.661,307,0.716,308,0.716,309,0.661,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.688,323,0.716,324,0.716,325,0.688,326,0.716,327,0.716,328,0.688,329,0.716,330,0.688,331,0.716,332,1.084,333,1.129,334,1.129,335,0.688,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.661,342,0.661,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.688,351,2.204,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.61,361,0.716,362,1.397,363,0.647,364,0.716,365,0.661,366,0.61,367,0.716,368,0.661,369,0.674,370,0.716,371,0.716,372,0.635,373,0.661,374,0.688,2136,2.665]],["title/injectables/SubmitResultGQL.html",[124,0.219,294,1.153]],["body/injectables/SubmitResultGQL.html",[0,0.535,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.432,11,1.727,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.646,38,1.018,39,0.62,40,0.608,46,0.192,48,1.039,49,1.561,50,1.039,56,0.198,59,1.558,64,1.41,94,1.49,96,1.87,100,1.49,102,0.672,104,0.672,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.659,126,0.573,127,0.659,128,2.395,129,0.487,130,0.468,131,2.385,132,2.521,133,1.584,134,2.161,135,2.134,136,1.892,137,1.832,138,1.831,139,0.253,141,2.417,142,0.659,143,0.608,144,1.759,145,1.127,146,1.082,147,1.104,148,1.104,149,1.104,150,1.039,151,1.039,152,0.7,153,0.7,154,0.686,155,2.429,156,1.395,157,2.115,158,1.924,159,1.924,160,2.295,161,1.367,162,1.104,163,1.759,164,1.104,165,1.97,166,1.104,167,0.714,168,2.1,169,1.521,170,0.714,171,0.714,172,1.082,173,0.714,174,1.584,175,1.552,176,1.082,177,1.584,178,2.162,179,2.162,180,2.01,181,1.584,182,1.723,183,1.552,184,1.552,185,1.104,186,0.712,187,1.127,188,1.127,189,1.395,190,1.584,191,1.395,192,1.395,193,1.127,194,1.127,195,1.782,196,0.714,197,1.552,198,1.082,199,1.552,200,1.104,201,1.127,202,1.127,203,1.552,204,1.432,205,2.01,206,1.947,207,1.552,208,1.552,209,1.672,210,1.104,211,0.714,212,1.552,213,1.795,214,1.082,215,0.783,216,0.959,217,0.633,218,1.938,219,0.7,220,0.672,221,0.918,222,1.689,223,1.018,224,1.039,225,1.34,226,0.903,227,0.7,228,1.082,229,1.723,230,0.7,231,1.082,232,1.759,233,0.7,234,1.855,235,0.7,236,0.84,237,1.367,238,1.06,239,1.655,240,2.18,241,1.104,242,1.104,243,0.783,244,1.104,245,1.104,246,1.623,247,1.527,248,1.104,249,1.104,250,0.918,251,1.018,252,1.552,253,1.104,254,0.686,255,1.082,256,1.082,257,1.313,258,1.104,259,1.104,260,1.34,261,0.714,262,1.104,263,1.104,264,1.104,265,1.104,266,1.104,267,1.104,268,1.432,269,1.082,270,0.686,271,1.497,272,1.211,273,0.499,274,1.039,275,0.672,276,0.714,277,1.094,278,1.34,279,1.832,280,1.34,281,1.313,282,1.34,283,1.082,284,1.082,285,1.082,286,1.082,287,1.34,288,1.34,289,1.34,290,1.082,291,0.686,292,1.767,293,1.732,294,1.06,295,2.34,296,2.403,297,0.672,298,0.714,299,0.714,300,0.672,301,0.714,302,0.714,303,0.672,304,0.714,305,0.714,306,0.659,307,0.714,308,0.714,309,0.659,310,0.714,311,0.714,312,0.672,313,0.672,314,0.714,315,0.714,316,0.672,317,0.672,318,1.104,319,0.672,320,0.714,321,0.714,322,0.686,323,0.714,324,0.714,325,0.686,326,0.714,327,0.714,328,0.686,329,0.714,330,0.686,331,0.714,332,0.686,333,0.714,334,0.714,335,0.686,336,0.714,337,0.714,338,0.672,339,0.714,340,0.714,341,0.659,342,0.659,343,0.714,344,0.714,345,0.672,346,0.714,347,0.714,348,0.672,349,0.672,350,0.686,351,2.202,352,0.714,353,0.714,354,0.646,355,0.714,356,0.714,357,0.646,358,0.714,359,0.714,360,0.608,361,0.714,362,1.395,363,0.646,364,0.714,365,0.659,366,0.608,367,0.714,368,0.659,369,0.672,370,0.714,371,0.714,372,0.633,373,0.659,374,0.686,2137,2.658]],["title/components/TableComponent.html",[19,0.435,484,1.201]],["body/components/TableComponent.html",[3,0.111,4,0.111,5,0.101,7,0.307,8,0.6,12,0.562,13,0.008,15,0.194,18,1.8,19,0.756,20,2.006,22,0.111,29,4.083,30,2.904,31,3.575,32,1.8,33,2.056,34,3.418,35,2.319,36,1.66,41,1.8,42,2.508,43,2.508,46,0.111,49,1.675,51,2.46,52,2.363,54,1.824,56,0.121,57,1.462,58,1.752,66,1.35,67,1.899,69,2.315,80,2.112,111,0.977,116,2.267,121,0.005,122,0.006,123,0.005,139,0.873,143,1.296,186,0.674,215,0.743,221,0.98,222,1.404,223,2.095,236,0.819,243,0.743,250,0.819,268,1.377,273,0.675,277,0.757,366,1.91,376,2.061,377,1.654,378,1.654,379,1.654,380,1.65,386,1.717,387,1.717,389,1.815,390,2.019,406,2.445,415,1.296,416,2.105,417,2.105,418,1.654,419,2.437,420,1.654,421,1.654,422,1.492,423,1.654,424,1.523,425,1.654,426,1.523,427,1.587,428,2.437,429,1.523,430,1.654,431,1.492,432,2.105,433,1.492,434,1.654,435,1.523,436,1.654,437,1.523,438,1.587,439,1.523,440,2.338,441,1.523,442,1.654,443,1.523,444,1.654,445,1.523,446,1.654,447,1.523,448,1.492,449,2.105,450,1.523,451,1.492,452,1.654,453,1.523,454,1.654,455,1.523,456,1.654,457,1.523,458,1.654,459,1.554,460,1.654,461,1.523,462,1.654,463,1.523,464,1.654,465,1.523,466,1.654,467,1.523,468,1.654,469,1.492,470,1.654,471,1.462,472,1.654,473,1.492,474,1.654,475,1.523,476,1.654,477,1.523,478,1.654,479,1.654,480,1.523,481,1.654,482,1.433,483,1.654,484,2.199,485,1.654,486,1.492,487,1.654,488,1.523,489,1.654,490,1.492,491,1.654,492,1.523,493,1.587,494,1.654,495,1.654,496,1.689,498,1.938,517,2.104,580,5.017,581,6.137,587,7.002,640,4.601,642,3.823,671,3.22,761,5.454,850,3.375,869,3.486,1386,5.999,1572,5.024,1602,4.033,1612,5.024,1614,5.024,1857,4.601,1879,4.601,2106,6.394,2138,5.024,2139,7.933,2140,7.212,2141,7.212,2142,8.35,2143,7.212,2144,7.212,2145,5.666,2146,5.666,2147,5.666,2148,5.666,2149,5.666,2150,5.666,2151,5.666,2152,5.666,2153,5.666,2154,5.666,2155,5.666,2156,5.666,2157,5.666,2158,5.666,2159,5.666,2160,5.666,2161,7.212,2162,7.212,2163,7.212,2164,7.212,2165,7.212,2166,7.212,2167,7.212,2168,7.212,2169,7.212,2170,7.212,2171,7.212,2172,7.212,2173,8.35,2174,8.35,2175,7.212,2176,7.212,2177,7.212,2178,7.212]],["title/modules/TableModule.html",[519,1.388,2179,3.449]],["body/modules/TableModule.html",[3,0.141,4,0.141,5,0.128,13,0.008,15,0.197,22,0.141,46,0.141,56,0.154,121,0.006,122,0.007,123,0.006,415,1.647,484,2.457,519,2.191,521,2.674,522,3.576,523,4.375,524,3.69,525,3.69,526,3.576,532,4.941,533,4.418,534,3.813,535,3.813,538,3.414,539,3.33,541,4.251,542,4.629,735,4.429,761,5.445,1984,5.628,2179,7.226,2180,6.383,2181,6.383,2182,6.383,2183,6.64,2184,7.199,2185,6.383]],["title/modules/TableRoutingModule.html",[519,1.388,2183,3.246]],["body/modules/TableRoutingModule.html",[3,0.145,4,0.145,5,0.132,13,0.008,15,0.19,19,0.704,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.986,484,2.229,515,3.558,521,2.743,538,3.022,539,3.379,567,4.36,568,4.713,569,4.36,571,4.196,572,4.543,2183,6.025,2185,6.548,2186,7.385]],["title/interfaces/TeamIdPair.html",[0,0.582,38,1.108]],["body/interfaces/TeamIdPair.html",[0,0.537,2,1.285,3,0.052,4,0.052,5,0.048,7,0.145,8,0.349,9,1.434,11,1.728,12,0.609,13,0.008,14,1.135,15,0.111,22,0.052,36,1.736,37,0.648,38,1.264,39,0.622,40,0.61,46,0.192,48,1.042,49,1.563,50,1.042,56,0.198,59,1.561,64,1.412,94,1.493,96,1.872,100,1.493,102,1.493,104,1.493,107,1.843,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.661,127,0.661,128,2.388,131,2.383,132,2.52,133,1.587,134,2.162,135,2.135,136,1.894,137,1.835,138,1.587,141,2.418,142,0.661,143,0.61,144,1.761,145,1.13,146,1.085,147,1.107,148,1.107,149,1.107,150,1.042,151,1.042,152,0.702,153,0.702,154,0.688,155,2.429,156,1.13,157,2.012,158,1.726,159,1.726,160,2.295,161,1.107,162,1.107,163,1.761,164,1.107,165,1.972,166,1.107,167,0.717,168,2.101,169,1.524,170,0.717,171,0.717,172,1.085,173,0.717,174,1.587,175,1.555,176,1.085,177,1.587,178,2.164,179,2.164,180,2.012,181,1.587,182,1.726,183,1.555,184,1.555,185,1.107,186,0.713,187,1.13,188,1.13,189,1.398,190,1.587,191,1.398,192,1.398,193,1.13,194,1.13,195,1.784,196,0.717,197,1.555,198,1.085,199,1.555,200,1.107,201,1.13,202,1.13,203,1.555,204,1.434,205,2.012,206,1.949,207,1.555,208,1.555,209,1.674,210,1.107,211,0.717,212,1.555,213,1.797,214,1.085,215,0.784,216,0.962,217,0.635,218,1.939,219,0.702,220,0.675,221,0.918,222,1.692,223,1.021,224,1.042,225,1.343,226,0.906,227,0.702,228,1.085,229,1.726,230,0.702,231,1.085,232,1.761,233,0.702,234,1.856,235,0.702,236,0.841,237,1.37,238,1.063,239,1.658,240,2.181,241,1.107,242,1.107,243,0.784,244,1.107,245,1.107,246,1.625,247,1.53,248,1.107,249,1.107,250,0.918,251,1.021,252,1.555,253,1.107,254,0.688,255,1.085,256,1.085,257,1.316,258,1.107,259,1.107,260,1.343,261,0.717,262,1.107,263,1.107,264,1.107,265,1.107,266,1.107,267,1.107,268,1.434,269,1.085,270,0.688,271,1.499,272,1.214,273,0.501,274,1.042,275,0.675,276,0.717,277,1.095,278,1.343,279,1.835,280,1.343,281,1.316,282,1.343,283,1.085,284,1.085,285,1.085,286,1.085,287,1.343,288,1.343,289,1.343,290,1.085,291,0.688,292,1.768,293,1.732,294,0.675,295,2.34,296,2.404,297,0.675,298,0.717,299,0.717,300,0.675,301,0.717,302,0.717,303,0.675,304,0.717,305,0.717,306,0.661,307,0.717,308,0.717,309,0.661,310,0.717,311,0.717,312,0.675,313,0.675,314,0.717,315,0.717,316,0.675,317,0.675,318,1.107,319,0.675,320,0.717,321,0.717,322,0.688,323,0.717,324,0.717,325,0.688,326,0.717,327,0.717,328,0.688,329,0.717,330,0.688,331,0.717,332,0.688,333,0.717,334,0.717,335,0.688,336,0.717,337,0.717,338,0.675,339,0.717,340,0.717,341,0.661,342,0.661,343,0.717,344,0.717,345,0.675,346,0.717,347,0.717,348,0.675,349,0.675,350,0.688,351,2.204,352,0.717,353,0.717,354,0.648,355,0.717,356,0.717,357,0.648,358,0.717,359,0.717,360,0.61,361,0.717,362,1.398,363,0.648,364,0.717,365,0.661,366,0.61,367,0.717,368,0.661,369,0.675,370,0.717,371,0.717,372,0.635,373,0.661,374,0.688]],["title/injectables/TeamService.html",[23,2.415,124,0.219]],["body/injectables/TeamService.html",[3,0.124,4,0.124,5,0.113,7,0.344,8,0.643,12,0.545,13,0.008,14,1.092,15,0.191,22,0.124,23,4.601,34,3.595,35,2.592,36,1.842,42,2.803,43,2.803,46,0.152,56,0.165,59,2.027,61,3.098,66,1.447,67,2.197,75,3.011,88,4.315,89,2.622,91,2.298,92,2.101,106,3.246,107,1.259,111,1.439,112,2.803,115,2.246,116,2.209,121,0.006,122,0.006,123,0.005,124,0.372,126,1.364,129,1.162,130,1.115,135,1.57,139,0.828,160,1.539,186,0.72,195,1.768,198,1.995,199,1.668,240,1.878,277,0.846,279,2.068,292,1.21,293,1.185,338,2.197,342,2.274,369,2.32,380,1.768,386,1.986,387,1.986,389,1.909,438,2.164,517,2.352,614,3.471,787,5.13,788,4.755,789,3.896,793,3.896,823,5.845,845,3.74,859,4.507,929,3.471,1106,4.072,1142,5.845,1281,4.969,1641,6.853,1644,6.853,1646,7.898,1838,5.615,1839,5.615,1840,6.853,1842,5.615,1898,6.276,1899,6.276,2049,7.898,2187,5.615,2188,6.333,2189,7.729,2190,7.729,2191,7.729,2192,7.729,2193,6.333,2194,6.333,2195,6.333,2196,7.729,2197,6.333,2198,7.729,2199,7.729,2200,7.729,2201,6.333,2202,7.729,2203,7.729,2204,7.729,2205,6.333,2206,6.333,2207,6.333,2208,6.333,2209,6.333,2210,6.333,2211,6.333,2212,6.333,2213,7.729]],["title/components/TeamadminComponent.html",[19,0.435,486,1.201]],["body/components/TeamadminComponent.html",[3,0.117,4,0.117,5,0.107,7,0.325,8,0.621,12,0.55,13,0.008,14,0.947,15,0.191,19,0.776,20,2.058,22,0.117,23,4.928,24,3.851,31,3.715,32,1.902,33,2.174,41,1.902,44,3.588,45,2.725,46,0.117,51,2.466,52,2.369,54,1.889,56,0.128,57,1.546,58,1.814,66,1.398,67,2.143,69,2.338,72,3.988,80,2.155,89,2.326,91,2.174,92,1.987,106,3.07,107,1.191,112,2.651,115,2.124,116,2.135,121,0.005,122,0.006,123,0.005,129,1.099,130,1.055,135,1.485,139,0.864,186,0.688,197,2.143,215,0.769,221,0.681,236,0.996,243,0.769,250,1.03,251,1.977,273,0.714,341,2.112,372,2.029,376,2.135,377,1.748,378,1.748,379,1.748,380,1.709,386,1.778,387,1.778,389,1.709,390,1.677,415,1.37,416,2.18,417,2.18,418,1.748,419,2.486,420,1.748,421,1.748,422,1.577,423,1.748,424,1.61,425,1.748,426,1.61,427,1.677,428,2.486,429,1.61,430,1.748,431,1.577,432,2.18,433,1.577,434,1.748,435,1.61,436,1.748,437,1.61,438,1.677,439,1.61,440,2.386,441,1.61,442,1.748,443,1.61,444,1.748,445,1.61,446,1.748,447,1.61,448,1.577,449,2.18,450,1.61,451,1.577,452,1.748,453,1.61,454,1.748,455,1.61,456,1.748,457,1.61,458,1.748,459,1.643,460,1.748,461,1.61,462,1.748,463,1.61,464,1.748,465,1.61,466,1.748,467,1.61,468,1.748,469,1.577,470,1.748,471,1.546,472,1.748,473,1.577,474,1.748,475,1.61,476,1.748,477,1.61,478,1.748,479,1.748,480,1.61,481,1.748,482,1.515,483,1.748,484,1.577,485,1.748,486,2.244,487,1.748,488,1.61,489,1.748,490,1.577,491,1.748,492,1.61,493,1.677,494,1.748,495,1.748,496,1.785,498,2.007,510,3.987,512,4.805,516,3.537,771,6.064,812,6.064,823,5.648,2214,5.311,2215,8.138,2216,7.468,2217,7.468,2218,5.99,2219,7.468,2220,5.99,2221,7.468,2222,5.99,2223,5.99,2224,5.99,2225,5.99,2226,7.468,2227,5.99,2228,5.99,2229,5.99,2230,5.99,2231,7.468]],["title/guards/TeamadminGuard.html",[503,3.703,755,3.449]],["body/guards/TeamadminGuard.html",[3,0.139,4,0.139,5,0.127,7,0.385,12,0.519,13,0.008,15,0.193,22,0.139,34,3.774,35,2.906,46,0.139,56,0.152,58,1.725,66,1.329,121,0.006,122,0.007,123,0.006,124,0.398,139,0.835,186,0.668,256,2.26,292,1.356,293,1.329,380,1.893,386,1.971,387,1.971,389,1.893,505,5.767,507,7.461,508,7.553,509,5.055,510,4.222,512,4.887,515,3.422,516,4.193,517,3.074,755,6.259,781,5.055,787,4.887,850,3.873,1937,7.338,2232,6.297,2233,7.102,2234,7.102,2235,9.022,2236,9.022,2237,7.102,2238,7.102,2239,8.276]],["title/modules/TeamadminModule.html",[519,1.388,2240,3.449]],["body/modules/TeamadminModule.html",[3,0.141,4,0.141,5,0.128,13,0.008,15,0.197,22,0.141,46,0.141,56,0.154,121,0.006,122,0.007,123,0.006,415,1.649,486,2.457,519,2.194,521,2.677,522,3.58,523,4.377,524,3.694,525,3.694,526,3.58,532,4.942,533,4.421,534,3.817,535,3.817,538,3.416,539,3.332,541,4.256,542,4.634,735,4.434,771,5.853,1984,5.632,2240,7.227,2241,6.391,2242,6.391,2243,6.391,2244,6.642,2245,7.208,2246,6.391]],["title/modules/TeamadminRoutingModule.html",[519,1.388,2244,3.246]],["body/modules/TeamadminRoutingModule.html",[3,0.144,4,0.144,5,0.131,13,0.008,15,0.195,19,0.701,22,0.144,46,0.144,56,0.157,121,0.006,122,0.007,123,0.006,277,0.982,486,2.224,515,3.543,521,2.731,523,3.652,538,3.009,539,3.371,567,4.342,568,4.705,569,4.342,571,4.178,572,4.523,735,4.523,1984,4.961,2244,6.01,2246,6.52,2247,7.353]],["title/components/TeamsComponent.html",[19,0.435,488,1.226]],["body/components/TeamsComponent.html",[3,0.125,4,0.125,5,0.114,7,0.346,8,0.645,12,0.487,13,0.008,15,0.166,19,0.797,20,2.115,22,0.125,23,4.945,46,0.125,51,2.472,52,2.375,54,1.962,56,0.136,57,1.644,58,1.884,66,1.452,69,2.115,80,2.201,89,2.391,121,0.005,122,0.006,123,0.005,139,0.797,186,0.676,195,1.774,215,0.799,221,0.724,236,0.881,243,0.799,250,0.881,273,0.759,376,2.217,377,1.859,378,1.859,379,1.859,380,1.774,386,1.517,387,1.517,389,1.457,406,2.951,410,4.58,415,1.457,416,2.264,417,2.264,418,1.859,419,2.54,420,1.859,421,1.859,422,1.678,423,1.859,424,1.712,425,1.859,426,1.712,427,1.784,428,2.54,429,1.712,430,1.859,431,1.678,432,2.264,433,1.678,434,1.859,435,1.712,436,1.859,437,1.712,438,1.784,439,1.712,440,2.437,441,1.712,442,1.859,443,1.712,444,1.859,445,1.712,446,1.859,447,1.712,448,1.678,449,2.264,450,1.712,451,1.678,452,1.859,453,1.712,454,1.859,455,1.712,456,1.859,457,1.712,458,1.859,459,1.747,460,1.859,461,1.712,462,1.859,463,1.712,464,1.859,465,1.712,466,1.859,467,1.712,468,1.859,469,1.678,470,1.859,471,1.644,472,1.859,473,1.678,474,1.859,475,1.712,476,1.859,477,1.712,478,1.859,479,1.859,480,1.712,481,1.859,482,1.611,483,1.859,484,1.678,485,1.859,486,1.678,487,1.859,488,2.339,489,1.859,490,1.678,491,1.859,492,1.712,493,1.784,494,1.859,495,1.859,496,1.898,498,2.085,960,6.299,1126,5.172,1140,5.648,2248,5.648,2249,8.364,2250,7.757,2251,6.37,2252,6.37,2253,6.37,2254,7.757]],["title/injectables/TeamsGQL.html",[124,0.219,338,1.153]],["body/injectables/TeamsGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.609,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.843,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.521,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.722,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.856,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.083,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,1.062,339,1.128,340,1.128,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,0.716,371,0.716,372,0.634,373,0.66,374,0.687,2255,2.662]],["title/components/TournamentComponent.html",[19,0.435,490,1.201]],["body/components/TournamentComponent.html",[3,0.102,4,0.102,5,0.093,7,0.283,8,0.568,9,2.226,10,5.427,12,0.541,13,0.008,14,0.977,15,0.184,19,0.727,20,1.928,22,0.102,29,3.989,30,2.673,32,1.656,34,3.62,35,2.134,39,1.889,40,1.851,41,1.656,42,3.375,43,2.308,46,0.134,51,2.451,52,2.354,54,1.729,56,0.112,57,1.346,58,1.661,61,1.937,62,2.964,66,1.279,67,1.8,69,1.928,73,5.427,75,2.663,80,2.047,88,4.605,111,1.179,121,0.004,122,0.006,123,0.004,139,0.859,143,1.851,186,0.654,215,0.785,221,0.592,231,1.346,234,2.053,236,0.777,243,0.704,250,0.777,273,0.621,277,0.696,376,1.954,377,1.522,378,1.522,379,1.522,380,1.564,386,1.628,387,1.628,389,1.851,390,2.266,397,2.308,406,3.202,415,1.193,416,1.995,417,1.995,418,1.522,419,2.362,420,1.522,421,1.522,422,1.373,423,1.522,424,1.402,425,1.522,426,1.402,427,1.46,428,2.362,429,1.402,430,1.522,431,1.373,432,1.995,433,1.373,434,1.522,435,1.402,436,1.522,437,1.402,438,1.46,439,1.402,440,2.266,441,1.402,442,1.522,443,1.402,444,1.522,445,1.402,446,1.522,447,1.402,448,1.373,449,1.995,450,1.402,451,1.373,452,1.522,453,1.402,454,1.522,455,1.402,456,1.522,457,1.402,458,1.522,459,1.431,460,1.522,461,1.402,462,1.522,463,1.402,464,1.522,465,1.402,466,1.522,467,1.402,468,1.522,469,1.373,470,1.522,471,1.346,472,1.522,473,1.373,474,1.522,475,1.402,476,1.522,477,1.402,478,1.522,479,1.522,480,1.402,481,1.522,482,1.319,483,1.522,484,1.373,485,1.522,486,1.373,487,1.522,488,1.402,489,1.522,490,2.131,491,1.522,492,1.402,493,1.46,494,1.522,495,1.522,496,1.554,498,1.837,605,6.061,613,3.353,614,2.858,615,3.944,646,6.761,671,4.774,873,5.169,1281,4.902,1401,3.712,1602,3.712,1666,6.761,1691,4.624,1693,4.624,1696,6.061,1709,6.061,1730,5.55,1765,7.644,1766,7.449,1864,6.061,1898,5.55,1899,5.55,1903,4.624,2256,4.235,2257,7.625,2258,6.835,2259,8.092,2260,8.092,2261,5.215,2262,7.625,2263,6.835,2264,5.215,2265,5.215,2266,5.215,2267,5.215,2268,5.215,2269,5.215,2270,5.215,2271,4.624,2272,5.215,2273,5.215,2274,5.215,2275,6.835,2276,5.215,2277,5.215,2278,5.215,2279,5.215,2280,5.215,2281,5.215,2282,8.401,2283,5.215,2284,5.215,2285,5.215,2286,5.215,2287,5.215,2288,6.835,2289,5.215,2290,5.215,2291,6.835,2292,5.215,2293,5.215,2294,5.215,2295,5.215,2296,6.835,2297,6.835,2298,6.835,2299,6.835,2300,8.912,2301,6.835,2302,6.835]],["title/injectables/TournamentGQL.html",[40,1.043,124,0.219]],["body/injectables/TournamentGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.735,37,0.647,38,1.02,39,0.621,40,0.96,46,0.192,48,1.04,49,1.562,50,1.04,56,0.198,59,1.559,64,1.411,94,1.492,96,1.871,100,1.492,102,0.673,104,0.673,107,1.846,110,1.954,111,1.635,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.488,130,0.469,131,2.385,132,2.52,133,1.585,134,2.161,135,2.135,136,1.893,137,1.833,138,1.585,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.128,146,1.083,147,1.105,148,1.105,149,1.105,150,1.04,151,1.04,152,0.701,153,0.701,154,0.687,155,2.429,156,1.128,157,2.011,158,1.725,159,1.725,160,2.295,161,1.105,162,1.105,163,1.76,164,1.105,165,1.971,166,1.105,167,0.716,168,2.101,169,1.522,170,0.716,171,0.716,172,1.083,173,0.716,174,1.585,175,1.553,176,1.083,177,1.585,178,2.163,179,2.163,180,2.011,181,1.585,182,1.725,183,1.553,184,1.553,185,1.105,186,0.713,187,1.128,188,1.128,189,1.397,190,1.585,191,1.397,192,1.397,193,1.128,194,1.128,195,1.783,196,0.716,197,1.553,198,1.083,199,1.553,200,1.105,201,1.128,202,1.128,203,1.553,204,1.433,205,2.011,206,1.948,207,1.553,208,1.553,209,1.673,210,1.105,211,0.716,212,1.553,213,1.796,214,1.083,215,0.784,216,0.96,217,0.634,218,1.938,219,0.701,220,0.673,221,0.918,222,1.69,223,1.02,224,1.04,225,1.341,226,0.904,227,0.701,228,1.083,229,1.725,230,0.701,231,1.083,232,1.76,233,0.701,234,1.892,235,0.701,236,0.84,237,1.369,238,1.062,239,1.656,240,2.18,241,1.105,242,1.105,243,0.784,244,1.105,245,1.105,246,1.624,247,1.528,248,1.105,249,1.105,250,0.918,251,1.02,252,1.553,253,1.105,254,0.687,255,1.083,256,1.083,257,1.314,258,1.105,259,1.105,260,1.341,261,0.716,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.433,269,1.083,270,0.687,271,1.498,272,1.213,273,0.5,274,1.04,275,0.673,276,0.716,277,1.095,278,1.341,279,1.833,280,1.341,281,1.314,282,1.341,283,1.083,284,1.083,285,1.083,286,1.341,287,1.341,288,1.341,289,1.341,290,1.083,291,0.687,292,1.767,293,1.732,294,0.673,295,2.34,296,2.403,297,0.673,298,0.716,299,0.716,300,0.673,301,0.716,302,0.716,303,0.673,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.673,313,0.673,314,0.716,315,0.716,316,0.673,317,0.673,318,1.105,319,0.673,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.673,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.673,346,0.716,347,0.716,348,0.673,349,0.673,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.673,370,1.128,371,1.128,372,0.634,373,0.66,374,0.687,2303,2.662]],["title/modules/TournamentModule.html",[519,1.388,2304,3.449]],["body/modules/TournamentModule.html",[3,0.141,4,0.141,5,0.128,13,0.008,15,0.197,22,0.141,46,0.141,56,0.154,121,0.006,122,0.007,123,0.006,234,1.716,415,1.649,490,2.457,519,2.194,521,2.677,522,3.58,523,4.377,524,3.694,525,3.694,526,3.58,532,4.942,533,4.421,534,3.817,535,3.817,538,3.416,539,3.332,541,4.256,542,4.634,735,4.434,1984,5.632,2304,7.227,2305,6.391,2306,6.391,2307,6.391,2308,6.642,2309,7.208,2310,6.391]],["title/modules/TournamentRoutingModule.html",[519,1.388,2308,3.246]],["body/modules/TournamentRoutingModule.html",[3,0.145,4,0.145,5,0.131,13,0.008,15,0.19,19,0.703,22,0.145,46,0.145,56,0.158,121,0.006,122,0.007,123,0.006,277,0.985,490,2.228,515,3.554,521,2.739,523,3.663,538,3.018,539,3.377,567,4.355,568,4.71,569,4.355,571,4.191,572,4.537,2308,6.021,2310,6.54,2311,7.376]],["title/injectables/UpdatePitchContactGQL.html",[124,0.219,316,1.153]],["body/injectables/UpdatePitchContactGQL.html",[0,0.534,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.43,11,1.727,12,0.609,13,0.008,14,1.135,15,0.111,22,0.052,36,1.734,37,0.645,38,1.017,39,0.619,40,0.607,46,0.192,48,1.038,49,1.56,50,1.038,56,0.198,59,1.557,64,1.408,94,1.489,96,1.868,100,1.489,102,0.671,104,0.671,107,1.842,110,1.953,111,1.633,121,0.002,122,0.003,123,0.002,124,0.446,125,0.658,126,0.572,127,0.658,128,2.395,129,0.487,130,0.467,131,2.385,132,2.521,133,1.582,134,2.16,135,2.133,136,1.891,137,1.831,138,1.582,139,0.253,141,2.417,142,0.658,143,0.607,144,1.757,145,1.125,146,1.08,147,1.102,148,1.102,149,1.102,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.125,157,2.009,158,1.722,159,1.722,160,2.295,161,1.102,162,1.102,163,1.757,164,1.102,165,2.072,166,1.102,167,0.713,168,2.128,169,1.519,170,0.713,171,0.713,172,1.08,173,0.713,174,1.582,175,1.55,176,1.08,177,1.83,178,2.196,179,2.196,180,2.114,181,1.582,182,1.722,183,1.55,184,1.55,185,1.102,186,0.712,187,1.125,188,1.125,189,1.393,190,1.582,191,1.393,192,1.393,193,1.125,194,1.125,195,1.781,196,0.713,197,1.55,198,1.08,199,1.55,200,1.102,201,1.125,202,1.125,203,1.55,204,1.43,205,2.009,206,1.946,207,1.55,208,1.55,209,1.671,210,1.102,211,0.713,212,1.55,213,1.793,214,1.08,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.671,221,0.917,222,1.688,223,1.017,224,1.038,225,1.338,226,0.902,227,0.699,228,1.08,229,1.722,230,0.699,231,1.08,232,1.757,233,0.699,234,1.854,235,0.699,236,0.839,237,1.365,238,1.059,239,1.654,240,2.179,241,1.102,242,1.102,243,0.783,244,1.102,245,1.102,246,1.621,247,1.526,248,1.102,249,1.102,250,0.917,251,1.017,252,1.55,253,1.102,254,0.685,255,1.08,256,1.08,257,1.311,258,1.102,259,1.102,260,1.338,261,0.713,262,1.102,263,1.102,264,1.102,265,1.102,266,1.102,267,1.102,268,1.43,269,1.08,270,0.685,271,1.495,272,1.21,273,0.499,274,1.038,275,0.671,276,0.713,277,1.094,278,1.338,279,1.831,280,1.338,281,1.311,282,1.338,283,1.08,284,1.08,285,1.08,286,1.08,287,1.338,288,1.338,289,1.338,290,1.08,291,0.685,292,1.767,293,1.731,294,0.671,295,2.339,296,2.402,297,0.671,298,0.713,299,0.713,300,0.671,301,0.713,302,0.713,303,0.671,304,0.713,305,0.713,306,0.658,307,0.713,308,0.713,309,0.658,310,0.713,311,0.713,312,0.671,313,0.671,314,0.713,315,0.713,316,1.059,317,0.671,318,1.102,319,0.671,320,0.713,321,0.713,322,0.685,323,0.713,324,0.713,325,0.685,326,0.713,327,0.713,328,0.685,329,0.713,330,0.685,331,0.713,332,0.685,333,0.713,334,0.713,335,0.685,336,0.713,337,0.713,338,0.671,339,0.713,340,0.713,341,0.658,342,0.658,343,0.713,344,0.713,345,0.671,346,0.713,347,0.713,348,0.671,349,0.671,350,0.685,351,2.201,352,0.713,353,0.713,354,0.645,355,0.713,356,0.713,357,0.645,358,0.713,359,0.713,360,0.607,361,0.713,362,1.393,363,0.645,364,0.713,365,0.658,366,0.607,367,0.713,368,0.658,369,0.671,370,0.713,371,0.713,372,0.632,373,0.658,374,0.685,2312,2.653]],["title/injectables/UpdateTeamContactGQL.html",[124,0.219,341,1.13]],["body/injectables/UpdateTeamContactGQL.html",[0,0.534,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.43,11,1.727,12,0.609,13,0.008,14,1.135,15,0.111,22,0.052,36,1.734,37,0.645,38,1.017,39,0.619,40,0.607,46,0.192,48,1.038,49,1.56,50,1.038,56,0.198,59,1.557,64,1.408,94,1.489,96,1.868,100,1.489,102,0.671,104,0.671,107,1.842,110,1.953,111,1.633,121,0.002,122,0.003,123,0.002,124,0.446,125,0.658,126,0.572,127,0.658,128,2.395,129,0.487,130,0.467,131,2.385,132,2.521,133,1.582,134,2.16,135,2.174,136,1.891,137,1.831,138,1.582,139,0.253,141,2.417,142,0.658,143,0.607,144,1.757,145,1.125,146,1.08,147,1.102,148,1.102,149,1.102,150,1.038,151,1.038,152,0.699,153,0.699,154,0.685,155,2.429,156,1.125,157,2.009,158,1.722,159,1.722,160,2.295,161,1.102,162,1.102,163,1.757,164,1.102,165,1.969,166,1.102,167,0.713,168,2.128,169,1.519,170,0.713,171,0.713,172,1.08,173,0.713,174,1.582,175,1.55,176,1.08,177,1.582,178,2.196,179,2.196,180,2.114,181,1.582,182,1.722,183,1.55,184,1.55,185,1.102,186,0.712,187,1.125,188,1.125,189,1.393,190,1.582,191,1.393,192,1.393,193,1.125,194,1.125,195,1.781,196,0.713,197,1.793,198,1.08,199,1.55,200,1.102,201,1.125,202,1.125,203,1.55,204,1.43,205,2.009,206,1.946,207,1.55,208,1.55,209,1.671,210,1.102,211,0.713,212,1.55,213,1.793,214,1.08,215,0.783,216,0.958,217,0.632,218,1.937,219,0.699,220,0.671,221,0.917,222,1.688,223,1.017,224,1.038,225,1.338,226,0.902,227,0.699,228,1.08,229,1.722,230,0.699,231,1.08,232,1.757,233,0.699,234,1.854,235,0.699,236,0.839,237,1.365,238,1.059,239,1.654,240,2.179,241,1.102,242,1.102,243,0.783,244,1.102,245,1.102,246,1.621,247,1.526,248,1.102,249,1.102,250,0.917,251,1.017,252,1.55,253,1.102,254,0.685,255,1.08,256,1.08,257,1.311,258,1.102,259,1.102,260,1.338,261,0.713,262,1.102,263,1.102,264,1.102,265,1.102,266,1.102,267,1.102,268,1.43,269,1.08,270,0.685,271,1.495,272,1.21,273,0.499,274,1.038,275,0.671,276,0.713,277,1.094,278,1.338,279,1.831,280,1.338,281,1.311,282,1.338,283,1.08,284,1.08,285,1.08,286,1.08,287,1.338,288,1.338,289,1.338,290,1.08,291,0.685,292,1.767,293,1.731,294,0.671,295,2.339,296,2.402,297,0.671,298,0.713,299,0.713,300,0.671,301,0.713,302,0.713,303,0.671,304,0.713,305,0.713,306,0.658,307,0.713,308,0.713,309,0.658,310,0.713,311,0.713,312,0.671,313,0.671,314,0.713,315,0.713,316,0.671,317,0.671,318,1.102,319,0.671,320,0.713,321,0.713,322,0.685,323,0.713,324,0.713,325,0.685,326,0.713,327,0.713,328,0.685,329,0.713,330,0.685,331,0.713,332,0.685,333,0.713,334,0.713,335,0.685,336,0.713,337,0.713,338,0.671,339,0.713,340,0.713,341,1.038,342,0.658,343,0.713,344,0.713,345,0.671,346,0.713,347,0.713,348,0.671,349,0.671,350,0.685,351,2.201,352,0.713,353,0.713,354,0.645,355,0.713,356,0.713,357,0.645,358,0.713,359,0.713,360,0.607,361,0.713,362,1.393,363,0.645,364,0.713,365,0.658,366,0.607,367,0.713,368,0.658,369,0.671,370,0.713,371,0.713,372,0.632,373,0.658,374,0.685,2313,2.653]],["title/injectables/UpdateUserGQL.html",[124,0.219,349,1.153]],["body/injectables/UpdateUserGQL.html",[0,0.534,3,0.052,4,0.052,5,0.047,7,0.144,8,0.348,9,1.429,11,1.727,12,0.609,13,0.008,14,1.135,15,0.111,22,0.052,36,1.734,37,0.644,38,1.016,39,0.619,40,0.606,46,0.192,48,1.037,49,1.56,50,1.037,56,0.198,59,1.556,64,1.408,94,1.488,96,1.868,100,1.488,102,0.67,104,0.67,107,1.842,110,1.953,111,1.633,121,0.002,122,0.003,123,0.002,124,0.445,125,0.657,126,0.571,127,0.657,128,2.395,129,0.486,130,0.467,131,2.384,132,2.52,133,1.581,134,2.16,135,2.133,136,1.891,137,1.831,138,1.581,139,0.253,141,2.417,142,0.657,143,0.606,144,1.757,145,1.124,146,1.08,147,1.102,148,1.102,149,1.102,150,1.037,151,1.037,152,0.698,153,0.698,154,0.684,155,2.428,156,1.124,157,2.008,158,1.721,159,1.721,160,2.295,161,1.102,162,1.102,163,1.757,164,1.102,165,1.968,166,1.102,167,0.712,168,2.128,169,1.518,170,0.712,171,0.712,172,1.08,173,0.712,174,1.581,175,1.55,176,1.08,177,1.581,178,2.196,179,2.196,180,2.008,181,1.581,182,1.721,183,1.55,184,1.55,185,1.102,186,0.712,187,1.124,188,1.124,189,1.393,190,1.581,191,1.393,192,1.393,193,1.124,194,1.124,195,1.78,196,0.712,197,1.55,198,1.08,199,1.55,200,1.102,201,1.124,202,1.124,203,1.55,204,1.429,205,2.113,206,2.09,207,1.792,208,1.877,209,1.671,210,1.102,211,0.712,212,1.55,213,1.792,214,1.08,215,0.783,216,0.957,217,0.631,218,1.937,219,0.698,220,0.67,221,0.917,222,1.687,223,1.016,224,1.037,225,1.337,226,0.901,227,0.698,228,1.08,229,1.721,230,0.698,231,1.08,232,1.757,233,0.698,234,1.853,235,0.698,236,0.839,237,1.365,238,1.058,239,1.653,240,2.179,241,1.102,242,1.102,243,0.783,244,1.102,245,1.102,246,1.621,247,1.525,248,1.102,249,1.102,250,0.917,251,1.016,252,1.55,253,1.102,254,0.684,255,1.08,256,1.08,257,1.31,258,1.102,259,1.102,260,1.337,261,0.712,262,1.102,263,1.102,264,1.102,265,1.102,266,1.102,267,1.102,268,1.429,269,1.08,270,0.684,271,1.495,272,1.209,273,0.498,274,1.037,275,0.67,276,0.712,277,1.094,278,1.337,279,1.831,280,1.337,281,1.31,282,1.337,283,1.08,284,1.08,285,1.08,286,1.08,287,1.337,288,1.337,289,1.337,290,1.08,291,0.684,292,1.767,293,1.731,294,0.67,295,2.339,296,2.402,297,0.67,298,0.712,299,0.712,300,0.67,301,0.712,302,0.712,303,0.67,304,0.712,305,0.712,306,0.657,307,0.712,308,0.712,309,0.657,310,0.712,311,0.712,312,0.67,313,0.67,314,0.712,315,0.712,316,0.67,317,0.67,318,1.102,319,0.67,320,0.712,321,0.712,322,0.684,323,0.712,324,0.712,325,0.684,326,0.712,327,0.712,328,0.684,329,0.712,330,0.684,331,0.712,332,0.684,333,0.712,334,0.712,335,0.684,336,0.712,337,0.712,338,0.67,339,0.712,340,0.712,341,0.657,342,0.657,343,0.712,344,0.712,345,0.67,346,0.712,347,0.712,348,0.67,349,1.058,350,0.684,351,2.201,352,0.712,353,0.712,354,0.644,355,0.712,356,0.712,357,0.644,358,0.712,359,0.712,360,0.606,361,0.712,362,1.393,363,0.644,364,0.712,365,0.657,366,0.606,367,0.712,368,0.657,369,0.67,370,0.712,371,0.712,372,0.631,373,0.657,374,0.684,2314,2.651]],["title/injectables/UserGQL.html",[124,0.219,372,1.086]],["body/injectables/UserGQL.html",[0,0.536,3,0.052,4,0.052,5,0.047,7,0.144,8,0.349,9,1.433,11,1.728,12,0.609,13,0.008,14,1.134,15,0.111,22,0.052,36,1.736,37,0.647,38,1.02,39,0.622,40,0.609,46,0.192,48,1.041,49,1.562,50,1.041,56,0.198,59,1.56,64,1.411,94,1.492,96,1.871,100,1.492,102,0.674,104,0.674,107,1.846,110,1.954,111,1.634,121,0.002,122,0.003,123,0.002,124,0.446,125,0.66,126,0.574,127,0.66,128,2.396,129,0.489,130,0.469,131,2.385,132,2.52,133,1.586,134,2.162,135,2.135,136,1.893,137,1.834,138,1.586,139,0.254,141,2.418,142,0.66,143,0.609,144,1.76,145,1.129,146,1.084,147,1.106,148,1.106,149,1.106,150,1.041,151,1.041,152,0.701,153,0.701,154,0.687,155,2.429,156,1.129,157,2.011,158,1.725,159,1.725,160,2.295,161,1.106,162,1.106,163,1.76,164,1.106,165,1.971,166,1.106,167,0.716,168,2.101,169,1.523,170,0.716,171,0.716,172,1.084,173,0.716,174,1.586,175,1.554,176,1.084,177,1.586,178,2.163,179,2.163,180,2.011,181,1.586,182,1.725,183,1.554,184,1.554,185,1.106,186,0.713,187,1.129,188,1.129,189,1.397,190,1.586,191,1.397,192,1.397,193,1.129,194,1.129,195,1.783,196,0.716,197,1.554,198,1.084,199,1.554,200,1.106,201,1.129,202,1.129,203,1.554,204,1.433,205,2.011,206,1.948,207,1.554,208,1.554,209,1.673,210,1.106,211,0.716,212,1.554,213,1.796,214,1.084,215,0.784,216,0.961,217,0.634,218,1.939,219,0.701,220,0.674,221,0.918,222,1.691,223,1.02,224,1.041,225,1.341,226,0.905,227,0.701,228,1.084,229,1.725,230,0.701,231,1.084,232,1.76,233,0.701,234,1.856,235,0.701,236,0.885,237,1.554,238,1.062,239,1.657,240,2.181,241,1.106,242,1.106,243,0.784,244,1.106,245,1.106,246,1.624,247,1.529,248,1.106,249,1.106,250,0.918,251,1.02,252,1.554,253,1.106,254,0.687,255,1.084,256,1.084,257,1.315,258,1.106,259,1.106,260,1.341,261,0.716,262,1.106,263,1.106,264,1.106,265,1.106,266,1.106,267,1.106,268,1.433,269,1.084,270,0.687,271,1.498,272,1.213,273,0.5,274,1.041,275,0.674,276,0.716,277,1.095,278,1.341,279,1.834,280,1.341,281,1.315,282,1.341,283,1.084,284,1.084,285,1.084,286,1.084,287,1.523,288,1.341,289,1.341,290,1.084,291,0.687,292,1.767,293,1.732,294,0.674,295,2.34,296,2.403,297,0.674,298,0.716,299,0.716,300,0.674,301,0.716,302,0.716,303,0.674,304,0.716,305,0.716,306,0.66,307,0.716,308,0.716,309,0.66,310,0.716,311,0.716,312,0.674,313,0.674,314,0.716,315,0.716,316,0.674,317,0.674,318,1.106,319,0.674,320,0.716,321,0.716,322,0.687,323,0.716,324,0.716,325,0.687,326,0.716,327,0.716,328,0.687,329,0.716,330,0.687,331,0.716,332,0.687,333,0.716,334,0.716,335,0.687,336,0.716,337,0.716,338,0.674,339,0.716,340,0.716,341,0.66,342,0.66,343,0.716,344,0.716,345,0.674,346,0.716,347,0.716,348,0.674,349,0.674,350,0.687,351,2.203,352,0.716,353,0.716,354,0.647,355,0.716,356,0.716,357,0.647,358,0.716,359,0.716,360,0.609,361,0.716,362,1.397,363,0.647,364,0.716,365,0.66,366,0.609,367,0.716,368,0.66,369,0.674,370,0.716,371,0.716,372,1,373,0.66,374,0.687,2315,2.664]],["title/components/UserListComponent.html",[19,0.435,492,1.226]],["body/components/UserListComponent.html",[3,0.113,4,0.113,5,0.103,7,0.313,8,0.606,12,0.527,13,0.008,15,0.189,18,1.83,19,0.762,20,2.022,22,0.113,34,3.446,35,2.359,41,1.83,42,3.227,43,2.551,46,0.113,51,2.462,52,2.365,54,1.844,56,0.123,57,1.487,58,1.771,66,1.365,67,1.92,75,2.84,80,2.125,85,4.918,88,3.621,121,0.005,122,0.006,123,0.005,139,0.844,178,1.807,179,1.807,186,0.7,195,1.668,215,0.751,221,0.655,236,1.075,238,2.239,239,2.063,243,0.751,250,0.828,273,0.687,373,2.194,376,2.084,377,1.682,378,1.682,379,1.682,380,1.668,386,1.904,387,1.904,389,1.922,390,2.353,406,3.136,410,4.305,415,1.319,416,2.127,417,2.127,418,1.682,419,2.452,420,1.682,421,1.682,422,1.518,423,1.682,424,1.549,425,1.682,426,1.549,427,1.614,428,2.452,429,1.549,430,1.682,431,1.518,432,2.127,433,1.518,434,1.682,435,1.549,436,1.682,437,1.549,438,1.614,439,1.549,440,2.517,441,1.549,442,1.682,443,1.549,444,1.682,445,1.549,446,1.682,447,1.549,448,1.518,449,2.127,450,1.959,451,1.518,452,1.682,453,1.549,454,1.682,455,1.549,456,1.682,457,1.549,458,1.682,459,1.581,460,1.682,461,1.549,462,1.682,463,1.549,464,1.682,465,1.549,466,1.682,467,1.549,468,1.682,469,1.518,470,1.682,471,1.487,472,1.682,473,1.518,474,1.682,475,1.549,476,1.682,477,1.549,478,1.682,479,1.682,480,1.549,481,1.682,482,1.458,483,1.682,484,1.518,485,1.682,486,1.518,487,1.682,488,1.549,489,1.682,490,1.518,491,1.682,492,2.258,493,2.239,494,1.682,495,1.682,496,1.718,498,1.959,551,7.3,564,3.706,565,3.889,588,4.234,589,5.169,679,6.464,685,5.111,846,5.513,1222,5.189,1281,3.706,2316,7.972,2317,5.111,2318,7.996,2319,7.29,2320,8.403,2321,7.29,2322,7.29,2323,5.764,2324,7.29,2325,5.764,2326,7.29,2327,5.764,2328,7.29,2329,5.764,2330,5.764,2331,5.764,2332,5.764,2333,5.764,2334,5.764,2335,5.764,2336,7.29,2337,7.29,2338,7.29,2339,7.29,2340,7.29,2341,7.29,2342,7.29,2343,5.764,2344,5.764]],["title/coverage.html",[2345,5.073]],["body/coverage.html",[0,1.181,1,3.514,5,0.088,6,5.613,12,0.31,13,0.008,19,0.92,23,2.615,29,2.185,37,1.199,38,1.199,39,1.152,40,1.13,44,2.021,47,3.514,57,1.274,61,1.834,121,0.006,122,0.005,123,0.004,124,0.467,125,1.224,127,2.412,144,1.274,215,0.679,221,0.9,236,0.749,243,0.816,250,0.749,278,1.274,279,1.224,280,1.274,281,1.249,282,1.274,283,1.274,284,1.274,285,1.274,286,1.274,287,1.274,288,1.274,289,1.274,290,1.274,294,1.249,297,1.249,300,1.249,303,1.249,306,1.224,309,1.224,312,1.249,313,1.249,316,1.249,317,1.249,319,1.249,322,1.274,325,1.274,328,1.274,330,1.274,332,1.274,335,1.274,338,1.249,341,1.224,342,1.224,345,1.249,348,1.249,349,1.249,350,1.274,354,1.199,357,1.199,360,1.13,363,1.199,365,1.224,366,1.13,368,1.224,369,1.249,372,1.176,373,1.224,422,1.3,424,1.327,426,1.327,429,1.327,431,1.3,433,1.3,435,1.327,437,1.327,439,1.327,441,1.327,443,1.327,445,1.327,447,1.327,448,1.3,450,1.327,451,1.3,453,1.327,455,1.327,457,1.327,459,1.354,461,1.327,463,1.327,465,1.327,467,1.327,469,1.3,471,1.274,473,1.3,475,1.327,477,1.327,480,1.327,482,1.249,484,1.3,486,1.3,488,1.327,490,1.3,492,1.327,497,4.378,503,5.353,504,3.514,506,4.378,510,2.311,548,5.282,551,4.009,554,3.734,560,4.009,562,5.637,564,4.238,577,4.378,580,2.706,590,3.331,591,3.174,592,3.037,608,5.989,610,4.985,615,3.734,671,5.592,702,3.734,717,5.353,743,5.845,749,4.009,753,4.009,755,3.734,761,3.734,774,3.734,775,5.353,798,5.613,826,3.734,828,3.331,847,3.734,880,4.378,881,3.734,882,5.637,909,4.378,934,5.353,938,3.734,945,4.378,946,4.009,947,4.378,961,4.378,977,4.378,978,3.514,989,2.806,1039,4.378,1050,5.353,1051,4.009,1052,4.378,1084,5.613,1085,5.613,1094,3.734,1122,4.378,1174,4.378,1184,2.806,1223,4.378,1247,4.378,1269,4.378,1303,4.378,1380,5.353,1385,3.331,1400,3.734,1429,5.353,1448,4.009,1456,3.514,1457,5.613,1458,5.613,1462,3.514,1535,3.734,1536,5.353,1542,4.238,1543,5.282,1551,5.353,1552,5.353,1555,4.378,1615,4.378,1637,4.378,1657,4.378,1714,4.378,1720,4.378,1818,4.378,1847,6.431,1880,4.009,1882,4.009,1884,4.009,1957,4.378,1987,4.378,2010,4.378,2028,4.378,2041,4.378,2042,4.378,2057,5.353,2075,4.009,2083,4.378,2138,4.378,2187,4.378,2214,4.378,2232,4.378,2248,4.378,2256,5.353,2316,4.378,2317,4.378,2345,4.009,2346,4.378,2347,4.937,2348,4.937,2349,9.683,2350,9.202,2351,9.571,2352,9.593,2353,4.937,2354,8.667,2355,8.667,2356,8.252,2357,7.421,2358,8.489,2359,4.937,2360,4.937,2361,6.592,2362,8.489,2363,6.592,2364,7.92,2365,4.937,2366,4.937,2367,4.937,2368,4.937,2369,4.937,2370,4.378,2371,4.378,2372,4.378,2373,4.378,2374,5.845,2375,4.378,2376,4.937]],["title/dependencies.html",[522,2.728,2377,3.797]],["body/dependencies.html",[13,0.008,18,2.095,22,0.129,26,4.058,27,4.058,28,3.615,32,2.697,33,2.394,35,3.242,116,1.886,121,0.005,122,0.006,123,0.005,240,1.603,271,2.203,272,1.982,274,2.328,515,3.179,522,3.276,524,3.381,614,3.615,719,7.025,720,6.433,726,5.849,727,5.849,733,3.381,735,4.058,828,4.45,843,5.356,844,6.433,1142,4.989,1222,4.695,1300,7.152,1301,5.356,1310,7.529,1311,5.849,1318,5.849,1320,4.989,1321,4.989,1322,5.991,1373,5.849,1406,5.356,1465,4.989,1939,5.849,2345,5.356,2378,6.596,2379,9.391,2380,6.596,2381,7.923,2382,6.596,2383,7.923,2384,6.596,2385,6.596,2386,6.596,2387,6.596,2388,6.596,2389,6.596,2390,6.596,2391,6.596,2392,6.596,2393,6.596,2394,6.596,2395,6.596,2396,7.923,2397,6.596,2398,6.596,2399,6.596,2400,6.596,2401,7.923,2402,7.923,2403,7.923,2404,6.596,2405,6.596,2406,6.596,2407,6.596,2408,6.596,2409,6.596,2410,6.596,2411,6.596,2412,6.596,2413,6.596,2414,6.596,2415,6.596,2416,6.596,2417,6.596,2418,5.849,2419,6.596,2420,9.329,2421,9.251,2422,6.596,2423,6.596,2424,8.808,2425,6.596,2426,6.596,2427,6.596,2428,6.596,2429,6.596,2430,6.596,2431,6.596,2432,6.596,2433,6.596,2434,6.596,2435,6.596,2436,6.596,2437,6.596,2438,6.596,2439,6.596,2440,6.596,2441,6.596,2442,6.596,2443,6.596,2444,6.596,2445,6.596,2446,6.596,2447,6.596,2448,6.596,2449,6.596,2450,6.596,2451,6.596,2452,6.596,2453,6.596,2454,6.596,2455,6.596,2456,6.596,2457,6.596,2458,6.596]],["title/miscellaneous/enumerations.html",[2459,2.336,2460,4.869]],["body/miscellaneous/enumerations.html",[7,0.405,13,0.008,121,0.006,122,0.007,123,0.006,127,1.848,130,1.638,146,2.197,147,2.242,148,2.242,149,2.242,150,2.11,151,2.11,152,1.964,153,1.964,2459,4.588,2460,6.612,2461,6.913]],["title/miscellaneous/functions.html",[2459,2.336,2462,4.869]],["body/miscellaneous/functions.html",[7,0.407,13,0.007,121,0.006,122,0.007,123,0.006,186,0.69,386,2.033,387,2.033,717,6.086,744,6.645,746,6.645,749,6.932,753,6.932,2459,4.61,2462,6.645,2463,8.537,2464,8.537]],["title/index.html",[7,0.206,2465,3.367,2466,3.367]],["body/index.html",[13,0.007,121,0.006,122,0.007,123,0.006,2346,6.708,2467,7.565,2468,8.583,2469,8.583,2470,7.565]],["title/modules.html",[521,2.32]],["body/modules.html",[13,0.007,121,0.006,122,0.007,123,0.006,520,5.406,521,2.655,530,5.088,531,5.088,532,3.785,698,4.823,708,5.406,714,5.088,715,5.088,716,4.823,720,7.778,967,5.406,971,5.088,1289,5.088,1915,5.406,1919,5.088,1978,5.406,1982,5.088,2179,5.406,2183,5.088,2240,5.406,2244,5.088,2304,5.406,2308,5.088,2471,9.579,2472,9.579,2473,9.744,2474,9.579,2475,9.579]],["title/overview.html",[2476,5.54]],["body/overview.html",[2,2.807,13,0.008,57,2.074,121,0.005,122,0.006,123,0.005,126,1.255,376,1.665,415,1.333,422,2.116,424,2.422,426,2.422,429,2.159,431,2.116,433,2.116,435,2.422,437,2.159,439,2.422,441,2.159,443,2.159,445,2.159,447,2.159,448,2.116,450,2.159,451,2.373,453,2.159,455,2.159,457,2.159,459,2.204,461,2.159,463,2.159,465,2.159,467,2.422,469,2.116,471,2.074,473,2.116,475,2.159,477,2.159,480,2.422,482,2.032,484,2.116,486,2.116,488,2.159,490,2.116,492,2.159,505,4.73,510,3.76,519,1.773,520,7.347,521,2.163,522,2.893,523,2.893,524,2.985,525,2.985,526,2.893,527,5.165,528,5.165,529,5.165,530,5.719,531,6.667,532,5.165,533,3.887,534,3.085,535,3.085,568,3.085,590,5.421,592,4.943,681,5.165,698,5.691,708,7.201,709,5.165,710,5.165,711,5.165,712,5.165,713,5.165,714,5.719,715,6.414,716,6.15,967,7.084,968,5.165,969,5.165,970,5.165,971,5.719,1285,5.165,1286,5.165,1287,5.165,1288,5.165,1289,5.719,1295,5.165,1296,5.165,1362,4.73,1915,7.007,1916,5.165,1917,5.165,1918,5.165,1919,5.719,1978,6.894,1979,5.165,1980,5.165,1981,5.165,1982,5.719,2119,5.165,2120,5.165,2122,5.165,2179,6.894,2180,5.165,2181,5.165,2182,5.165,2183,5.719,2240,6.894,2241,5.165,2242,5.165,2243,5.165,2244,5.719,2304,6.894,2305,5.165,2306,5.165,2307,5.165,2308,5.719,2476,5.165,2477,7.339,2478,5.825,2479,5.825]],["title/routes.html",[568,3.309]],["body/routes.html",[13,0.007,121,0.006,122,0.007,123,0.006,568,4.022]],["title/todo.html",[892,3.367,2465,3.367,2466,3.367]],["body/todo.html",[13,0.007,116,2.156,121,0.006,122,0.007,123,0.006,269,1.946,273,0.898,2418,6.687,2480,7.542,2481,7.542,2482,7.542,2483,7.542,2484,7.542,2485,7.542,2486,7.542,2487,7.542]],["title/miscellaneous/typealiases.html",[2459,2.336,2488,5.492]],["body/miscellaneous/typealiases.html",[7,0.297,12,0.617,13,0.007,28,3.87,36,1.64,48,1.75,49,1.902,50,1.75,59,1.715,64,1.552,107,1.912,110,2.073,121,0.004,122,0.006,123,0.004,127,1.359,132,2.57,141,2.086,142,1.75,143,1.615,195,1.999,209,1.552,210,1.86,214,1.822,215,0.727,216,1.615,218,1.999,219,1.444,221,0.937,222,2.045,223,1.715,225,1.822,226,1.521,227,1.444,229,1.786,230,1.444,232,1.822,233,1.444,234,1.681,235,1.444,237,1.86,238,1.786,239,1.822,240,2.336,243,0.727,247,1.681,250,0.937,251,1.715,254,1.822,255,1.822,257,1.786,260,1.822,1370,5.34,1543,3.903,1545,7.985,1546,5.734,2459,3.373,2461,7.999,2489,5.483,2490,7.568]],["title/miscellaneous/variables.html",[110,1.16,2459,2.336]],["body/miscellaneous/variables.html",[7,0.316,11,1.429,12,0.594,13,0.008,14,1.048,36,1.842,78,3.74,110,1.228,111,1.616,121,0.007,122,0.006,123,0.005,127,1.442,129,1.772,130,1.702,131,2.379,136,1.413,137,1.817,158,1.471,159,1.471,163,1.501,168,1.746,178,1.817,179,1.817,180,1.501,182,1.471,186,0.702,195,1.677,205,1.501,209,1.612,212,1.532,213,1.532,215,0.827,218,1.929,221,0.833,222,1.442,229,1.471,232,1.501,234,1.912,236,0.833,240,2.285,241,1.532,242,1.532,243,0.868,244,1.532,245,1.532,246,2.007,247,1.746,248,1.532,249,1.532,250,1.008,252,1.931,253,1.532,256,1.501,257,1.471,258,1.532,259,1.532,260,1.501,262,1.532,263,1.532,264,1.532,265,1.532,266,1.532,267,1.532,268,1.781,269,1.501,278,2.176,279,2.233,280,2.072,281,2.031,282,2.176,283,1.892,284,1.892,285,1.892,286,1.892,287,1.892,288,1.892,289,2.072,290,1.892,608,6.892,615,5.545,752,4.465,798,4.399,828,4.947,847,5.545,848,4.723,869,5.346,1317,7.475,1429,4.723,1448,5.954,1542,4.714,1543,4.14,1544,5.545,1549,5.545,1551,4.723,1552,5.954,1847,4.723,1880,5.954,1881,5.157,1882,5.954,1883,5.157,1884,5.954,1885,5.157,2057,4.723,2075,5.954,2076,5.157,2256,4.723,2271,5.157,2370,5.157,2371,5.157,2372,5.157,2373,5.157,2374,5.157,2375,6.501,2459,3.578,2461,7.638,2490,5.157,2491,5.817,2492,7.332,2493,5.817,2494,5.817,2495,5.817,2496,5.817,2497,8.03,2498,5.817,2499,5.817,2500,5.817,2501,5.817,2502,5.817,2503,5.817,2504,8.43,2505,8.43]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":671,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":88,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["1.1.10",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.1",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["14",{"_index":2479,"title":{},"body":{"overview.html":{}}}],["14.1.1",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":685,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{}}}],["2",{"_index":1362,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2477,"title":{},"body":{"overview.html":{}}}],["25",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["2500",{"_index":2003,"title":{},"body":{"injectables/NotificationService.html":{}}}],["25px",{"_index":666,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1780,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["304701",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":2478,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1686,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":1348,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["441313",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2409,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":681,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["500",{"_index":905,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["50vw",{"_index":1655,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["6.0.2",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1246,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1544,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":160,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":2058,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1381,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["a.email.tolowercase",{"_index":2334,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.label.tolowercase",{"_index":2020,"title":{},"body":{"injectables/PitchService.html":{}}}],["a.length",{"_index":1530,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":1898,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":2277,"title":{},"body":{"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1282,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":2112,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["a[i",{"_index":1533,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1534,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1811,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1525,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1768,"title":{},"body":{"components/MatchComponent.html":{}}}],["access_token",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":806,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["accesstoken",{"_index":799,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":1961,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2235,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":495,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":1222,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1785,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1478,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addmatch'},{'name",{"_index":421,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewteam",{"_index":1641,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":1644,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addpenaltygql",{"_index":1095,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["addrankingpenalty",{"_index":133,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addrankingpenaltygql",{"_index":125,"title":{"injectables/AddRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addteam",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteamtoseason",{"_index":187,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":323,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":324,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseasongql",{"_index":322,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtournamentround.component.html",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addtournamentround/addtournamentround.component",{"_index":1689,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcomponent",{"_index":57,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtypename",{"_index":1371,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["adm",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":151,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":423,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":540,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":499,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":500,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":570,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":422,"title":{"components/AdminComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":504,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":520,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":530,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":979,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["afterwarelink",{"_index":1331,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["alert",{"_index":2007,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alert(`${matchday.id",{"_index":1512,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2489,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":1905,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":1908,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":225,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":229,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":230,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":284,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":228,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":2070,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":368,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":369,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":231,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":39,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2262,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":232,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":233,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":285,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsqgl",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":239,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":373,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":2116,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["angular",{"_index":272,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1929,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":1933,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1931,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1935,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1927,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1925,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":515,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2199,"title":{},"body":{"injectables/TeamService.html":{}}}],["api/graphql",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["apollo",{"_index":271,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":296,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":351,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1548,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollolink",{"_index":1313,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollolink((operation",{"_index":1332,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollomodule",{"_index":1298,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":424,"title":{"components/AppComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":698,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":708,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":714,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":780,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["appsettings.service",{"_index":1312,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["appsettingsmodel",{"_index":774,"title":{"interfaces/AppsettingsModel.html":{}},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["appsettingsservice",{"_index":591,"title":{"injectables/AppsettingsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/GraphqlService.html":{},"coverage.html":{}}}],["args",{"_index":1373,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["array",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1707,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":2111,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["async",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{}}}],["auth",{"_index":1352,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticateduser",{"_index":237,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authentication.service",{"_index":1315,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticationservice",{"_index":510,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":512,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_name",{"_index":1975,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":674,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2475,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1430,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["b",{"_index":1281,"title":{},"body":{"components/EventsComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2335,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.label.tolowercase",{"_index":2021,"title":{},"body":{"injectables/PitchService.html":{}}}],["b.name.tolowercase",{"_index":1899,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":2114,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["background",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1365,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["basic",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":1356,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["behaviorsubject",{"_index":2073,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":2074,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["bname",{"_index":2115,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["boolean",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":524,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":679,"title":{},"body":{"components/AppComponent.html":{},"components/UserListComponent.html":{}}}],["bottom",{"_index":2342,"title":{},"body":{"components/UserListComponent.html":{}}}],["box",{"_index":664,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1349,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2473,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":723,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":718,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":2113,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["button.add_user",{"_index":1171,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.back",{"_index":1032,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.cancel",{"_index":906,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_match",{"_index":907,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["button.cancel_result",{"_index":1244,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":944,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1033,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["button.create_team",{"_index":1656,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["button.create_tournament",{"_index":1710,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1776,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1775,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1711,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_time",{"_index":1777,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":654,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1030,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.ok",{"_index":933,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1074,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.send_user_mail",{"_index":1173,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.set_time",{"_index":412,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":414,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["button.update_user",{"_index":1172,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["c1",{"_index":2069,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":2081,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":2067,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":2082,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1310,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1372,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["calls",{"_index":2198,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":507,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2234,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":427,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["cancel_match",{"_index":901,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancellation_reason",{"_index":245,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelled_at",{"_index":244,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelmatch",{"_index":166,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch($match_id",{"_index":304,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(match_id",{"_index":305,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(reason",{"_index":887,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancelmatchdialogcomponent",{"_index":426,"title":{"components/CancelMatchDialogComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancelmatchgql",{"_index":303,"title":{"injectables/CancelMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["canload",{"_index":508,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1467,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1778,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1347,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["catch",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["changedetectorref",{"_index":1000,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1432,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1436,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":800,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":430,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":817,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":910,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":911,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":429,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":813,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":173,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":311,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":985,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["class",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["cleanup",{"_index":2486,"title":{},"body":{"todo.html":{}}}],["client",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":527,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":528,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":529,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":968,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":969,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":970,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1285,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1286,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1288,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1287,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1295,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1296,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":1916,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":1917,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":1918,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":1979,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":1980,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":1981,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2119,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2120,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2122,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2121,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2180,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2181,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2182,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2241,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2242,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2243,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2305,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2306,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2307,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2418,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["codegen",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":677,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["command",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2425,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":1984,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":19,"title":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":420,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":376,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":754,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":606,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{}}}],["components/table#tablemodule",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament/tournament.component",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["conceded_goals",{"_index":267,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1383,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connected",{"_index":1382,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.error('iwas",{"_index":1519,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":929,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageteamsComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["console.log",{"_index":1344,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('connected",{"_index":1409,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":785,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["console.log(matchid",{"_index":1902,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["console.log(message.data",{"_index":1417,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["const",{"_index":277,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["constructor",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":2061,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":384,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["constructor(allusersgql",{"_index":2323,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(apollo",{"_index":1305,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["constructor(authservice",{"_index":509,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1093,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1672,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":937,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":987,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(httpclient",{"_index":794,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["constructor(i18service",{"_index":2261,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1272,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":885,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitch",{"_index":1075,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["constructor(pitchesgql",{"_index":2011,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1620,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":781,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(redis",{"_index":1384,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":810,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonpenaltiesgql",{"_index":1587,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["constructor(seasonservice",{"_index":1857,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(snackbar",{"_index":1992,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(submitresultgql",{"_index":1821,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":1126,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamsql",{"_index":2194,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(translateservice",{"_index":1434,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":1040,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["constructor(userqgl",{"_index":2218,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["contact",{"_index":250,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":432,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component",{"_index":2130,"title":{},"body":{"modules/SharedModule.html":{}}}],["contact.component.css",{"_index":935,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.html",{"_index":936,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.ts",{"_index":1052,"title":{},"body":{"components/EditContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:14",{"_index":1059,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:16",{"_index":1061,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:18",{"_index":1058,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:24",{"_index":1069,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:27",{"_index":1064,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:36",{"_index":1067,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.email",{"_index":959,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":954,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":251,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":955,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":957,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1749,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["contact/edit",{"_index":1051,"title":{},"body":{"components/EditContactComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["contact_mail",{"_index":958,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":956,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactchanged",{"_index":1057,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{}}}],["contactchanged(contact",{"_index":1077,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["contactcomponent",{"_index":431,"title":{"components/ContactComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactcomponentdata",{"_index":938,"title":{"interfaces/ContactComponentData.html":{}},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["contactfragment",{"_index":278,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":962,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":434,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":973,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":963,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":964,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":433,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":967,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":971,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":435,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["context",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2410,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1293,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":700,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2345,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":438,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["createapollolink",{"_index":1304,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["created_at",{"_index":252,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1560,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchesforseason",{"_index":189,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":329,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":328,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":986,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"injectables/PitchService.html":{}}}],["createnewpitch(pitch",{"_index":2013,"title":{},"body":{"injectables/PitchService.html":{}}}],["createnewtournament",{"_index":1667,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1674,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewuser",{"_index":2320,"title":{},"body":{"components/UserListComponent.html":{}}}],["createpitch",{"_index":181,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createpitchdialogcomponent",{"_index":437,"title":{"components/CreatePitchDialogComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createpitchgql",{"_index":317,"title":{"injectables/CreatePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createround",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundnr",{"_index":1661,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseason",{"_index":185,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":320,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":321,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":2063,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":319,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":196,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":340,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament",{"_index":200,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":346,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":347,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":345,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":201,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":37,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":203,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":348,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["currentlang",{"_index":1433,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":2059,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":2088,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":2096,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":702,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d').todate",{"_index":1505,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1809,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":1997,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches.sort((a",{"_index":2019,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":2107,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allteams.sort((a",{"_index":2204,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1693,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2333,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1280,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":2135,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.pitch.label",{"_index":943,"title":{},"body":{"components/ContactComponent.html":{}}}],["data.round",{"_index":407,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["data.season",{"_index":1603,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":1900,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":1896,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":1901,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":1897,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.title",{"_index":2134,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.tournament.rounds",{"_index":2275,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2276,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1507,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1509,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutchours(new",{"_index":1506,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1508,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1510,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1769,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":1612,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1264,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate",{"_index":1815,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1906,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1770,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1781,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":1614,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1266,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate",{"_index":1817,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1914,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1782,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":144,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":190,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1459,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1439,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":523,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":397,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"components/TournamentComponent.html":{}}}],["default",{"_index":129,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultduration",{"_index":1988,"title":{},"body":{"injectables/NotificationService.html":{}}}],["defined",{"_index":139,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"interfaces/RoundTeam.html":{},"components/UserListComponent.html":{}}}],["deletepitch",{"_index":176,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch($pitch_id",{"_index":314,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitch",{"_index":1623,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["deletepitch(pitch_id",{"_index":315,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitchid",{"_index":2015,"title":{},"body":{"injectables/PitchService.html":{}}}],["deletepitchgql",{"_index":313,"title":{"injectables/DeletePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteuser",{"_index":2321,"title":{},"body":{"components/UserListComponent.html":{}}}],["deleteuser(user",{"_index":2326,"title":{},"body":{"components/UserListComponent.html":{}}}],["dependencies",{"_index":522,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":2188,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialog'},{'name",{"_index":428,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["dialog.component",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{}}}],["dialog.component.css",{"_index":883,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.html",{"_index":884,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts",{"_index":882,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:116",{"_index":1133,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1076,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":886,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1078,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":891,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":890,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":996,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":995,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1139,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":998,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":990,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1135,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":889,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1136,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1128,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":888,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1137,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":993,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1138,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":992,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":991,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":1132,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":1129,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":1134,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog/cancel",{"_index":881,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/create",{"_index":978,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1757,"title":{},"body":{"components/MatchComponent.html":{}}}],["dialogs",{"_index":2485,"title":{},"body":{"todo.html":{}}}],["directive",{"_index":418,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":494,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["display",{"_index":2483,"title":{},"body":{"todo.html":{}}}],["displaypitch",{"_index":1180,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":1186,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":128,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2346,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":154,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":377,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["draws",{"_index":264,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":1999,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dynamic",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1808,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1807,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1806,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":440,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["edit_round",{"_index":405,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2231,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editcontactcomponent",{"_index":439,"title":{"components/EditContactComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatch.pitch",{"_index":1175,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":442,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":1176,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":1177,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1225,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1226,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1248,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":446,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1249,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1250,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1752,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.result.component",{"_index":1750,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.time.component",{"_index":1751,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatchpitchcomponent",{"_index":441,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1224,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":444,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":443,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":445,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editpitchcontact",{"_index":1619,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontact(pitch",{"_index":1625,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontactdialogcomponent",{"_index":447,"title":{"components/EditPitchContactDialogComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponent",{"_index":448,"title":{"components/EditRankingPenaltyComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponentdata",{"_index":1094,"title":{"interfaces/EditRankingPenaltyComponentData.html":{}},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"coverage.html":{}}}],["editround",{"_index":1668,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["edituser",{"_index":2322,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituser(user",{"_index":2328,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituserdialogcomponent",{"_index":450,"title":{"components/EditUserDialogComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":417,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":168,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":1053,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitcontactchanged",{"_index":1054,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitcontactchanged(firstname",{"_index":1062,"title":{},"body":{"components/EditContactComponent.html":{}}}],["en",{"_index":1440,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":374,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":213,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":149,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":194,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason($season_id",{"_index":336,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason(season_id",{"_index":337,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseasongql",{"_index":335,"title":{"injectables/EndSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["englisch",{"_index":660,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":537,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":145,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2460,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":608,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.persistcache",{"_index":1375,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["err",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{},"todo.html":{}}}],["error('empty",{"_index":2209,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorhandler",{"_index":1338,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errorhandler.concat(afterwarelink).concat(auth).concat(http",{"_index":1357,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errors.enter_valid_email",{"_index":1168,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["errors.enter_valid_password",{"_index":930,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["errors.password_token_invalid",{"_index":1977,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1028,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["errors.username_password_wrong",{"_index":932,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["event",{"_index":209,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":352,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":353,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":210,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.occurred_at",{"_index":1283,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.type",{"_index":1284,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventemitter",{"_index":1060,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":288,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":350,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":452,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1292,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1270,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1271,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":451,"title":{"components/EventsComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1387,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":531,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1289,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2191,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2193,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":46,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":526,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":295,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":643,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":1909,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1856,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":1178,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1853,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1859,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1854,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1861,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstates",{"_index":2089,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2302,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":178,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":1169,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["firstname",{"_index":1065,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["fix",{"_index":2480,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":1913,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":318,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["forgot_password",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":988,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":917,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["formgroup",{"_index":1196,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward",{"_index":1333,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["forward(operation).map(response",{"_index":1334,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["fragment",{"_index":240,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1840,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":276,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["full",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2462,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":1713,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1705,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1669,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["getcachekey",{"_index":1374,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getcurrentlang",{"_index":1444,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1877,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1324,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmaindefinition(query",{"_index":1368,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmatchdaylength",{"_index":1804,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getpenaltyforteam",{"_index":2141,"title":{},"body":{"components/TableComponent.html":{}}}],["getpenaltyforteam(penalties",{"_index":2144,"title":{},"body":{"components/TableComponent.html":{}}}],["getranking",{"_index":2142,"title":{},"body":{"components/TableComponent.html":{}}}],["getsubscriptionclient",{"_index":1394,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2465,"title":{"index.html":{},"todo.html":{}},"body":{}}],["getwinner",{"_index":2259,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":637,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":997,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1007,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["googlemapsapikey",{"_index":776,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["googlemapsjs",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":131,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2474,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":274,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":1339,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlerrors.map",{"_index":1341,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlmodule",{"_index":715,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":590,"title":{"injectables/GraphqlService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":592,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":777,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["graphqlwsurl",{"_index":778,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["green",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":503,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":505,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_score",{"_index":159,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":242,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1403,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2301,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1855,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1355,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('authorization",{"_index":1354,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('x",{"_index":1337,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["height",{"_index":665,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":1974,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played",{"_index":1881,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["hide_played_key",{"_index":1880,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_played_matches",{"_index":1910,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1729,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1850,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home_score",{"_index":158,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":241,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1402,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":416,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1301,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["httpclient",{"_index":779,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["httpclientmodule",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["httplink",{"_index":1306,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["httplinkmodule",{"_index":1299,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2470,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1446,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1447,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":29,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":111,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2482,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":538,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":782,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/I18Service.html":{}}}],["inject",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1541,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":124,"title":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1311,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1309,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["input",{"_index":953,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":950,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1245,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":138,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1542,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1456,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":808,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":807,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":1055,"title":{},"body":{"components/EditContactComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1066,"title":{},"body":{"components/EditContactComponent.html":{}}}],["ismatchplayed",{"_index":1819,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1824,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1535,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1723,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1735,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":809,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":801,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1820,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1826,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1462,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1531,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1492,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1422,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["karma",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1378,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["kickoff",{"_index":163,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1252,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1254,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1460,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1367,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1515,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":182,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{},"miscellaneous/variables.html":{}}}],["lang_key",{"_index":1448,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":179,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":1170,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["last_updated_at",{"_index":2177,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":1063,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["latestevent",{"_index":211,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":355,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":354,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":214,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":356,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1274,"title":{},"body":{"components/EventsComponent.html":{}}}],["latitude",{"_index":184,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["launcher",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1359,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["led",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":415,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":1940,"title":{},"body":{"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2467,"title":{},"body":{"index.html":{}}}],["lightgray",{"_index":2344,"title":{},"body":{"components/UserListComponent.html":{}}}],["line",{"_index":1939,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1938,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1300,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["list",{"_index":493,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":552,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2318,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2319,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2317,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":2324,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:22",{"_index":2330,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":2325,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:32",{"_index":2329,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:39",{"_index":2327,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1499,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":551,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1501,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1511,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1503,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":1545,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2190,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1670,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadappsettings",{"_index":786,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["loadappsettingsfactory",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadappsettingsfactory(provider",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":2481,"title":{},"body":{"todo.html":{}}}],["loadpenalties",{"_index":1583,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["loaduser",{"_index":802,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["localstorage(access_token_key",{"_index":832,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localstorage(hide_played_key",{"_index":1867,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(lang_key",{"_index":1442,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage(selected_matchday_key",{"_index":1873,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_season_key",{"_index":2071,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage(selected_team_key",{"_index":1875,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_tournament_key",{"_index":605,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["localstorageservice",{"_index":815,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["locatematch",{"_index":164,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":301,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":302,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1829,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":300,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1822,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":2034,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":249,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":248,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1215,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1219,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["locations",{"_index":1343,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["login",{"_index":1556,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":454,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1557,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1558,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":803,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":453,"title":{"components/LoginComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":826,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1559,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":804,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["longitude",{"_index":183,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["losses",{"_index":265,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1068,"title":{},"body":{"components/EditContactComponent.html":{}}}],["manage",{"_index":456,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managepenaltycomponent",{"_index":455,"title":{"components/ManagePenaltyComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managepitches",{"_index":1616,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches'},{'name",{"_index":458,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managepitches.component.css",{"_index":1617,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches.component.html",{"_index":1618,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches/managepitches.component",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{}}}],["managepitchescomponent",{"_index":457,"title":{"components/ManagepitchesComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":2468,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1471,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":460,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason/manage",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/manageseason.component",{"_index":543,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":547,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncomponent",{"_index":459,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1586,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["manageteams",{"_index":1638,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams'},{'name",{"_index":462,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageteams.component.css",{"_index":1639,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams.component.html",{"_index":1640,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams/manageteams.component",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteams/rename",{"_index":553,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteamscomponent",{"_index":461,"title":{"components/ManageteamsComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournament",{"_index":1658,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":464,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1659,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1660,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.component",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":545,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":463,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1662,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1663,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1664,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1715,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":466,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1716,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1717,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/edit",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":465,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map((result",{"_index":2155,"title":{},"body":{"components/TableComponent.html":{}}}],["map(({data",{"_index":2203,"title":{},"body":{"injectables/TeamService.html":{}}}],["map(value",{"_index":1203,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1207,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1538,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":738,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":1944,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1928,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1956,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":215,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":468,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":358,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":359,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match.cancellation_reason",{"_index":1774,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.cancelled_at",{"_index":1773,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.css",{"_index":1721,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1722,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":216,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1765,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2287,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1500,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":903,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2292,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1766,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2286,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1498,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":902,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2294,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1263,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1502,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1218,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1816,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match/match.component",{"_index":2124,"title":{},"body":{"modules/SharedModule.html":{}}}],["match:${matchid",{"_index":1841,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_canceled_at",{"_index":1772,"title":{},"body":{"components/MatchComponent.html":{}}}],["match_day_id",{"_index":192,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match_days",{"_index":253,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":157,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":467,"title":{"components/MatchComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":246,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1814,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":255,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.matches.foreach",{"_index":1493,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1812,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1813,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchdayfragment",{"_index":282,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1475,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":254,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1889,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":247,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1891,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1526,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1851,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcheventpayload",{"_index":1400,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":281,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":357,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1401,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1251,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1843,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":217,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":470,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":361,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":1921,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1848,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1849,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1472,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":469,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":360,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":1915,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":1919,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1388,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":471,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservc",{"_index":894,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["matchservice",{"_index":1184,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1730,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":1864,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchviewmodel",{"_index":2290,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":1948,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["matdialogmodule",{"_index":1941,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":1932,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":716,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1703,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1532,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":1930,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1943,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1947,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1946,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1949,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1952,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1955,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselect",{"_index":1102,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["matselectchange",{"_index":1131,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":1934,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1926,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1953,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1954,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{},"components/TableComponent.html":{}}}],["matsnackbarmodule",{"_index":1951,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":1942,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1945,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1924,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1950,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":141,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2207,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":648,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":652,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":650,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1342,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{}}}],["message.data",{"_index":1416,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1420,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":379,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":380,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["minwidth",{"_index":1654,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["miscellaneous",{"_index":2459,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":519,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":521,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1465,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1464,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1504,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["move",{"_index":893,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["msgtype",{"_index":1419,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1423,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.number",{"_index":1712,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":132,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":186,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":155,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1907,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1767,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":644,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{}}}],["networkerror",{"_index":1340,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['status",{"_index":1346,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['statustext",{"_index":1351,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["new",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1265,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":199,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":172,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1220,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1031,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_pitch_label",{"_index":1027,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newelement",{"_index":1479,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":1179,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1221,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":2049,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":474,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":1985,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1958,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1959,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":473,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":1978,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":1982,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":980,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchformcontrol",{"_index":981,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchlabelexist",{"_index":982,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplace",{"_index":1005,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplaceformgroup",{"_index":983,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newroundplandatefrom",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2289,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":1937,"title":{},"body":{"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["ng",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":539,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1477,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1516,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":960,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1216,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1771,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2296,"title":{},"body":{"components/TournamentComponent.html":{}}}],["notification.service",{"_index":1327,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["notificationservice",{"_index":44,"title":{"injectables/NotificationService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"coverage.html":{}}}],["notify",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["nswag",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":143,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":258,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1547,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1481,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_time",{"_index":1262,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1217,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":818,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":912,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1463,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1124,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onchangeteamselect(event",{"_index":1130,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onerror",{"_index":1326,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["only'}).topromise",{"_index":1427,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["onpitchselect",{"_index":1181,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1190,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":1182,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["ontournamentselected",{"_index":1671,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["opencancelmatchdialog",{"_index":1724,"title":{},"body":{"components/MatchComponent.html":{}}}],["openchangepassworddialog",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1725,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditdialog",{"_index":1584,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["openeditdialog(season",{"_index":1593,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["openeditpitchdialog",{"_index":1726,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1727,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1728,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["openrenameteamdialog",{"_index":1642,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["openrenameteamdialog(team",{"_index":1648,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["operation",{"_index":1366,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operation.getcontext",{"_index":1335,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operationdefinition",{"_index":1369,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["optional",{"_index":387,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":535,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1071,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1056,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2476,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":701,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":2126,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":2127,"title":{},"body":{"modules/SharedModule.html":{}}}],["p",{"_index":2106,"title":{},"body":{"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["p.label",{"_index":1022,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["p.length",{"_index":2160,"title":{},"body":{"components/TableComponent.html":{}}}],["p.sort((a",{"_index":2110,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["package",{"_index":2377,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":1755,"title":{},"body":{"components/MatchComponent.html":{},"injectables/NotificationService.html":{}}}],["param",{"_index":2206,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":386,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1968,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":1969,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1520,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":204,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":1976,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":171,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":310,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":309,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1561,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1566,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":167,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":307,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":306,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":571,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1421,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1425,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":222,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["penalties.filter(t",{"_index":2157,"title":{},"body":{"components/TableComponent.html":{}}}],["penalty",{"_index":268,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["penalty'},{'name",{"_index":449,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["penalty.component",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.css",{"_index":1086,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.html",{"_index":1087,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts",{"_index":1085,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty.component.ts:18",{"_index":1590,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:19",{"_index":1104,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:20",{"_index":1589,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:21",{"_index":1101,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:23",{"_index":1100,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:24",{"_index":1096,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:25",{"_index":1597,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:27",{"_index":1099,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:31",{"_index":1592,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:35",{"_index":1097,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:39",{"_index":1591,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:44",{"_index":1098,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:45",{"_index":1594,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:54",{"_index":1596,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.created_at",{"_index":1611,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.fragment",{"_index":223,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["penalty.id",{"_index":1606,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.points",{"_index":1613,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.reason",{"_index":1610,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.team.name",{"_index":1609,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty/edit",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty/manage",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penaltyfragment",{"_index":289,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["penaltypoints",{"_index":1088,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["penaltyreason",{"_index":1089,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["perm_contact_calendar",{"_index":1636,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{}}}],["persist",{"_index":1318,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1317,"title":{},"body":{"injectables/GraphqlService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":657,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":436,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":2129,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":948,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":949,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":947,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":951,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":952,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":946,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":180,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":243,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":226,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1846,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1083,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["pitch.location_latitude",{"_index":2027,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch.location_longitude",{"_index":2026,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch_contact",{"_index":2035,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":165,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1029,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitches",{"_index":224,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitches'},{'name",{"_index":476,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":2029,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":2030,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.find(p",{"_index":1021,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchescomponent",{"_index":475,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":365,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchexist",{"_index":1024,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchfragment",{"_index":280,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":2017,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchservice",{"_index":989,"title":{"injectables/PitchService.html":{}},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1009,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lat",{"_index":1012,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lng",{"_index":1014,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["places",{"_index":984,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["plan_date_from",{"_index":411,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":413,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["points",{"_index":137,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2174,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2171,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2172,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2169,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2167,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2175,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2173,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2168,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2170,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":260,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1473,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1495,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1550,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":147,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":148,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":787,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":706,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["providedin",{"_index":292,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":525,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":221,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":367,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":227,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2178,"title":{},"body":{"components/TableComponent.html":{}}}],["ranking_penalty_id",{"_index":175,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingfragment",{"_index":290,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":366,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":269,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["rankingposition",{"_index":261,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1386,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":136,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reason.value.length",{"_index":904,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["reconnect",{"_index":1360,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["reconnectionattempts",{"_index":1361,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["red",{"_index":693,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["redesign",{"_index":2484,"title":{},"body":{"todo.html":{}}}],["redirectto",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1390,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1546,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1385,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":1903,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["refetchqueries",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["refresh",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["registerlocaledata",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":789,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":793,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2208,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2192,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1810,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":931,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1786,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1484,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removepenaltiesgql",{"_index":1588,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty",{"_index":1585,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty(penalty",{"_index":1595,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removerankingpenalty",{"_index":174,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removerankingpenaltygql",{"_index":312,"title":{"injectables/RemoveRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteam",{"_index":381,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(index",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":188,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":326,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":327,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseasongql",{"_index":325,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rename",{"_index":478,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["renameteam",{"_index":198,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":343,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":2047,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":344,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2200,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":477,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":342,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["require",{"_index":2375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1576,"title":{},"body":{"components/LoginComponent.html":{}}}],["res",{"_index":791,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["reschedulematchday",{"_index":191,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchday(match_day_id",{"_index":331,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchdaygql",{"_index":330,"title":{"injectables/RescheduleMatchDayGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["reset",{"_index":534,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":814,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":788,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(res",{"_index":792,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season.ranking",{"_index":2156,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1698,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1700,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.ts",{"_index":1552,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":123,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":517,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/EditContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["returns",{"_index":389,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":205,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":293,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":425,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["round.number",{"_index":2300,"title":{},"body":{"components/TournamentComponent.html":{}}}],["rounds",{"_index":257,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":47,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":811,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":569,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":572,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2236,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":568,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":541,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":567,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":2109,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":1045,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2217,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2221,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1521,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["savepenalty",{"_index":1092,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["schedulematch",{"_index":162,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":298,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":299,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1831,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1488,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":297,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1468,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":472,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":549,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1470,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1469,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1458,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:115",{"_index":1795,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:129",{"_index":1797,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1789,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1802,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1798,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1800,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1803,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1805,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1788,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1801,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1799,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1793,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1792,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1791,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1790,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1794,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1796,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1828,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":266,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1756,"title":{},"body":{"components/MatchComponent.html":{}}}],["season",{"_index":218,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":362,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":219,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.name",{"_index":2117,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1399,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["season.state",{"_index":2118,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season_id",{"_index":134,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":2090,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":2084,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":481,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":2085,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":2086,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser/seasonchooser.component",{"_index":2125,"title":{},"body":{"modules/SharedModule.html":{}}}],["seasonchoosercomponent",{"_index":480,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":2060,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":2066,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":283,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonlist",{"_index":2087,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonname",{"_index":2065,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonpenalties",{"_index":220,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties($id",{"_index":364,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties.season",{"_index":1107,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["seasonpenaltiesgql",{"_index":363,"title":{"injectables/SeasonPenaltiesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["seasonservice",{"_index":580,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":146,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.ended",{"_index":2093,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonstate.progress",{"_index":2092,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selected_matchday",{"_index":1883,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_matchday_key",{"_index":1882,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_season",{"_index":2076,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/variables.html":{}}}],["selected_season_key",{"_index":2075,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_team",{"_index":1885,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_team_key",{"_index":1884,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament",{"_index":2271,"title":{},"body":{"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament_key",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedmatchdayid",{"_index":1852,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1090,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["selector",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendpasswordmail",{"_index":805,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":170,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":308,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":1125,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["server",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":2189,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":291,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["services/appsettings.service",{"_index":617,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/authentication.service",{"_index":516,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/graphql",{"_index":1302,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["services/graphql.service",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["services/i18.service",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1200,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1199,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1879,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1406,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1316,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setcontext((_",{"_index":1353,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setplandatefrom",{"_index":382,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(event",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":383,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(event",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setsubscriptionclient(value",{"_index":1396,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentround",{"_index":202,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/create",{"_index":1631,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/edit",{"_index":1630,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/shared.module",{"_index":542,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["sharedmodule",{"_index":532,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":1183,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrornotification",{"_index":1989,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerrornotification(title",{"_index":1994,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification",{"_index":1990,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification(title",{"_index":1996,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification",{"_index":1991,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification(title",{"_index":2001,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shuffle",{"_index":1787,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1529,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{}}}],["snackbar'},{'name",{"_index":483,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1540,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1539,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":2128,"title":{},"body":{"modules/SharedModule.html":{}}}],["snackbarcomponent",{"_index":482,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["solid",{"_index":2343,"title":{},"body":{"components/UserListComponent.html":{}}}],["sort_index",{"_index":262,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":1912,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1514,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1513,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1314,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/.../app.module.ts",{"_index":2463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.ts",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.local.ts",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2461,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2490,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../i18.service.ts",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../matchplan.component.ts",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../season.service.ts",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.component.ts",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":127,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1021",{"_index":2137,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:1042",{"_index":2055,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:1055",{"_index":1554,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:1068",{"_index":908,"title":{},"body":{"injectables/CancelMatchGQL.html":{}}}],["src/api/graphql.ts:1081",{"_index":2009,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:1094",{"_index":2008,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:1107",{"_index":140,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1132",{"_index":2039,"title":{},"body":{"injectables/RemoveRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1151",{"_index":1049,"title":{},"body":{"injectables/DeletePitchGQL.html":{}}}],["src/api/graphql.ts:1164",{"_index":2312,"title":{},"body":{"injectables/UpdatePitchContactGQL.html":{}}}],["src/api/graphql.ts:1189",{"_index":1034,"title":{},"body":{"injectables/CreatePitchGQL.html":{}}}],["src/api/graphql.ts:1212",{"_index":1035,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:1225",{"_index":375,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:1238",{"_index":2040,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:1251",{"_index":976,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:1267",{"_index":2054,"title":{},"body":{"injectables/RescheduleMatchDayGQL.html":{}}}],["src/api/graphql.ts:1283",{"_index":2136,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:1296",{"_index":1267,"title":{},"body":{"injectables/EndSeasonGQL.html":{}}}],["src/api/graphql.ts:1306",{"_index":2255,"title":{},"body":{"injectables/TeamsGQL.html":{}}}],["src/api/graphql.ts:1319",{"_index":2313,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphql.ts:1344",{"_index":2053,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1357",{"_index":1036,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1370",{"_index":1037,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1393",{"_index":1038,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1422",{"_index":2314,"title":{},"body":{"injectables/UpdateUserGQL.html":{}}}],["src/api/graphql.ts:1446",{"_index":1268,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1463",{"_index":1553,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1477",{"_index":1783,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1494",{"_index":1784,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1511",{"_index":2056,"title":{},"body":{"injectables/SeasonPenaltiesGQL.html":{}}}],["src/api/graphql.ts:1534",{"_index":2036,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1548",{"_index":2037,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1565",{"_index":573,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1582",{"_index":574,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1599",{"_index":575,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1616",{"_index":2303,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1630",{"_index":2315,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1647",{"_index":576,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1398,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1543,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":2038,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1551,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":699,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:24",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/admin/admin",{"_index":566,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":497,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":502,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":501,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":506,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":513,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":514,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":511,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":536,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1294,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1269,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1273,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1276,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1275,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1290,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts",{"_index":1615,"title":{},"body":{"components/ManagepitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:17",{"_index":1621,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:20",{"_index":1628,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:26",{"_index":1627,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:30",{"_index":1624,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:39",{"_index":1622,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:43",{"_index":1626,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/manageseason/manage",{"_index":1084,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1457,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts",{"_index":1637,"title":{},"body":{"components/ManageteamsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:12",{"_index":1643,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:15",{"_index":1651,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:16",{"_index":1650,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:21",{"_index":1647,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:24",{"_index":1645,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:32",{"_index":1649,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/rename",{"_index":2041,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:101",{"_index":395,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":401,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":400,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:28",{"_index":396,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":403,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":402,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:32",{"_index":385,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":399,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:37",{"_index":404,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:44",{"_index":398,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:53",{"_index":392,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:56",{"_index":388,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:67",{"_index":393,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:71",{"_index":391,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:97",{"_index":394,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1657,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1688,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1683,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1684,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1687,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:20",{"_index":1681,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:21",{"_index":1685,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1673,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1682,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1679,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:35",{"_index":1678,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1675,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:53",{"_index":1680,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:72",{"_index":1677,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:83",{"_index":1676,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/edit",{"_index":1122,"title":{},"body":{"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1714,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1719,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1718,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2316,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":909,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":918,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":919,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":913,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":916,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":915,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":914,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":975,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":961,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":966,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":965,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":972,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":2028,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":2033,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":2032,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":2031,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2248,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2253,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2252,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2251,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1555,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":1569,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1562,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1568,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1565,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1563,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":1564,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":1567,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1922,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1847,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1870,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:22",{"_index":1868,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1874,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:26",{"_index":1876,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:28",{"_index":1878,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:30",{"_index":1858,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1872,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:34",{"_index":1869,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:35",{"_index":1871,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:39",{"_index":1866,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1860,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:51",{"_index":1862,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:59",{"_index":1863,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:77",{"_index":1865,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":1920,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1986,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":1957,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:15",{"_index":1966,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":1962,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:19",{"_index":1965,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:30",{"_index":1963,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:46",{"_index":1964,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":1983,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/cancel",{"_index":880,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact",{"_index":945,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":934,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":939,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:17",{"_index":942,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":941,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":940,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/create",{"_index":977,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1050,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":1174,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1195,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1185,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1194,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1189,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:42",{"_index":1187,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":1191,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:50",{"_index":1192,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1193,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1223,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1230,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1227,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1231,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1232,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1233,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1228,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1229,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1247,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1253,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1259,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1258,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1256,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1255,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1257,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1720,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:106",{"_index":1736,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1733,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1734,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1732,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1731,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1744,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1743,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1745,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1747,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1746,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1748,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:37",{"_index":1737,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:40",{"_index":1741,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:54",{"_index":1740,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:67",{"_index":1742,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:80",{"_index":1739,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:93",{"_index":1738,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":2083,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":2094,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":2099,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":2100,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":2095,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:19",{"_index":2091,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:22",{"_index":2101,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:26",{"_index":2098,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:61",{"_index":2097,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/shared.module",{"_index":1291,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/shared/shared.module.ts",{"_index":2123,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1536,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:13",{"_index":2131,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:16",{"_index":2133,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:21",{"_index":2132,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2186,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":2138,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:17",{"_index":2149,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":2143,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:21",{"_index":2150,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":2148,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":2151,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:29",{"_index":2147,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:35",{"_index":2146,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:42",{"_index":2145,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2184,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2247,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2214,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:15",{"_index":2219,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:20",{"_index":2224,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2223,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2225,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:26",{"_index":2220,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2222,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2232,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2238,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2237,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2233,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2245,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2311,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2256,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tournament/tournament.component.ts:17",{"_index":2270,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":2269,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:20",{"_index":2263,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:23",{"_index":2268,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:28",{"_index":2266,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:37",{"_index":2265,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:45",{"_index":2267,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:71",{"_index":2264,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2309,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1297,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/app/material.module.ts",{"_index":1923,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/appsettings.service.ts",{"_index":775,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["src/app/services/appsettings.service.ts:15",{"_index":795,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:19",{"_index":796,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:27",{"_index":797,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/authentication.service",{"_index":1141,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":798,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:119",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:21",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":816,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:78",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":819,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts",{"_index":1303,"title":{},"body":{"injectables/GraphqlService.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts:23",{"_index":1307,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/graphql.service.ts:36",{"_index":1308,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/i18.service",{"_index":1277,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1429,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/i18.service.ts:14",{"_index":1441,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:16",{"_index":1443,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:18",{"_index":1445,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1435,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:25",{"_index":1438,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:37",{"_index":1437,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":703,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":1039,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":1041,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1466,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1818,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:116",{"_index":1830,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:20",{"_index":1825,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:24",{"_index":1827,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:28",{"_index":1834,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:72",{"_index":1832,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:9",{"_index":1823,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/notification.service",{"_index":45,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["src/app/services/notification.service.ts",{"_index":1987,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/notification.service.ts:10",{"_index":1993,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:16",{"_index":2002,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:20",{"_index":1995,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:24",{"_index":2000,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/pitch.service",{"_index":1001,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["src/app/services/pitch.service.ts",{"_index":2010,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:12",{"_index":2022,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:14",{"_index":2012,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:23",{"_index":2016,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:45",{"_index":2014,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{}}}],["src/app/services/season.service.ts",{"_index":2057,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/season.service.ts:14",{"_index":2072,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:16",{"_index":2062,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:31",{"_index":2064,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:56",{"_index":2068,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1140,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2187,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2205,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2195,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:34",{"_index":2197,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:62",{"_index":2201,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/environments/environment",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":270,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":212,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2466,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1702,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1474,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":193,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":333,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":334,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseasongql",{"_index":332,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1665,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1197,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":256,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1376,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["store",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["store.readfragment",{"_index":1839,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1842,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["storedlang",{"_index":1431,"title":{},"body":{"injectables/I18Service.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":496,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":498,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["submit",{"_index":1960,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":161,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1833,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":156,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":294,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["subscription",{"_index":1370,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{}}}],["subscription.service.ts",{"_index":1380,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:19",{"_index":1393,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:21",{"_index":1392,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1395,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:25",{"_index":1397,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:59",{"_index":1389,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:71",{"_index":1391,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1319,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1407,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1320,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":1998,"title":{},"body":{"injectables/NotificationService.html":{}}}],["super",{"_index":1043,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2471,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2472,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1345,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["switchmapto",{"_index":1198,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1206,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":142,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.guestteam.id",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.team.id",{"_index":2158,"title":{},"body":{"components/TableComponent.html":{}}}],["table",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":485,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2185,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":2140,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2139,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2163,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2161,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2166,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2162,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2165,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2164,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":484,"title":{"components/TableComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2179,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2183,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":275,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":169,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":479,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{}}}],["team.component.css",{"_index":2043,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":2044,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":2042,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:11",{"_index":2045,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:14",{"_index":2050,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":2051,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:19",{"_index":2046,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":2048,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.id",{"_index":2159,"title":{},"body":{"components/TableComponent.html":{}}}],["team.name",{"_index":410,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2213,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2254,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":135,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":206,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":153,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":487,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2246,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2215,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2216,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":486,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":755,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2240,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2244,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":279,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":38,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":152,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":1646,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":195,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":489,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams($id",{"_index":339,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["teams.component.css",{"_index":2249,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2250,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.component",{"_index":974,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":1461,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":488,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamselect",{"_index":1091,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["teamservice",{"_index":23,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamsgql",{"_index":338,"title":{"injectables/TeamsGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teamsql",{"_index":2196,"title":{},"body":{"injectables/TeamService.html":{}}}],["template",{"_index":273,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["templateref",{"_index":1629,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["templateurl",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1517,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["testing",{"_index":2487,"title":{},"body":{"todo.html":{}}}],["text",{"_index":1779,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":2078,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1405,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":1967,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addpenaltygql.mutate",{"_index":1116,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.allseasonslistgql.document",{"_index":2080,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":2105,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2211,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2202,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2272,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.alltournamentsqgl.watch().valuechanges.pipe",{"_index":1692,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.allusers",{"_index":2331,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2332,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apollo.create",{"_index":1379,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettings",{"_index":783,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.appsettingsservice.appsettings.googlemapsapikey",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsettingsservice.appsettings.graphqlurl",{"_index":1330,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettingsservice.appsettings.graphqlwsurl",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1573,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":1971,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":925,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":518,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2239,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":928,"title":{},"body":{"components/ChangepasswordComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":1165,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.authservice.user",{"_index":2226,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":1048,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cancelmatchgql.mutate",{"_index":895,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.changelang(this.storedlang",{"_index":1454,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.connected",{"_index":1410,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.contactchanged.emit",{"_index":1072,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.createform",{"_index":1570,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createpitchgql.mutate",{"_index":2025,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.createroundgql.mutate",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createroundnr",{"_index":1701,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createseasongql.mutate",{"_index":2079,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createtournament.mutate",{"_index":1694,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":1153,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.currentseason.subscribe",{"_index":2077,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.penalty",{"_index":1108,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.id",{"_index":1117,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.points",{"_index":1112,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.reason",{"_index":1114,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.team.id",{"_index":1110,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.season.id",{"_index":1118,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.tournamentid",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.defaultduration",{"_index":2006,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.deletepitchgql.mutate",{"_index":2023,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.dialog.open(cancelmatchdialogcomponent",{"_index":1764,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1761,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(createpitchdialogcomponent",{"_index":1214,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1759,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1753,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1760,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editpitchcontactdialogcomponent",{"_index":1635,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editrankingpenaltycomponent",{"_index":1604,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.dialog.open(edituserdialogcomponent",{"_index":2336,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":1653,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.dialogref.close",{"_index":899,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":1143,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.setvalue(this.user.email",{"_index":1147,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.value.tolowercase",{"_index":1154,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1073,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.error",{"_index":1572,"title":{},"body":{"components/LoginComponent.html":{},"components/TableComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1418,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1201,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstates.some(x",{"_index":2108,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":1144,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.setvalue(this.user.first_name",{"_index":1148,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.value",{"_index":1156,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.formbuilder.group",{"_index":1004,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getranking",{"_index":2152,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2278,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2281,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphqlservice.createapollolink",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.connect",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.subscriptionclient",{"_index":1358,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.guest_score",{"_index":1236,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteam",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.handlegetmatches",{"_index":1887,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1886,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_score",{"_index":1234,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeam",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.httpclient.get('./appsettings.json",{"_index":790,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.httplink.create",{"_index":1328,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.i18service.changelang(lang",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isteamadmin",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1836,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1835,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":1145,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.setvalue(this.user.last_name",{"_index":1149,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.value",{"_index":1157,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.latestevents",{"_index":1278,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1279,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1690,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadappsettings",{"_index":784,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.loadgooglemapsscript",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1708,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpenalties",{"_index":1598,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.localstorageservice.remove(access_token_key",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.locatematchqgl.mutate",{"_index":1845,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1571,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls.password.disable",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.seterrors",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.setvalue",{"_index":1574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.seterrors",{"_index":1575,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason.match_days.filter",{"_index":1489,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1522,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1476,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1482,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1601,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.managetournamentid",{"_index":1697,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1699,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1695,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1754,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1237,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1763,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1235,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1762,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":896,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.match.pitch",{"_index":1212,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.matches",{"_index":2279,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2280,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2283,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2284,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesgql",{"_index":1894,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchkickoff",{"_index":1260,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":897,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.matchplangql.fetch",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1426,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":1895,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1424,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1239,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1238,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1527,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1213,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1528,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1261,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1240,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1758,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1208,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1202,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":921,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch",{"_index":1016,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1011,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1013,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1002,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1023,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1025,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1026,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.value",{"_index":1017,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1003,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newroundplandatefrom",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('cancel_match_error",{"_index":900,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_pitch_error",{"_index":1019,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_tournament_error",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_user_error",{"_index":1160,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_pitch_error",{"_index":1634,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('password_changed_error",{"_index":1973,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('penalty_error",{"_index":1121,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('remove_penalty_error",{"_index":1608,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('send_new_password_mail_error",{"_index":1167,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('team_contact_save_error",{"_index":2230,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('update_user_error",{"_index":1164,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translationservice.instant('unknown_network_error",{"_index":1350,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('cancel_match_success",{"_index":898,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_pitch_success",{"_index":1018,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_tournament_success",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_user_success",{"_index":1159,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_pitch_sucess",{"_index":1633,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('edit_result_error",{"_index":1242,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('edit_result_success",{"_index":1241,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('enter_valid_result",{"_index":1243,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('password_changed_success",{"_index":1972,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('penalty_saved",{"_index":1120,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_error",{"_index":1082,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_success",{"_index":1081,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('remove_penalty_success",{"_index":1607,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('send_new_password_mail_success",{"_index":1166,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('team_contact_save_success",{"_index":2229,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('update_user_success",{"_index":1163,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.oldpassword",{"_index":924,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":926,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":927,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":1146,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.password.value",{"_index":1155,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.penalties",{"_index":1599,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.penaltypoints",{"_index":1111,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.penaltyreason",{"_index":1113,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.pitch.id",{"_index":1080,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.pitchesgql.document",{"_index":2024,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchesgql.watch().valuechanges.pipe",{"_index":2018,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.allpitches.subscribe",{"_index":1020,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.createnewpitch",{"_index":1015,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.deletepitch(pitch.id",{"_index":1632,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.places",{"_index":1006,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1008,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.getplace",{"_index":1010,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.possiblekickoffs",{"_index":1485,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1486,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1480,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1483,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.fetch",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranking.watch",{"_index":2154,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.watch",{"_index":1904,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2153,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.fetch({id",{"_index":1428,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1415,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removepenaltiesgql.mutate",{"_index":1605,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2212,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1704,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1706,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams.map((t",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.splice(index",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1844,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":2103,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonlist",{"_index":2104,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonpenaltiesgql.document",{"_index":1119,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.seasonpenaltiesgql.watch",{"_index":1600,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":642,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":2102,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1888,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1109,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["this.setbtnlabel",{"_index":1046,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shownotification(title",{"_index":2004,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1494,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":2005,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.startmatchday).foreach",{"_index":1491,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.storedlang",{"_index":1452,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.submitresultgql.mutate",{"_index":1837,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1408,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1411,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1412,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnected",{"_index":1413,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnecting",{"_index":1414,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamselect.setdisabledstate(true",{"_index":1115,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":1652,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":2052,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.teamsql.mutate",{"_index":2210,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.token",{"_index":1970,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2274,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2273,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentgql.fetch",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tournamentid",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1696,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1691,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1449,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1453,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1450,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1451,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1455,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":1047,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":1044,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updatepitchcontactgql.mutate",{"_index":1079,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.updateteamcontact.mutate",{"_index":2227,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.updateusergql.mutate",{"_index":1161,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.id",{"_index":1162,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user.role",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.map(t",{"_index":1152,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userqgl.document",{"_index":2228,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":1150,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.usersgql.document",{"_index":1158,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userteamlist",{"_index":1151,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.winnerlastround",{"_index":2282,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2291,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2295,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2285,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2293,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2288,"title":{},"body":{"components/TournamentComponent.html":{}}}],["title",{"_index":1537,"title":{},"body":{"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{}}}],["todo",{"_index":892,"title":{"todo.html":{}},"body":{"components/CancelMatchDialogComponent.html":{}}}],["token",{"_index":1336,"title":{},"body":{"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tournament",{"_index":234,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":491,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":370,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":371,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2310,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2258,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2257,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":235,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1709,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2260,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":490,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":286,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":40,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentmodule",{"_index":2304,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2308,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1666,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["translate",{"_index":406,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["translate/core",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1911,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":704,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":705,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservice",{"_index":1042,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"injectables/GraphqlService.html":{}}}],["transport",{"_index":1321,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":378,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tslint:disable",{"_index":1936,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel.guestteam.name",{"_index":409,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["tupel.hometeam.name",{"_index":408,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2488,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1204,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":1549,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2469,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1188,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1838,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["updated_at",{"_index":259,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updatepitchcontact",{"_index":177,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updatepitchcontactgql",{"_index":316,"title":{"injectables/UpdatePitchContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateteamcontact",{"_index":197,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":341,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateuser",{"_index":207,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateusergql",{"_index":349,"title":{"injectables/UpdateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1329,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["useclass",{"_index":707,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["useexisting",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["usefactory",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":236,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.authenticateduser",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["user.email",{"_index":2338,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2339,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":238,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["user.last_name",{"_index":2340,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2341,"title":{},"body":{"components/UserListComponent.html":{}}}],["user_id",{"_index":208,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["user_role",{"_index":2337,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":287,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":372,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1404,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":492,"title":{"components/UserListComponent.html":{}},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":812,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":150,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["usersgql",{"_index":1127,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["userteamlist",{"_index":1123,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["utilities",{"_index":1325,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["uuid",{"_index":1142,"title":{},"body":{"components/EditUserDialogComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":1106,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1105,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{}}}],["val",{"_index":1524,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":920,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["validators.email",{"_index":1070,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.minlength(6",{"_index":923,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.required",{"_index":922,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["value",{"_index":130,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1205,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["valuechanges.pipe",{"_index":1602,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":419,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":110,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2411,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2299,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":999,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplete",{"_index":994,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["viewchild('teamselect",{"_index":1103,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["void",{"_index":390,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["warning",{"_index":2176,"title":{},"body":{"components/TableComponent.html":{}}}],["websocketlink",{"_index":1323,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websocketlink(this.graphqlsubscriptionservice.subscriptionclient",{"_index":1364,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websockets",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["webstoragemodule",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["werden",{"_index":1518,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":667,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1377,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["winner.name",{"_index":2298,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2297,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":263,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1322,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["wsclient",{"_index":1363,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["x",{"_index":1211,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["x.filter(y",{"_index":1209,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1892,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1893,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1890,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1487,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1523,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":1490,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1496,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1210,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1497,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/NotificationService.html":{}}}],["zip",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":533,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddRankingPenaltyGQL.html":{"url":"injectables/AddRankingPenaltyGQL.html","title":"injectable - AddRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1107\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1225\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeam\n                            \n                            \n                                homeTeam\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, notify: NotificationService, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{ tupel.homeTeam.name }}\n      \n      \n        -\n      \n      \n        {{ tupel.guestTeam.name }}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        -\n      \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n        {{ 'PLAN_DATE_TO'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{ tupel.homeTeam.name }}                    -                    {{ tupel.guestTeam.name }}                              -                                                                        {{team.name}}                                                  -                                                        {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                            {{ \\'PLAN_DATE_TO\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                                {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            ManagePenaltyComponent\n                        \n                        \n                            ManagepitchesComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManageteamsComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './manageteams/rename-team/rename-team.component';\nimport { EventsModule } from './events';\nimport { ManageteamsComponent } from './manageteams/manageteams.component';\nimport { ManagepitchesComponent } from './managepitches/managepitches.component';\nimport { ManagePenaltyComponent } from './manageseason/manage-penalty/manage-penalty.component';\nimport { EditRankingPenaltyComponent } from './manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component';\nimport { EditUserDialogComponent } from './manageusers/edit-user-dialog/edit-user-dialog.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    ManageteamsComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent,\n    UserListComponent,\n    RenameTeamComponent,\n    ManagepitchesComponent,\n    ManagePenaltyComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent,\n    RenameTeamComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1565\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1582\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1599\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1647\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, ranking: RankingGQL, matchPlanGQL: MatchPlanGQL, tournamentGQL: TournamentGQL, seasonService: SeasonService, graphqlService: GraphqlService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentGQL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlService\n                                                  \n                                                        \n                                                                        GraphqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { RankingGQL, MatchPlanGQL, TournamentGQL } from 'src/api/graphql';\nimport { SeasonService } from 'src/app/services/season.service';\nimport { LocalStorage } from 'ngx-store';\nimport { SELECTED_TOURNAMENT_KEY } from './components/tournament/tournament.component';\nimport { AppsettingsService } from './services/appsettings.service';\nimport { Apollo } from 'apollo-angular';\nimport { GraphqlService } from './services/graphql.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private ranking: RankingGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private tournamentGQL: TournamentGQL,\n    public seasonService: SeasonService,\n    private graphqlService: GraphqlService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService) {\n  }\n  async ngOnInit() {\n\n    this.graphqlService.createApolloLink();\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n      this.graphqlSubscriptionService.connect();\n    }\n\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.appsettingsService.appsettings.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n\n  async refresh() {\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.ranking.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.matchPlanGQL.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.tournamentId) {\n      await this.tournamentGQL.fetch({ id: this.tournamentId }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n      \n        \n          refresh\n        \n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                   -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                              refresh                                  Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebStorageModule } from 'ngx-store';\nimport { AppsettingsService } from './services/appsettings.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function loadAppsettingsFactory(provider: AppsettingsService) {\n  return () => provider.init();\n}\n\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    WebStorageModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadAppsettingsFactory,\n      deps: [AppsettingsService], multi: true\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppsettingsModel.html":{"url":"interfaces/AppsettingsModel.html","title":"interface - AppsettingsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppsettingsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        googleMapsApiKey\n                                \n                                \n                                        graphqlUrl\n                                \n                                \n                                        graphqlWsUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleMapsApiKey\n                                    \n                                \n                                \n                                    \n                                        googleMapsApiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlWsUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlWsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppsettingsService.html":{"url":"injectables/AppsettingsService.html","title":"injectable - AppsettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppsettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appsettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                loadAppsettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appsettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppsettingsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(ACCESS_TOKEN_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelMatchDialogComponent.html":{"url":"components/CancelMatchDialogComponent.html","title":"component - CancelMatchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelMatchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cancel-match-dialog\n            \n\n            \n                styleUrls\n                ./cancel-match-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cancel-match-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelMatch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dialogRef: MatDialogRef, cancelMatchGQL: CancelMatchGQL, translateService: TranslateService, notify: NotificationService, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelMatchGQL\n                                                  \n                                                        \n                                                                        CancelMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cancelMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelMatch(reason: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Match, CancelMatchGQL, MatchPlanGQL } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { SeasonService } from 'src/app/services/season.service';\n\n@Component({\n  selector: 'app-cancel-match-dialog',\n  templateUrl: './cancel-match-dialog.component.html',\n  styleUrls: ['./cancel-match-dialog.component.css']\n})\nexport class CancelMatchDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    public dialogRef: MatDialogRef,\n    private cancelMatchGQL: CancelMatchGQL,\n    private translateService: TranslateService,\n    private notify: NotificationService,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async cancelMatch(reason: string) {\n    // TODO: move to MatchServc\n    try {\n      await this.cancelMatchGQL.mutate({\n        match_id: this.match.id,\n        reason: reason\n      }, {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.seasonService.currentSeason.getValue().id}\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CANCEL_MATCH_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CANCEL_MATCH_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'CANCEL_MATCH' | translate }}\n    \n    \n      {{ match.home_team.name}} - {{ match.guest_team.name}}\n    \n  \n\n\n  \n    \n    {{reason.value.length}} / 500\n  \n\n\n  {{ 'BUTTON.CANCEL' | translate }} \n  {{ 'BUTTON.CANCEL_MATCH' | translate }} \n\n    \n\n    \n                \n                    ./cancel-match-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'CANCEL_MATCH\\' | translate }}              {{ match.home_team.name}} - {{ match.guest_team.name}}                {{reason.value.length}} / 500    {{ \\'BUTTON.CANCEL\\' | translate }}   {{ \\'BUTTON.CANCEL_MATCH\\' | translate }} '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelMatchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CancelMatchGQL.html":{"url":"injectables/CancelMatchGQL.html","title":"injectable - CancelMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CancelMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1068\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ContactComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ContactComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         {{ 'CONTACT' | translate }}\n\n  \n    \n      {{ team.name }}\n    \n    \n      \n    \n  \n  \n    \n      {{ data.pitch.label }}\n    \n    \n      \n    \n  \n\n\n  {{ 'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'CONTACT\\' | translate }}            {{ team.name }}                                {{ data.pitch.label }}                      {{ \\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactComponentData.html":{"url":"interfaces/ContactComponentData.html","title":"interface - ContactComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/contact/contact.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pitch\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team.Fragment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1251\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePitchDialogComponent.html":{"url":"components/CreatePitchDialogComponent.html","title":"component - CreatePitchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePitchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-pitch-dialog\n            \n\n            \n                styleUrls\n                ./create-pitch-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-pitch-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialogRef: MatDialogRef, pitchService: PitchService, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Pitch } from 'src/api/graphql';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-create-pitch-dialog',\n  templateUrl: './create-pitch-dialog.component.html',\n  styleUrls: ['./create-pitch-dialog.component.css']\n})\nexport class CreatePitchDialogComponent implements OnInit {\n\n  newPitchFormControl: FormControl;\n  newPitch = {};\n  newPitchPlaceFormGroup: any;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private pitchService: PitchService,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n  \n  async createNewPitch() {\n    try {\n      await this.pitchService.createNewPitch({\n        ...this.newPitch,\n        label: this.newPitchFormControl.value\n      });\n      this.dialogRef.close();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_PITCH_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_PITCH_ERROR'), error);\n    }\n  }\n  checkNewPitchName() {\n    this.pitchService.allPitches.subscribe(\n      (pitches) => {\n        const pitch = pitches.find(p => p.label === this.newPitchFormControl.value);\n        if (pitch) {\n          this.newPitchFormControl.setErrors({ pitchexist: true });\n        } else {\n          this.newPitchFormControl.setErrors(null);\n          this.newPitchFormControl.updateValueAndValidity();\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ 'NEW_PITCH_LABEL' | translate }}\n    \n      \n      \n        ERRORS.PITCH_EXIST\n      \n      PITCH_REQUIRED\n      \n    \n    \n      \n    \n    \n      \n        {{'BUTTON.NEXT' | translate}}\n      \n    \n  \n  \n    \n      {{ 'NEW_PITCH_ADRESS' | translate}}\n      \n        \n      \n      \n        \n          {{'BUTTON.BACK' | translate}}\n        \n        \n          {{'BUTTON.CREATE_PITCH' | translate}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./create-pitch-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'NEW_PITCH_LABEL\\' | translate }}                        ERRORS.PITCH_EXIST            PITCH_REQUIRED                                          {{\\'BUTTON.NEXT\\' | translate}}                        {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                            {{\\'BUTTON.BACK\\' | translate}}                          {{\\'BUTTON.CREATE_PITCH\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePitchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePitchGQL.html":{"url":"injectables/CreatePitchGQL.html","title":"injectable - CreatePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreatePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1189\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1212\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1357\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1370\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1393\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeletePitchGQL.html":{"url":"injectables/DeletePitchGQL.html","title":"injectable - DeletePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeletePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1151\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditContactComponent.html":{"url":"components/EditContactComponent.html","title":"component - EditContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-contact/edit-contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-contact\n            \n\n            \n                styleUrls\n                ./edit-contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitContactChanged\n                            \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        contactChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitContactChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitContactChanged(firstName: string, lastName: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserGQL, UpdateTeamContactGQL, Contact } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  @Output() contactChanged = new EventEmitter();\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n\n  constructor(\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  emitContactChanged(firstName: string, lastName: string, email: string, phone: string) {\n    this.contactChanged.emit({\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      phone: phone\n    });\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.SAVE' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                    {{ \\'BUTTON.SAVE\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditPitchContactDialogComponent.html":{"url":"components/EditPitchContactDialogComponent.html","title":"component - EditPitchContactDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditPitchContactDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-pitch-contact-dialog\n            \n\n            \n                styleUrls\n                ./edit-pitch-contact-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-pitch-contact-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contactChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitch: Pitch.Fragment, notify: NotificationService, dialogRef: MatDialogRef, translateService: TranslateService, updatePitchContactGQL: UpdatePitchContactGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                  \n                                                        \n                                                                    Pitch.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updatePitchContactGQL\n                                                  \n                                                        \n                                                                        UpdatePitchContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            contactChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contactChanged(contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { Pitch, Contact, UpdatePitchContactGQL } from 'src/api/graphql';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-edit-pitch-contact-dialog',\n  templateUrl: './edit-pitch-contact-dialog.component.html',\n  styleUrls: ['./edit-pitch-contact-dialog.component.css']\n})\nexport class EditPitchContactDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public pitch: Pitch.Fragment,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private updatePitchContactGQL: UpdatePitchContactGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async contactChanged(contact: Contact.Fragment) {\n    try {\n      await this.updatePitchContactGQL.mutate(\n        {\n          pitch_id: this.pitch.id,\n          ...contact\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        {{pitch.label}}\n\n  \n\n    \n\n    \n                \n                    ./edit-pitch-contact-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{pitch.label}}  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditPitchContactDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRankingPenaltyComponent.html":{"url":"components/EditRankingPenaltyComponent.html","title":"component - EditRankingPenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRankingPenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-ranking-penalty\n            \n\n            \n                styleUrls\n                ./edit-ranking-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-ranking-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                penaltyPoints\n                            \n                            \n                                penaltyReason\n                            \n                            \n                                selectedTeamId\n                            \n                            \n                                teamSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                savePenalty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: EditRankingPenaltyComponentData, addPenaltyGQL: AddRankingPenaltyGQL, dialogRef: MatDialogRef, notify: NotificationService, seasonPenaltiesGQL: SeasonPenaltiesGQL, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        EditRankingPenaltyComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addPenaltyGQL\n                                                  \n                                                        \n                                                                        AddRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            savePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePenalty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditRankingPenaltyComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyReason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSelect\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('teamSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n        refetchQueries: [\n          {\n            query: this.seasonPenaltiesGQL.document,\n            variables: {id: this.data.season.id}\n          }\n        ]\n      }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n  {{ 'BUTTON.SAVE' | translate }}\n\n    \n\n    \n                \n                    ./edit-ranking-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ team.name }}                                                                                                {{ \\'BUTTON.SAVE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRankingPenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditRankingPenaltyComponentData.html":{"url":"interfaces/EditRankingPenaltyComponentData.html","title":"interface - EditRankingPenaltyComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditRankingPenaltyComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        penalty\n                                \n                                \n                                        season\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        penalty\n                                    \n                                \n                                \n                                    \n                                        penalty:     Penalty.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Penalty.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:     SeasonPenalties.Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SeasonPenalties.Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n        refetchQueries: [\n          {\n            query: this.seasonPenaltiesGQL.document,\n            variables: {id: this.data.season.id}\n          }\n        ]\n      }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserDialogComponent.html":{"url":"components/EditUserDialogComponent.html","title":"component - EditUserDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-dialog\n            \n\n            \n                styleUrls\n                ./edit-user-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, authService: AuthenticationService, createUserGQL: CreateUserGQL, usersGQL: AllUsersGQL, notify: NotificationService, dialogRef: MatDialogRef, updateUserGQL: UpdateUserGQL, user: User.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateUserGQL\n                                                  \n                                                        \n                                                                        UpdateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { UserRole, CreateUserGQL, AllUsersGQL, User, UpdateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from 'src/app/services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { MatSelectChange, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.css']\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL,\n    private usersGQL: AllUsersGQL,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private updateUserGQL: UpdateUserGQL,\n    @Inject(MAT_DIALOG_DATA) public user: User.Fragment,\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    if (!this.user) {\n      this.password = new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]);\n    }\n    if (this.user) {\n      this.email.setValue(this.user.email);\n      this.firstName.setValue(this.user.first_name);\n      this.lastName.setValue(this.user.last_name);\n      this.userRole = this.user.role;\n      this.userTeamList = this.user.teams.map(t => t.id);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_USER_ERROR'), error);\n    }\n  }\n\n  async updateUser() {\n    try {\n      await this.updateUserGQL.mutate(\n        {\n          user_id: this.user.id,\n          email: this.email.value.toLowerCase(),\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('UPDATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('UPDATE_USER_ERROR'), error);\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.ADD_USER' | translate}}\n  \n  \n  {{ 'BUTTON.UPDATE_USER' | translate}}\n\n  \n    {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n  \n\n    \n\n    \n                \n                    ./edit-user-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                    {{ \\'BUTTON.ADD_USER\\' | translate}}      {{ \\'BUTTON.UPDATE_USER\\' | translate}}      {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nshowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { CreatePitchDialogComponent } from '../create-pitch-dialog/create-pitch-dialog.component';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    private dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  showCreateNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                    {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  async onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      try {\n        await this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score);\n        this.notify.showSuccessNotification(this.translateService.instant('EDIT_RESULT_SUCCESS'));\n        this.dialogRef.close(true);\n      } catch (error) {\n        this.notify.showSuccessNotification(this.translateService.instant('EDIT_RESULT_ERROR'), error);\n      }\n    } else {\n      this.notify.showSuccessNotification(this.translateService.instant('ENTER_VALID_RESULT'));\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndSeasonGQL.html":{"url":"injectables/EndSeasonGQL.html","title":"injectable - EndSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1296\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1446\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/components/shared/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule } from 'apollo-angular';\nimport { HttpLinkModule } from 'apollo-angular-link-http';\nimport { GraphqlService } from './services/graphql.service';\nimport { GraphqlSubscriptionService } from './services/graphql-subscription.service';\n\n@NgModule({\n  exports: [\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [\n    GraphqlSubscriptionService,\n    GraphqlService\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApolloLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo, httpLink: HttpLink, authService: AuthenticationService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService, notify: NotificationService, translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpLink\n                                                  \n                                                        \n                                                                    HttpLink\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createApolloLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApolloLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AppsettingsService } from './appsettings.service';\nimport { ApolloLink, split } from 'apollo-link';\nimport { AuthenticationService } from './authentication.service';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { persistCache } from 'apollo-cache-persist';\nimport { GraphqlSubscriptionService } from './graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\nimport { NotificationService } from './notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlService {\n\n  constructor(\n    private apollo: Apollo,\n    private httpLink: HttpLink,\n    private authService: AuthenticationService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService,\n    private notify: NotificationService,\n    private translationService: TranslateService\n  ) {\n  }\n\n  createApolloLink() {\n    const http = this.httpLink.create({ uri: this.appsettingsService.appsettings.graphqlUrl });\n\n    const afterwareLink = new ApolloLink((operation, forward) => {\n      return forward(operation).map(response => {\n        const { response: { headers } } = operation.getContext();\n        if (headers) {\n          const token = headers.get('x-token');\n          if (token) {\n            this.authService.accessToken = token;\n          }\n        }\n        return response;\n      });\n    });\n\n    const errorHandler = onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}`,\n          ),\n        );\n      }\n      if (networkError) {\n        switch (networkError['status']) {\n          case 401:\n            this.authService.logout();\n            break;\n          default:\n            this.notify.showErrorNotification(this.translationService.instant('UNKNOWN_NETWORK_ERROR'), networkError['statusText']);\n        }\n      }\n    });\n\n    const auth = setContext((_, { headers }) => {\n      if (!headers) {\n        headers = new HttpHeaders();\n      }\n      const token = this.authService.accessToken;\n      if (token) {\n        return {\n          headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n        };\n      } else {\n        return {};\n      }\n    });\n\n    let link = errorHandler.concat(afterwareLink).concat(auth).concat(http);\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n\n      this.graphqlSubscriptionService.subscriptionClient = new SubscriptionClient(\n        this.appsettingsService.appsettings.graphqlWsUrl,\n        {\n          lazy: true,\n          reconnect: true,\n          reconnectionAttempts: 2\n        });\n      const wsClient = new WebSocketLink(this.graphqlSubscriptionService.subscriptionClient);\n\n      link = split(\n        // split based on operation type\n        ({ query }) => {\n          const { kind, operation } = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        },\n        wsClient,\n        link,\n      );\n    }\n    const cache = new InMemoryCache(\n      {\n        addTypename: true,\n        cacheRedirects: {\n          Query: {\n            allSeasons: (t, args, { getCacheKey }) => {\n              return getCacheKey({ __typename: 'Season' });\n            }\n          },\n        }\n      }\n    );\n    if (environment.persistCache) {\n      persistCache({\n        cache,\n        storage: window.localStorage,\n        key: 'graphql-cache'\n      });\n    }\n    this.apollo.create({\n      link: link,\n      cache: cache\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                            \n                                    Public\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:22\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                            \n                                storedLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storedLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(LANG_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\nimport { LocalStorage } from 'ngx-store';\n\nconst LANG_KEY = 'LANG';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  @LocalStorage(LANG_KEY) storedLang: string;\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    if (!this.storedLang) {\n      this.storedLang = this.translateService.getBrowserLang();\n    }\n    if (!this.storedLang) {\n      this.storedLang = 'de';\n    }\n    this.changeLang(this.storedLang);\n  }\n\n  changeLang(lang: string) {\n    this.translateService.use(lang);\n    this.storedLang = lang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1463\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1055\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    try {\n      this.error = false;\n      await this.authenticationService.loginAsync(this.loginForm.value);\n      this.dialogRef.close();\n    } catch (error) {\n      this.error = true;\n      this.loginForm.controls.password.setValue('');\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.setErrors({ required: true });\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n      }\n    } else {\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.disable();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n      \n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n  \n  \n    \n      {{ 'FORGOT_PASSWORD' | translate}}\n    \n    \n      {{ 'BUTTON.LOGIN' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-error {\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    USERNAME_REQUIRED                                                                              PASSWORD_REQUIRED                                remove_red_eye                                          {{ \\'FORGOT_PASSWORD\\' | translate}}              {{ \\'BUTTON.LOGIN\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagePenaltyComponent.html":{"url":"components/ManagePenaltyComponent.html","title":"component - ManagePenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagePenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-penalty\n            \n\n            \n                styleUrls\n                ./manage-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                penalties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPenalties\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removePenalty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeasonId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonPenaltiesGQL: SeasonPenaltiesGQL, removePenaltiesGQL: RemoveRankingPenaltyGQL, i18Service: I18Service, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removePenaltiesGQL\n                                                  \n                                                        \n                                                                        RemoveRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPenalties\n                        \n                        \n                    \n                \n            \n            \n                \nloadPenalties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    season\n                                    \n                                            SeasonPenalties.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePenalty(penalty: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penalties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { SeasonPenaltiesGQL, SeasonPenalties, Penalty, RemoveRankingPenaltyGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditRankingPenaltyComponent } from './edit-ranking-penalty/edit-ranking-penalty.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manage-penalty',\n  templateUrl: './manage-penalty.component.html',\n  styleUrls: ['./manage-penalty.component.css']\n})\nexport class ManagePenaltyComponent implements OnInit, OnChanges {\n\n  @Input() manageSeasonId: string;\n\n  penalties: Observable;\n\n  constructor(\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private removePenaltiesGQL: RemoveRankingPenaltyGQL,\n    public i18Service: I18Service,\n    private dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.loadPenalties();\n  }\n\n  ngOnChanges() {\n    this.loadPenalties();\n  }\n\n  loadPenalties() {\n    this.penalties = this.seasonPenaltiesGQL.watch({ id: this.manageSeasonId }).valueChanges.pipe(\n      map(({ data }) => data.season)\n    );\n  }\n\n  openEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(EditRankingPenaltyComponent, {\n      data: {\n        season: season,\n        penalty: penalty\n      }\n    });\n  }\n\n  async removePenalty(penalty: Penalty.Fragment) {\n    try {\n      await this.removePenaltiesGQL.mutate({\n        ranking_penalty_id: penalty.id,\n        season_id: this.manageSeasonId\n      }, {\n        refetchQueries: [\n          {\n            query: this.seasonPenaltiesGQL.document,\n            variables: {id: this.manageSeasonId}\n          }\n        ]\n      }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('REMOVE_PENALTY_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('REMOVE_PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'TEAM' | translate }}\n            \n            \n                {{ 'REASON' | translate }}\n            \n            \n                {{ 'DATE' | translate }}\n            \n            \n                {{ 'POINTS' | translate }}\n            \n            \n                \n                    \n                        add\n                    \n                \n            \n        \n        \n            \n                {{ penalty.team.name }}\n            \n            \n                {{ penalty.reason }}\n            \n            \n                {{ penalty.created_at | date:'medium':'':i18Service.currentLang }}\n            \n            \n                {{ penalty.points }}\n            \n            \n                \n                    \n                        edit\n                    \n                 -->\n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./manage-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'TEAM\\' | translate }}                                        {{ \\'REASON\\' | translate }}                                        {{ \\'DATE\\' | translate }}                                        {{ \\'POINTS\\' | translate }}                                                                                    add                                                                                            {{ penalty.team.name }}                                        {{ penalty.reason }}                                        {{ penalty.created_at | date:\\'medium\\':\\'\\':i18Service.currentLang }}                                        {{ penalty.points }}                                                                                    edit                                     -->                                                            delete                                                                            '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagePenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagepitchesComponent.html":{"url":"components/ManagepitchesComponent.html","title":"component - ManagepitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagepitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managepitches/managepitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managepitches\n            \n\n            \n                styleUrls\n                ./managepitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managepitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewPitch\n                            \n                            \n                                    Async\n                                deletePitch\n                            \n                            \n                                editPitchContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, dialog: MatDialog, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managepitches/managepitches.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPitchContact\n                        \n                        \n                    \n                \n            \n            \n                \neditPitchContact(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialog } from '@angular/material';\nimport { EditPitchContactDialogComponent } from '../../shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from '../../shared/create-pitch-dialog/create-pitch-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-managepitches',\n  templateUrl: './managepitches.component.html',\n  styleUrls: ['./managepitches.component.css']\n})\nexport class ManagepitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService,\n    private dialog: MatDialog,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async deletePitch(pitch: Pitch.Fragment) {\n    try {\n      await this.pitchService.deletePitch(pitch.id);\n      this.notify.showSuccessNotification(this.translateService.instant('DELETE_PITCH_SUCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('DELETE_PITCH_ERROR'), error);\n    }\n  }\n\n  createNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n\n  editPitchContact(pitch: Pitch.Fragment) {\n    this.dialog.open(EditPitchContactDialogComponent,\n      {\n        data: pitch\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'PITCH' | translate }}\n      \n      \n        {{ 'CONTACT' | translate }}\n      \n      \n        \n          \n            add\n          \n        \n      \n    \n    \n      \n        location_on\n        \n          {{ pitch.label }}\n        \n      \n      \n        \n          \n        \n      \n      \n        \n          \n            perm_contact_calendar\n          \n        \n        \n          \n            delete\n          \n        \n      \n      \n    \n  \n  \n      \n    \n\n\n    \n\n    \n                \n                    ./managepitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PITCH\\' | translate }}                    {{ \\'CONTACT\\' | translate }}                                          add                                              location_on                  {{ pitch.label }}                                                                                        perm_contact_calendar                                                delete                                                '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagepitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageteamsComponent.html":{"url":"components/ManageteamsComponent.html","title":"component - ManageteamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageteamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/manageteams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageteams\n            \n\n            \n                styleUrls\n                ./manageteams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageteams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/manageteams.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\n\n@Component({\n  selector: 'app-manageteams',\n  templateUrl: './manageteams.component.html',\n  styleUrls: ['./manageteams.component.css']\n})\nexport class ManageteamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team, minWidth: '50vw' });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              edit\n            \n          \n          {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./manageteams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        edit                                {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageteamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  manageTournamentId: string;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          {query: this.allTournamentsQGL.document}\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length;\n          } else {\n            this.manageTournamentRoundCount = 0;\n          }\n          this.createRoundNr = this.manageTournamentRoundCount;\n          return result.data.tournament.rounds;\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n    \n    \n      \n        {{ mt.number }}. {{ 'ROUND' | translate }}\n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n   -->\n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                {{ mt.number }}. {{ \\'ROUND\\' | translate }}                              {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                          {{ \\'MATCH\\' | translate }} {{ game }}       -->'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCancelMatchDialog\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, notify: NotificationService, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCancelMatchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenCancelMatchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { CancelMatchDialogComponent } from '../cancel-match-dialog/cancel-match-dialog.component';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: Match.Fragment;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public notify: NotificationService,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: {\n        teams: [\n          this.match.home_team,\n          this.match.guest_team\n        ],\n        pitch: this.match.pitch\n      },\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  openCancelMatchDialog() {\n    const dialogRef = this.dialog.open(CancelMatchDialogComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    \n                        access_time\n                    \n                    \n                        \n                            {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                            {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                        \n                        {{ 'NO_TIME_SET' | translate }}\n                    \n                    \n                        location_off\n                        location_on\n                    \n                    \n                        {{ 'NO_PTICH_SET' | translate }}\n                    \n                    \n                        \n                            {{ match.pitch.label }}\n                        \n                    \n                \n                \n                    \n                        {{ 'MATCH_CANCELED_AT' | translate }} {{ match.cancelled_at | date:'short':'':i18Service.currentLang }}\n                    \n                    \n                        {{ match.cancellation_reason }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n    \n        {{ 'BUTTON.CANCEL_MATCH' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                                                    access_time                                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                             {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                                {{ \\'NO_TIME_SET\\' | translate }}                                                                location_off                        location_on                                                                {{ \\'NO_PTICH_SET\\' | translate }}                                                                                            {{ match.pitch.label }}                                                                                                                        {{ \\'MATCH_CANCELED_AT\\' | translate }} {{ match.cancelled_at | date:\\'short\\':\\'\\':i18Service.currentLang }}                                                                {{ match.cancellation_reason }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}                {{ \\'BUTTON.CANCEL_MATCH\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1477\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1494\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'short':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate'}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'short\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\'}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, rankingQGL: RankingGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL, seasonService: SeasonService, matchPlanGQL: MatchPlanGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, RankingGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, MatchPlanGQL, Match, Pitch } from '../../api/graphql';\nimport { SeasonService } from './season.service';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private rankingQGL: RankingGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n    private seasonService: SeasonService,\n    private matchPlanGQL: MatchPlanGQL\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      (resolve, reject) => {\n        this.submitResultGQL.mutate(\n          {\n            match_id: matchId,\n            ...result\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    ...result\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                selectedMatchDayId\n                            \n                            \n                                selectedTeamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePlayed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(HIDE_PLAYED_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMatchDayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_MATCHDAY_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TEAM_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:28\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\n\nconst HIDE_PLAYED_KEY = 'HIDE_PLAYED';\nconst SELECTED_MATCHDAY_KEY = 'SELECTED_MATCHDAY';\nconst SELECTED_TEAM_KEY = 'SELECTED_TEAM';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  @LocalStorage(HIDE_PLAYED_KEY) hidePlayed: boolean;\n\n  @LocalStorage(SELECTED_MATCHDAY_KEY) selectedMatchDayId = '0';\n\n  @LocalStorage(SELECTED_TEAM_KEY) selectedTeamId = '0';\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n\n  matchUpdated(matchId: string) {\n    console.log(matchId);\n    this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).refetch();\n    this.rankingGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).refetch();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                          '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatCardModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatCardModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.accessToken = params['token'];\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.logout();\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n      this.notify.showSuccessNotification(this.translateService.instant('PASSWORD_CHANGED_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PASSWORD_CHANGED_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorNotification\n                            \n                            \n                                    Private\n                                showNotification\n                            \n                            \n                                showSuccessNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showNotification(title: string, message: string, type: \"danger\" | \"success\", duration?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"danger\" | \"success\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2500\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../components/shared/snackbar/snackbar.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  defaultDuration = 2500;\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  showSuccessNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'success');\n  }\n\n  showErrorNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'danger');\n  }\n\n  private showNotification(title: string, message: string, type: 'danger' | 'success', duration?: number) {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        title: title,\n        message: message\n      },\n      duration: duration || this.defaultDuration,\n      panelClass: ['alert', `alert-${type}`]\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1094\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1081\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                    Async\n                                deletePitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesGQL: PitchesGQL, createPitchGQL: CreatePitchGQL, deletePitchGQL: DeletePitchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesGQL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createPitchGQL\n                                                  \n                                                        \n                                                                        CreatePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deletePitchGQL\n                                                  \n                                                        \n                                                                        DeletePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePitch(pitchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL, CreatePitchGQL, DeletePitchGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuidv4 from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private pitchesGQL: PitchesGQL,\n    private createPitchGQL: CreatePitchGQL,\n    private deletePitchGQL: DeletePitchGQL\n  ) {\n  }\n\n  async deletePitch(pitchId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deletePitchGQL.mutate({\n            pitch_id: pitchId\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  async createNewPitch(pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.createPitchGQL.mutate({\n            id: uuidv4(),\n            label: pitch.label,\n            longitude: pitch.location_longitude,\n            latitude: pitch.location_latitude\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1534\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1548\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveRankingPenaltyGQL.html":{"url":"injectables/RemoveRankingPenaltyGQL.html","title":"injectable - RemoveRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1132\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1238\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.dialogRef.close();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1344\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RescheduleMatchDayGQL.html":{"url":"injectables/RescheduleMatchDayGQL.html","title":"injectable - RescheduleMatchDayGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RescheduleMatchDayGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1267\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1042\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonPenaltiesGQL.html":{"url":"injectables/SeasonPenaltiesGQL.html","title":"injectable - SeasonPenaltiesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonPenaltiesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1511\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentSeason\n                            \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_SEASON_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\nimport { LocalStorage } from 'ngx-store';\n\nconst SELECTED_SEASON_KEY = 'SELECTED_SEASON';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  @LocalStorage(SELECTED_SEASON_KEY) _currentSeason: AllSeasonsList.AllSeasons;\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              { query: this.allSeasonsListGQL.document }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                SeasonState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterStates\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [SeasonState.Progress, SeasonState.Ended]\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SeasonState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterStates: Array = [SeasonState.Progress, SeasonState.Ended];\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  SeasonState = SeasonState;\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          let p = data.allSeasons.filter(s => this.filterStates.some(x => x === s.state));\n          p = p.sort((a, b) => {\n\n            const aState = a.state.toLocaleLowerCase();\n            const bState = b.state.toLocaleLowerCase();\n            if (aState > bState) {\n              return -1;\n            }\n            if (aState  bName) {\n              return 1;\n            }\n            if (aName \n    \n\n    \n        \n  \n    \n      {{ season.name }} {{ season.state !== SeasonState.Progress ? ('(' + ('SeasonState.' + season.state | translate) + ')') : ''  }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }} {{ season.state !== SeasonState.Progress ? (\\'(\\' + (\\'SeasonState.\\' + season.state | translate) + \\')\\') : \\'\\'  }}      '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './match/match.component';\nimport { MaterialModule } from '../../material.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ContactPersonComponent } from './contact-person/contact-person.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { EditPitchContactDialogComponent } from './edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from './create-pitch-dialog/create-pitch-dialog.component';\nimport { CancelMatchDialogComponent } from './cancel-match-dialog/cancel-match-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent,\n    EditContactComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    EditContactComponent,\n    OwlNativeDateTimeModule,\n    CancelMatchDialogComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.title }}\n\n\n    {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}    {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1283\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1021\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPenaltyForTeam\n                            \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, ranking: RankingGQL, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPenaltyForTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Penalty.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL, Team, Penalty } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n  error: boolean;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private ranking: RankingGQL,\n    private translateService: TranslateService\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n  }\n\n  getRanking() {\n    this.error = false;\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map((result) => result.data.season.ranking)\n    );\n  }\n\n  getPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment): Penalty.Fragment[] {\n    const p = penalties.filter(t => t.team.id === team.id);\n    return p.length === 0 ? null : p;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              \n                {{ pos.points }}\n              \n              \n                \n                  \n                    warning\n                  \n                \n               -->\n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})                              {{ pos.points }}                                                                                  warning                                                 -->                                                  {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                              '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guest_team_id\n                                \n                                \n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsQL: TeamsGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsQL\n                                                  \n                                                        \n                                                                        TeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:34\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamsGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private teamsQL: TeamsGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        this.teamsQL.mutate(\n          {\n            id: uuid(),\n            name: teamName\n          },\n          {\n            refetchQueries: [\n              {query: this.allTeamsGQL.document}\n            ]\n          }\n        ).subscribe(\n          async (result) => {\n            resolve();\n          },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    );\n  }\n\n  async renameTeam(teamId: string, newName: string) {\n    try {\n      await this.renameTeamGQL.mutate(\n        {\n          team_id: teamId,\n          new_name: newName\n        },\n        {\n          update: (store, { data }) => {\n            const team: any = store.readFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`\n              }\n            );\n            store.writeFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`,\n                data: {\n                  __typename: 'Team',\n                  ...team,\n                  name: newName\n                }\n              }\n            );\n          },\n        }\n      ).toPromise();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userQGL: UserGQL, authService: AuthenticationService, teamService: TeamService, updateTeamContact: UpdateTeamContactGQL, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { UpdateTeamContactGQL, UserGQL, Contact } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  user = this.authService.user;\n\n  constructor(\n    private userQGL: UserGQL,\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, contact: Contact.Fragment) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          ...contact\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('TEAM_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n                \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                          '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsGQL.html":{"url":"injectables/TeamsGQL.html","title":"injectable - TeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1306\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\n\nexport const SELECTED_TOURNAMENT_KEY = 'SELECTED_TOURNAMENT';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n  }\n\n  matchUpdated(matchId: string) {\n    this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).refetch();\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                              '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1616\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdatePitchContactGQL.html":{"url":"injectables/UpdatePitchContactGQL.html","title":"injectable - UpdatePitchContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdatePitchContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1164\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1319\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserGQL.html":{"url":"injectables/UpdateUserGQL.html","title":"injectable - UpdateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1422\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1630\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n  createNewUser() {\n    this.dialog.open(EditUserDialogComponent);\n  }\n\n  editUser(user: User.Fragment) {\n\n    this.dialog.open(EditUserDialogComponent, {\n      data: user\n    });\n  }\n\n  deleteUser(user: User.Fragment) {\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'USERNAME' | translate }}\n    \n    \n      {{ 'FIRST_NAME' | translate }}\n    \n    \n      {{ 'LAST_NAME' | translate }}\n    \n    \n      {{ 'USER_ROLE' | translate }}\n    \n    \n      {{ 'TEAMS' | translate }}\n    \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{ user.email }}\n    \n    \n      {{ user.first_name }}\n    \n    \n      {{ user.last_name }}\n    \n    \n      {{ user.role }}\n    \n    \n      \n        \n          {{ team.name }}\n        \n      \n    \n    \n      \n        \n          edit\n        \n      \n      \n        \n          delete\n        \n      \n    \n  \n    \n\n    \n                \n                    ./user-list.component.css\n                \n                .border-bottom {\n    border-bottom: 1px solid lightgray;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'USERNAME\\' | translate }}              {{ \\'FIRST_NAME\\' | translate }}              {{ \\'LAST_NAME\\' | translate }}              {{ \\'USER_ROLE\\' | translate }}              {{ \\'TEAMS\\' | translate }}                                add                                {{ user.email }}              {{ user.first_name }}              {{ user.last_name }}              {{ user.role }}                                {{ team.name }}                                              edit                                      delete                    '\n    var COMPONENTS = [{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CancelMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreatePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeletePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EndSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RescheduleMatchDayGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SeasonPenaltiesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdatePitchContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PenaltyFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            loadAppsettingsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managepitches/managepitches.component.ts\n            \n            component\n            ManagepitchesComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            component\n            EditRankingPenaltyComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            interface\n            EditRankingPenaltyComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n            \n            component\n            ManagePenaltyComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/manageteams.component.ts\n            \n            component\n            ManageteamsComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            component\n            AddtournamentroundComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n            \n            component\n            EditUserDialogComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            HIDE_PLAYED_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_MATCHDAY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_TEAM_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n            \n            component\n            CancelMatchDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            interface\n            ContactComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n            \n            component\n            CreatePitchDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-contact/edit-contact.component.ts\n            \n            component\n            EditContactComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n            \n            component\n            EditPitchContactDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            variable\n            SELECTED_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            injectable\n            AppsettingsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            interface\n            AppsettingsModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql.service.ts\n            \n            injectable\n            GraphqlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            variable\n            LANG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            variable\n            SELECTED_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-error : ^1.1.10\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-store : ^2.1.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            loadAppsettingsFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettingsFactory\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettingsFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    37 Components\n                \n            \n        \n        \n            \n                \n                    \n                    50 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nFix loading template on error\nImplement RankingPenalty Display\nRedesign Dialogs\nCleanup Code\nTesting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            HIDE_PLAYED_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            LANG_KEY   (src/.../i18.service.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PenaltyFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            SELECTED_MATCHDAY_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_SEASON_KEY   (src/.../season.service.ts)\n                        \n                        \n                            SELECTED_TEAM_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_TOURNAMENT_KEY   (src/.../tournament.component.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCESS_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACCESS_TOKEN'\n                        \n                    \n\n\n            \n        \n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PenaltyFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/matchplan/matchplan.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_PLAYED_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HIDE_PLAYED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_MATCHDAY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_MATCHDAY'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TEAM_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TEAM'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/i18.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANG_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LANG'\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/season.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_SEASON'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tournament/tournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TOURNAMENT'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
